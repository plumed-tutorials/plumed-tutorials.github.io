{
  "vimlink" : "https://www.plumed.org/doc-master/user-doc/html/vim",
  "replicalink" : "https://www.plumed.org/doc-master/user-doc/html/parsing.html",
  "ABMD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ABMD",
    "description" : "Adds a ratchet-and-pawl like restraint on one or more variables.",
    "module" : "bias",
    "displayname" : "ABMD",
     "dois" : ["10.1063/1.478259", "10.1016/j.bpj.2010.01.047", "10.1063/1.3523345"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "TO" : { "type": "compulsory", "description": "The array of target values", "multiple": 0, "actionlink": "none"},
       "KAPPA" : { "type": "compulsory", "description": "The array of force constants", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "Array of starting values for the bias (set rho_m(t), otherwise it is set using the current value of ARG)", "multiple": 0, "actionlink": "none"},
       "NOISE" : { "type": "optional", "description": "Array of white noise intensities (add a temperature to the ABMD)", "multiple": 0, "actionlink": "none"},
       "SEED" : { "type": "optional", "description": "Array of seeds for the white noise (add a temperature to the ABMD)", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "force2" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the squared force due to this bias potential"
         },
         "_min" : {
           "flag": "default",
           "type": "scalar",
           "description": "one or multiple instances of this quantity can be referenced elsewhere in the input file"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n                     TO - The array of target values \n                  KAPPA - The array of force constants. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                    MIN - Array of starting values for the bias (set rho_m(t), \n                          otherwise it is set using the current value of ARG) \n                  NOISE - Array of white noise intensities (add a temperature to the \n                          ABMD) \n                   SEED - Array of seeds for the white noise (add a temperature to \n                          the ABMD) \n\n"
  },
  "ACCUMULATE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ACCUMULATE",
    "description" : "Sum the elements of this value over the course of the trajectory",
    "module" : "generic",
    "displayname" : "ACCUMULATE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the label of the argument that is being added to on each timestep", "multiple": 0, "actionlink": "none", "argtype": "scalar/grid"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the data should be collected and added to the quantity being averaged", "multiple": 0, "actionlink": "none", "default": "1"},
       "CLEAR" : { "type": "compulsory", "description": " the frequency with which to clear all the accumulated data", "multiple": 0, "actionlink": "none", "default": "0"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/grid",
           "description": "a sum calculated from the time series of the input quantity"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label of the argument that is being added to on each \n                          timestep \n                 STRIDE - ( default=1 ) the frequency with which the data should be \n                          collected and added to the quantity being averaged \n                  CLEAR - ( default=0 ) the frequency with which to clear all the \n                          accumulated data. The default value of 0 implies that all the data will \n                          be used and that the grid will never be cleared \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \n\n"
  },
  "ADAPTIVE_PATH": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ADAPTIVE_PATH",
    "description" : "Compute path collective variables that adapt to the lowest free energy path connecting states A and B.",
    "module" : "mapping",
    "displayname" : "ADAPTIVE_PATH",
     "dois" : ["10.1063/1.2432340", "10.1103/PhysRevLett.109.020601"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "compulsory", "description": "a pdb file containing the set of reference configurations", "multiple": 0, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " the manner in which distances are calculated", "multiple": 0, "actionlink": "none", "default": "OPTIMAL-FAST"},
       "ARG" : { "type": "optional", "description": "the list of arguments you would like to use in your definition of the path", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "COEFFICIENTS" : { "type": "optional", "description": "the coefficients of the displacements along each argument that should be used when calculating the euclidean distance", "multiple": 0, "actionlink": "none"},
       "NOSPATH" : { "type": "flag", "description": " do not calculate the spath CV", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOZPATH" : { "type": "flag", "description": " do not calculate the zpath CV", "multiple": 0, "actionlink": "none", "default": "off"},
       "GPATH" : { "type": "flag", "description": " calculate the trigonometric path", "multiple": 0, "actionlink": "none", "default": "off"},
       "PROPERTY" : { "type": "optional", "description": "read in path coordinates by finding option with this label in remark of pdb frames", "multiple": 0, "actionlink": "none"},
       "FIXED" : { "type": "compulsory", "description": "the positions in the list of input frames of the two path nodes whose positions remain fixed during the path optimization", "multiple": 0, "actionlink": "none"},
       "HALFLIFE" : { "type": "compulsory", "description": " the number of MD steps after which a previously measured path distance weighs only 50 percent in the average", "multiple": 0, "actionlink": "none", "default": "-1"},
       "UPDATE" : { "type": "compulsory", "description": "the frequency with which the path should be updated", "multiple": 0, "actionlink": "none"},
       "TOLERANCE" : { "type": "compulsory", "description": " the tolerance to use for the path updating algorithm that makes all frames equidistant", "multiple": 0, "actionlink": "none", "default": "1E-6"},
       "WFILE" : { "type": "optional", "description": "file on which to write out the path", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "compulsory", "description": " the format to use for output files", "multiple": 0, "actionlink": "none", "default": "%f"},
       "WSTRIDE" : { "type": "compulsory", "description": " frequency with which to write out the path", "multiple": 0, "actionlink": "none", "default": "0,"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the position along and from the adaptive path"
         }
       }
    },
    "needs" : ["DRMSD", "RMSD", "LOWEST", "GPATH", "EUCLIDEAN_DISTANCE", "CUSTOM", "SUM", "COMBINE", "NORMALIZED_EUCLIDEAN_DISTANCE", "PDB2CONSTANT", "CONSTANT", "GEOMETRIC_PATH", "AVERAGE_PATH_DISPLACEMENT", "REPARAMETERIZE_PATH", "DUMPPDB", "DISPLACEMENT"],
    "help" : "\nThe following arguments are compulsory: \n\n              REFERENCE - a pdb file containing the set of reference configurations \n                   TYPE - ( default=OPTIMAL-FAST ) the manner in which distances are \n                          calculated. More information on the different metrics that are \n                          available in PLUMED can be found in the section of the manual on \ref \n                          dists \n                  FIXED - the positions in the list of input frames of the two path \n                          nodes whose positions remain fixed during the path optimization \n               HALFLIFE - ( default=-1 ) the number of MD steps after which a \n                          previously measured path distance weighs only 50 percent in the \n                          average. This option may increase convergence by allowing to forget \n                          the memory of a bad initial guess path. The default is to set \n                          this to infinity \n                 UPDATE - the frequency with which the path should be updated \n              TOLERANCE - ( default=1E-6 ) the tolerance to use for the path updating \n                          algorithm that makes all frames equidistant \n                    FMT - ( default=%f ) the format to use for output files \n                WSTRIDE - ( default=0, ) frequency with which to write out the path \n\nIn addition you may use the following options: \n\n                NOSPATH - ( default=off ) do not calculate the spath CV \n                NOZPATH - ( default=off ) do not calculate the zpath CV \n                  GPATH - ( default=off ) calculate the trigonometric path \n                    ARG - the list of arguments you would like to use in your \n                          definition of the path \n           COEFFICIENTS - the coefficients of the displacements along each argument \n                          that should be used when calculating the euclidean distance \n               PROPERTY - read in path coordinates by finding option with this label \n                          in remark of pdb frames \n                  WFILE - file on which to write out the path \n\n"
  },
  "ALPHABETA": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ALPHABETA",
    "description" : "Measures a distance including pbc between the instantaneous values of a set of torsional angles and set of reference values.",
    "module" : "multicolvar",
    "displayname" : "ALPHABETA",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the atoms involved for each of the torsions you wish to calculate", "multiple": 1, "actionlink": "none"},
       "REFERENCE" : { "type": "optional", "description": "the reference values for each of the torsional angles", "multiple": 1, "actionlink": "none"},
       "COEFFICIENT" : { "type": "optional", "description": "the coefficient for each of the torsional angles", "multiple": 1, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the alpha beta CV"
         }
       }
    },
    "needs" : ["CONSTANT", "TORSION", "COMBINE", "CUSTOM", "SUM"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the atoms involved for each of the torsions you wish to \n                          calculate. Keywords like ATOMS1, ATOMS2, ATOMS3,... should be listed \n                          and one torsion will be calculated for each ATOM keyword you \n                          specify. You can use multiple instances of this keyword i.e. ATOMS1, \n                          ATOMS2, ATOMS3... \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n              REFERENCE - the reference values for each of the torsional angles. If \n                          you use a single REFERENCE value the same reference value is \n                          used for all torsions. You can use multiple instances of this \n                          keyword i.e. REFERENCE1, REFERENCE2, REFERENCE3... \n            COEFFICIENT - the coefficient for each of the torsional angles. If you \n                          use a single COEFFICIENT value the same reference value is used \n                          for all torsional angles. You can use multiple instances of \n                          this keyword i.e. COEFFICIENT1, COEFFICIENT2, COEFFICIENT3... \n\n"
  },
  "ALPHARMSD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ALPHARMSD",
    "description" : "Probe the alpha helical content of a protein structure.",
    "module" : "secondarystructure",
    "displayname" : "ALPHARMSD",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions", "multiple": 0, "actionlink": "none", "default": "off"},
       "MASK" : { "type": "optional", "description": "a vector which is used to determine which elements of the secondary structure variable should be computed", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "RESIDUES" : { "type": "atoms", "description": "this command is used to specify the set of residues that could conceivably form part of the secondary structure", "multiple": 1, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " the manner in which RMSD alignment is performed", "multiple": 0, "actionlink": "none", "default": "DRMSD"},
       "VERBOSE" : { "type": "flag", "description": " write a more detailed output", "multiple": 0, "actionlink": "none", "default": "off"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of a residue segments that are within a certain target distance of this secondary structure type", "multiple": 0, "actionlink": "none"},
       "R_0" : { "type": "optional", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "8"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "12"},
       "ALIGN_STRANDS" : { "type": "flag", "description": " ensure that the two halves of a beta sheet are not broken by the periodic boundaries before doing alignment", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "struct" : {
           "flag": "default",
           "type": "scalar",
           "description": "the vectors containing the rmsd distances between the residues and each of the reference structures"
         },
         "lessthan" : {
           "flag": "default",
           "type": "scalar",
           "description": "the number blocks of residues that have an RMSD from the secondary structure that is less than the threshold"
         },
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "if LESS_THAN is present the RMSD distance between each residue and the ideal alpha helix"
         }
       }
    },
    "needs" : ["SECONDARY_STRUCTURE_RMSD", "SECONDARY_STRUCTURE_DRMSD", "LESS_THAN", "SUM"],
    "help" : "The input trajectory can be in any of the following formats: \n\n               RESIDUES - this command is used to specify the set of residues that \n                          could conceivably form part of the secondary structure. It is \n                          possible to use residues numbers as the various chains and residues \n                          should have been identified else using an instance of the \ref \n                          MOLINFO action. If you wish to use all the residues from all the \n                          chains in your system you can do so by specifying all. \n                          Alternatively, if you wish to use a subset of the residues you can specify \n                          the particular residues you are interested in as a list of \n                          numbers. Please be aware that to form secondary structure elements \n                          your chain must contain at least N residues, where N is \n                          dependent on the particular secondary structure you are interested \n                          in. As such if you define portions of the chain with fewer than \n                          N residues the code will crash. \n\nThe following arguments are compulsory: \n\n                   TYPE - ( default=DRMSD ) the manner in which RMSD alignment is \n                          performed. Should be OPTIMAL, SIMPLE or DRMSD. For more details on the \n                          OPTIMAL and SIMPLE methods see \ref RMSD. For more details on the \n                          DRMSD method see \ref DRMSD. \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                     NN - ( default=8 ) The n parameter of the switching function \n                     MM - ( default=12 ) The m parameter of the switching function \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                VERBOSE - ( default=off ) write a more detailed output \n          ALIGN_STRANDS - ( default=off ) ensure that the two halves of a beta sheet \n                          are not broken by the periodic boundaries before doing \n                          alignment \n                   MASK - a vector which is used to determine which elements of the \n                          secondary structure variable should be computed \n              LESS_THAN - calculate the number of a residue segments that are within \n                          a certain target distance of this secondary structure type. \n                    R_0 - The r_0 parameter of the switching function. \n\n"
  },
  "ANGLE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ANGLE",
    "description" : "Calculate one or multiple angle/s.",
    "module" : "colvar",
    "displayname" : "ANGLE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the list of atoms involved in this collective variable (either 3 or 4 atoms)", "multiple": 1, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the ANGLE involving these atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the list of atoms involved in this collective variable \n                          (either 3 or 4 atoms). For more information on how to specify lists \n                          of atoms see \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n"
  },
  "ANGLES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ANGLES",
    "description" : "Calculate functions of the distribution of angles.",
    "module" : "multicolvar",
    "displayname" : "ANGLES",
    "replacement" : "ANGLE",
     "dois" : ["https://doi.org/10.1063/1.3628676"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "GROUP" : { "type": "atoms", "description": "Calculate angles for each distinct set of three atoms in the group", "multiple": 1, "actionlink": "none"},
       "GROUPA" : { "type": "atoms", "description": "A group of central atoms about which angles should be calculated", "multiple": 1, "actionlink": "none"},
       "GROUPB" : { "type": "atoms", "description": "When used in conjunction with GROUPA this keyword instructs plumed to calculate all distinct angles involving one atom from GROUPA and two atoms from GROUPB", "multiple": 1, "actionlink": "none"},
       "GROUPC" : { "type": "atoms", "description": "This must be used in conjunction with GROUPA and GROUPB", "multiple": 1, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "the switching function specifies that only those bonds that have a length that is less than a certain threshold are considered", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the ANGLE for each set of three atoms that were specified"
         },
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "ANGLE", "COORD_ANGLES"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - Calculate angles for each distinct set of three atoms in \n                          the group \n                 GROUPA - A group of central atoms about which angles should be \n                          calculated \n                 GROUPB - When used in conjunction with GROUPA this keyword instructs \n                          plumed to calculate all distinct angles involving one atom from \n                          GROUPA and two atoms from GROUPB. The atom from GROUPA is the \n                          central atom. \n                 GROUPC - This must be used in conjunction with GROUPA and GROUPB. \n                          All angles involving one atom from GROUPA, one atom from GROUPB \n                          and one atom from GROUPC are calculated. The GROUPA atoms are \n                          assumed to be the central atoms \n\nThe following options are available\n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                 SWITCH - the switching function specifies that only those bonds that \n                          have a length that is less than a certain threshold are \n                          considered \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "ANGLE_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ANGLE_SCALAR",
    "description" : "",
    "module" : "colvar",
    "displayname" : "ANGLE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the list of atoms involved in this collective variable (either 3 or 4 atoms)", "multiple": 1, "actionlink": "none"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the ANGLE involving these atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the list of atoms involved in this collective variable \n                          (either 3 or 4 atoms). For more information on how to specify lists \n                          of atoms see \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n"
  },
  "ANGLE_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ANGLE_VECTOR",
    "description" : "",
    "module" : "colvar",
    "displayname" : "ANGLE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the list of atoms involved in this collective variable (either 3 or 4 atoms)", "multiple": 1, "actionlink": "none"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector that should be used to determine which elements of the vector should be computed", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the ANGLE for each set of specified atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the list of atoms involved in this collective variable \n                          (either 3 or 4 atoms). For more information on how to specify lists \n                          of atoms see \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - the label for a sparse vector that should be used to \n                          determine which elements of the vector should be computed \n\n"
  },
  "ANN": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ANN",
    "description" : "Calculates the ANN-function.",
    "module" : "annfunc",
    "displayname" : "ANN",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "PERIODIC" : { "type": "compulsory", "description": "if the output of your function is periodic then you should specify the periodicity of the function", "multiple": 0, "actionlink": "none"},
       "NUM_LAYERS" : { "type": "compulsory", "description": "number of layers of the neural network", "multiple": 0, "actionlink": "none"},
       "NUM_NODES" : { "type": "compulsory", "description": "numbers of nodes in each layer of the neural network", "multiple": 0, "actionlink": "none"},
       "ACTIVATIONS" : { "type": "compulsory", "description": "activation functions for the neural network", "multiple": 0, "actionlink": "none"},
       "WEIGHTS" : { "type": "optional", "description": "flattened weight arrays connecting adjacent layers, WEIGHTS0 represents flattened weight array connecting layer 0 and layer 1, WEIGHTS1 represents flattened weight array connecting layer 1 and layer 2, ", "multiple": 1, "actionlink": "none"},
       "BIASES" : { "type": "optional", "description": "bias array for each layer of the neural network, BIASES0 represents bias array for layer 1, BIASES1 represents bias array for layer 2, ", "multiple": 1, "actionlink": "none"},
       "output" : {
         "node" : {
           "flag": "default",
           "type": "scalar",
           "description": "components of ANN outputs"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n               PERIODIC - if the output of your function is periodic then you should \n                          specify the periodicity of the function. If the output is not \n                          periodic you must state this using PERIODIC=NO \n             NUM_LAYERS - number of layers of the neural network \n              NUM_NODES - numbers of nodes in each layer of the neural network \n            ACTIVATIONS - activation functions for the neural network \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                WEIGHTS - flattened weight arrays connecting adjacent layers, \n                          WEIGHTS0 represents flattened weight array connecting layer 0 and \n                          layer 1, WEIGHTS1 represents flattened weight array connecting \n                          layer 1 and layer 2, .... You can use multiple instances of this \n                          keyword i.e. WEIGHTS1, WEIGHTS2, WEIGHTS3... \n                 BIASES - bias array for each layer of the neural network, BIASES0 \n                          represents bias array for layer 1, BIASES1 represents bias array for \n                          layer 2, .... You can use multiple instances of this keyword i.e. \n                          BIASES1, BIASES2, BIASES3... \n\n"
  },
  "ANTIBETARMSD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ANTIBETARMSD",
    "description" : "Probe the antiparallel beta sheet content of your protein structure.",
    "module" : "secondarystructure",
    "displayname" : "ANTIBETARMSD",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions", "multiple": 0, "actionlink": "none", "default": "off"},
       "MASK" : { "type": "optional", "description": "a vector which is used to determine which elements of the secondary structure variable should be computed", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "RESIDUES" : { "type": "atoms", "description": "this command is used to specify the set of residues that could conceivably form part of the secondary structure", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "this is the full list of atoms that we are investigating", "multiple": 1, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " the manner in which RMSD alignment is performed", "multiple": 0, "actionlink": "none", "default": "DRMSD"},
       "VERBOSE" : { "type": "flag", "description": " write a more detailed output", "multiple": 0, "actionlink": "none", "default": "off"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of a residue segments that are within a certain target distance of this secondary structure type", "multiple": 0, "actionlink": "none"},
       "R_0" : { "type": "optional", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "8"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "12"},
       "ALIGN_STRANDS" : { "type": "flag", "description": " ensure that the two halves of a beta sheet are not broken by the periodic boundaries before doing alignment", "multiple": 0, "actionlink": "none", "default": "off"},
       "STYLE" : { "type": "compulsory", "description": " Antiparallel beta sheets can either form in a single chain or from a pair of chains", "multiple": 0, "actionlink": "none", "default": "all"},
       "STRANDS_CUTOFF" : { "type": "optional", "description": "If in a segment of protein the two strands are further apart then the calculation of the actual RMSD is skipped as the structure is very far from being beta-sheet like", "multiple": 0, "actionlink": "none"},
       "output" : {
         "struct" : {
           "flag": "default",
           "type": "scalar",
           "description": "the vectors containing the rmsd distances between the residues and each of the reference structures"
         },
         "lessthan" : {
           "flag": "default",
           "type": "scalar",
           "description": "the number blocks of residues that have an RMSD from the secondary structure that is less than the threshold"
         },
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "if LESS_THAN is present the RMSD distance between each residue and the ideal antiparallel beta sheet"
         }
       }
    },
    "needs" : ["SECONDARY_STRUCTURE_RMSD", "SECONDARY_STRUCTURE_DRMSD", "LESS_THAN", "SUM", "DISTANCE", "CUSTOM"],
    "help" : "The input trajectory can be in any of the following formats: \n\n               RESIDUES - this command is used to specify the set of residues that \n                          could conceivably form part of the secondary structure. It is \n                          possible to use residues numbers as the various chains and residues \n                          should have been identified else using an instance of the \ref \n                          MOLINFO action. If you wish to use all the residues from all the \n                          chains in your system you can do so by specifying all. \n                          Alternatively, if you wish to use a subset of the residues you can specify \n                          the particular residues you are interested in as a list of \n                          numbers. Please be aware that to form secondary structure elements \n                          your chain must contain at least N residues, where N is \n                          dependent on the particular secondary structure you are interested \n                          in. As such if you define portions of the chain with fewer than \n                          N residues the code will crash. \n                  ATOMS - this is the full list of atoms that we are investigating. \n                          For more information on how to specify lists of atoms see \ref \n                          Group \n\nThe following arguments are compulsory: \n\n                   TYPE - ( default=DRMSD ) the manner in which RMSD alignment is \n                          performed. Should be OPTIMAL, SIMPLE or DRMSD. For more details on the \n                          OPTIMAL and SIMPLE methods see \ref RMSD. For more details on the \n                          DRMSD method see \ref DRMSD. \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                     NN - ( default=8 ) The n parameter of the switching function \n                     MM - ( default=12 ) The m parameter of the switching function \n                  STYLE - ( default=all ) Antiparallel beta sheets can either form in \n                          a single chain or from a pair of chains. If STYLE=all all \n                          chain configuration with the appropriate geometry are counted. If \n                          STYLE=inter only sheet-like configurations involving two chains are \n                          counted, while if STYLE=intra only sheet-like configurations \n                          involving a single chain are counted \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                VERBOSE - ( default=off ) write a more detailed output \n          ALIGN_STRANDS - ( default=off ) ensure that the two halves of a beta sheet \n                          are not broken by the periodic boundaries before doing \n                          alignment \n                   MASK - a vector which is used to determine which elements of the \n                          secondary structure variable should be computed \n              LESS_THAN - calculate the number of a residue segments that are within \n                          a certain target distance of this secondary structure type. \n                    R_0 - The r_0 parameter of the switching function. \n         STRANDS_CUTOFF - If in a segment of protein the two strands are further \n                          apart then the calculation of the actual RMSD is skipped as the \n                          structure is very far from being beta-sheet like. This keyword speeds \n                          up the calculation enormously when you are using the LESS_THAN \n                          option. However, if you are using some other option, then this \n                          cannot be used \n\n"
  },
  "ARGS2VATOM": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ARGS2VATOM",
    "description" : "Create a virtual atom from the input scalars",
    "module" : "vatom",
    "displayname" : "ARGS2VATOM",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "XPOS" : { "type": "compulsory", "description": "the value to use for the x position of the atom", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "YPOS" : { "type": "compulsory", "description": "the value to use for the y position of the atom", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "ZPOS" : { "type": "compulsory", "description": "the value to use for the z position of the atom", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "MASS" : { "type": "compulsory", "description": "the value to use for the mass of the atom", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "CHARGE" : { "type": "compulsory", "description": "the value to use for the charge of the atom", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "XBKP" : { "type": "hidden", "description": "x position to use in case PBC not set when using PHASES", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "YBKP" : { "type": "hidden", "description": "y position to use in case PBC not set when using PHASES", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "ZBKP" : { "type": "hidden", "description": "z position to use in case PBC not set when using PHASES", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "FRACTIONAL" : { "type": "flag", "description": " the input arguments are calculated in fractional coordinates so you need to multiply by the cell", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "x" : {
           "flag": "default",
           "type": "scalar",
           "description": "the x coordinate of the virtual atom"
         },
         "y" : {
           "flag": "default",
           "type": "scalar",
           "description": "the y coordinate of the virtual atom"
         },
         "z" : {
           "flag": "default",
           "type": "scalar",
           "description": "the z coordinate of the virtual atom"
         },
         "mass" : {
           "flag": "default",
           "type": "scalar",
           "description": "the mass of the virtual atom"
         },
         "charge" : {
           "flag": "default",
           "type": "scalar",
           "description": "the charge of the virtual atom"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                   XPOS - the value to use for the x position of the atom \n                   YPOS - the value to use for the y position of the atom \n                   ZPOS - the value to use for the z position of the atom \n                   MASS - the value to use for the mass of the atom \n                 CHARGE - the value to use for the charge of the atom \n\nIn addition you may use the following options: \n\n             FRACTIONAL - ( default=off ) the input arguments are calculated in \n                          fractional coordinates so you need to multiply by the cell \n"
  },
  "AROUND": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/AROUND",
    "description" : "This quantity can be used to calculate functions of the distribution of collective variables for the atoms that lie in a particular, user-specified part of of the cell.",
    "module" : "volumes",
    "displayname" : "AROUND",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the group of atoms that you would like to investigate", "multiple": 1, "actionlink": "none"},
       "OUTSIDE" : { "type": "flag", "description": " calculate quantities for colvars that are on atoms outside the region of interest", "multiple": 0, "actionlink": "none", "default": "off"},
       "ORIGIN" : { "type": "atoms", "description": "the atom whose vicinity we are interested in examining", "multiple": 1, "actionlink": "none"},
       "ATOM" : { "type": "deprecated", "description": "You should use ORIGIN instead of this keyword which was used in older versions of PLUMED and is provided for back compatibility only", "multiple": 0, "actionlink": "none"},
       "SIGMA" : { "type": "compulsory", "description": "the width of the function to be used for kernel density estimation", "multiple": 0, "actionlink": "none"},
       "KERNEL" : { "type": "compulsory", "description": " the type of kernel function to be used", "multiple": 0, "actionlink": "none", "default": "gaussian"},
       "XLOWER" : { "type": "compulsory", "description": " the lower boundary in x relative to the x coordinate of the atom (0 indicates use full extent of box)", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "XUPPER" : { "type": "compulsory", "description": " the upper boundary in x relative to the x coordinate of the atom (0 indicates use full extent of box)", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "YLOWER" : { "type": "compulsory", "description": " the lower boundary in y relative to the y coordinate of the atom (0 indicates use full extent of box)", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "YUPPER" : { "type": "compulsory", "description": " the upper boundary in y relative to the y coordinate of the atom (0 indicates use full extent of box)", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "ZLOWER" : { "type": "compulsory", "description": " the lower boundary in z relative to the z coordinate of the atom (0 indicates use full extent of box)", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "ZUPPER" : { "type": "compulsory", "description": " the upper boundary in z relative to the z coordinate of the atom (0 indicates use full extent of box)", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "DATA" : { "type": "optional", "description": "the label of an action that calculates multicolvars", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calcualte the number of colvars that are inside the region of interest and that are less than a certain threshold", "multiple": 0, "actionlink": "none"},
       "MORE_THAN" : { "type": "optional", "description": "calcualte the number of colvars that are inside the region of interest and that are greater that a certain threshold", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of colvars that are inside the region of interest and that have a CV value that is between a particular set of bounds", "multiple": 0, "actionlink": "none"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the average value of the colvar inside the region of interest", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "sum of values of input CVs in regin of interest"
         },
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of cvs in the region of interest that are less than a certain threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of cvs in the region of interest that are more than a certain threshold"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of cvs in the region of interest that are within a certain range"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of all the colvars weighted by the function that determines if we are in the region"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the average values of the colvar in the region of interest"
         }
       }
    },
    "needs" : ["LESS_THAN", "MORE_THAN", "GROUP", "BETWEEN", "SUM", "MEAN", "CUSTOM"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the group of atoms that you would like to investigate. For \n                          more information on how to specify lists of atoms see \ref Group \n                 ORIGIN - the atom whose vicinity we are interested in examining. For \n                          more information on how to specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                  SIGMA - the width of the function to be used for kernel density \n                          estimation \n                 KERNEL - ( default=gaussian ) the type of kernel function to be used \n                 XLOWER - ( default=0.0 ) the lower boundary in x relative to the x \n                          coordinate of the atom (0 indicates use full extent of box). \n                 XUPPER - ( default=0.0 ) the upper boundary in x relative to the x \n                          coordinate of the atom (0 indicates use full extent of box). \n                 YLOWER - ( default=0.0 ) the lower boundary in y relative to the y \n                          coordinate of the atom (0 indicates use full extent of box). \n                 YUPPER - ( default=0.0 ) the upper boundary in y relative to the y \n                          coordinate of the atom (0 indicates use full extent of box). \n                 ZLOWER - ( default=0.0 ) the lower boundary in z relative to the z \n                          coordinate of the atom (0 indicates use full extent of box). \n                 ZUPPER - ( default=0.0 ) the upper boundary in z relative to the z \n                          coordinate of the atom (0 indicates use full extent of box). \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                OUTSIDE - ( default=off ) calculate quantities for colvars that are \n                          on atoms outside the region of interest \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the average value of the colvar \n                          inside the region of interest \n                   DATA - the label of an action that calculates multicolvars. \n                          Weighted sums based on the location of the colvars calculated by \n                          this action will be calcualted \n              LESS_THAN - calcualte the number of colvars that are inside the region \n                          of interest and that are less than a certain threshold \n              MORE_THAN - calcualte the number of colvars that are inside the region \n                          of interest and that are greater that a certain threshold \n                BETWEEN - calculate the number of colvars that are inside the region \n                          of interest and that have a CV value that is between a \n                          particular set of bounds \n\n"
  },
  "AROUND_CALC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/AROUND_CALC",
    "description" : "",
    "module" : "volumes",
    "displayname" : "AROUND",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the group of atoms that you would like to investigate", "multiple": 1, "actionlink": "none"},
       "OUTSIDE" : { "type": "flag", "description": " calculate quantities for colvars that are on atoms outside the region of interest", "multiple": 0, "actionlink": "none", "default": "off"},
       "ORIGIN" : { "type": "atoms", "description": "the atom whose vicinity we are interested in examining", "multiple": 1, "actionlink": "none"},
       "ATOM" : { "type": "deprecated", "description": "You should use ORIGIN instead of this keyword which was used in older versions of PLUMED and is provided for back compatibility only", "multiple": 0, "actionlink": "none"},
       "SIGMA" : { "type": "compulsory", "description": "the width of the function to be used for kernel density estimation", "multiple": 0, "actionlink": "none"},
       "KERNEL" : { "type": "compulsory", "description": " the type of kernel function to be used", "multiple": 0, "actionlink": "none", "default": "gaussian"},
       "XLOWER" : { "type": "compulsory", "description": " the lower boundary in x relative to the x coordinate of the atom (0 indicates use full extent of box)", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "XUPPER" : { "type": "compulsory", "description": " the upper boundary in x relative to the x coordinate of the atom (0 indicates use full extent of box)", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "YLOWER" : { "type": "compulsory", "description": " the lower boundary in y relative to the y coordinate of the atom (0 indicates use full extent of box)", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "YUPPER" : { "type": "compulsory", "description": " the upper boundary in y relative to the y coordinate of the atom (0 indicates use full extent of box)", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "ZLOWER" : { "type": "compulsory", "description": " the lower boundary in z relative to the z coordinate of the atom (0 indicates use full extent of box)", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "ZUPPER" : { "type": "compulsory", "description": " the upper boundary in z relative to the z coordinate of the atom (0 indicates use full extent of box)", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "vector of numbers between 0 and 1 that measure the degree to which each atom is within the volume of interest"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the group of atoms that you would like to investigate. For \n                          more information on how to specify lists of atoms see \ref Group \n                 ORIGIN - the atom whose vicinity we are interested in examining. For \n                          more information on how to specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                  SIGMA - the width of the function to be used for kernel density \n                          estimation \n                 KERNEL - ( default=gaussian ) the type of kernel function to be used \n                 XLOWER - ( default=0.0 ) the lower boundary in x relative to the x \n                          coordinate of the atom (0 indicates use full extent of box). \n                 XUPPER - ( default=0.0 ) the upper boundary in x relative to the x \n                          coordinate of the atom (0 indicates use full extent of box). \n                 YLOWER - ( default=0.0 ) the lower boundary in y relative to the y \n                          coordinate of the atom (0 indicates use full extent of box). \n                 YUPPER - ( default=0.0 ) the upper boundary in y relative to the y \n                          coordinate of the atom (0 indicates use full extent of box). \n                 ZLOWER - ( default=0.0 ) the lower boundary in z relative to the z \n                          coordinate of the atom (0 indicates use full extent of box). \n                 ZUPPER - ( default=0.0 ) the upper boundary in z relative to the z \n                          coordinate of the atom (0 indicates use full extent of box). \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                OUTSIDE - ( default=off ) calculate quantities for colvars that are \n                          on atoms outside the region of interest \n"
  },
  "ARRANGE_POINTS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ARRANGE_POINTS",
    "description" : "Arrange points in a low dimensional space so that the (transformed) distances between points in the low dimensional space match the dissimilarities provided in an input matrix.",
    "module" : "dimred",
    "displayname" : "ARRANGE_POINTS",
     "dois" : ["10.1073/pnas.1108486108"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the initial positions for the projections", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "TARGET" : { "type": "optional", "description": "the matrix of target quantities that you would like to match", "multiple": 1, "actionlink": "none", "argtype": "matrix"},
       "FUNC" : { "type": "optional", "description": "a function that is applied on the distances between the points in the low dimensional space", "multiple": 1, "actionlink": "none"},
       "WEIGHTS" : { "type": "optional", "description": "the matrix with the weights of the target quantities", "multiple": 1, "actionlink": "none", "argtype": "matrix"},
       "MINTYPE" : { "type": "compulsory", "description": " the method to use for the minimisation", "multiple": 0, "actionlink": "none", "default": "conjgrad"},
       "MAXITER" : { "type": "compulsory", "description": " maximum number of optimization cycles for optimisation algorithms", "multiple": 0, "actionlink": "none", "default": "1000"},
       "CGTOL" : { "type": "compulsory", "description": " the tolerance for the conjugate gradient minimization", "multiple": 0, "actionlink": "none", "default": "1E-6"},
       "NCYCLES" : { "type": "compulsory", "description": " the number of cycles of global optimization to attempt", "multiple": 0, "actionlink": "none", "default": "5"},
       "BUFFER" : { "type": "compulsory", "description": " grid extent for search is (max projection - minimum projection) multiplied by this value", "multiple": 0, "actionlink": "none", "default": "1.1"},
       "CGRID_SIZE" : { "type": "compulsory", "description": " number of points to use in each grid direction", "multiple": 0, "actionlink": "none", "default": "10"},
       "FGRID_SIZE" : { "type": "compulsory", "description": " interpolate the grid onto this number of points -- only works in 2D", "multiple": 0, "actionlink": "none", "default": "0"},
       "SMACTOL" : { "type": "compulsory", "description": " the tolerance for the smacof algorithm", "multiple": 0, "actionlink": "none", "default": "1E-4"},
       "SMACREG" : { "type": "compulsory", "description": " this is used to ensure that we don't divide by zero when updating weights for SMACOF algorithm", "multiple": 0, "actionlink": "none", "default": "0.001"},
       "output" : {
         "coord" : {
           "flag": "default",
           "type": "vector",
           "description": "the coordinates of the points in the low dimensional space"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the initial positions for the projections \n                MINTYPE - ( default=conjgrad ) the method to use for the minimisation \n                MAXITER - ( default=1000 ) maximum number of optimization cycles for \n                          optimisation algorithms \n                  CGTOL - ( default=1E-6 ) the tolerance for the conjugate gradient \n                          minimization \n                NCYCLES - ( default=5 ) the number of cycles of global optimization \n                          to attempt \n                 BUFFER - ( default=1.1 ) grid extent for search is (max projection - \n                          minimum projection) multiplied by this value \n             CGRID_SIZE - ( default=10 ) number of points to use in each grid \n                          direction \n             FGRID_SIZE - ( default=0 ) interpolate the grid onto this number of \n                          points -- only works in 2D \n                SMACTOL - ( default=1E-4 ) the tolerance for the smacof algorithm \n                SMACREG - ( default=0.001 ) this is used to ensure that we don't \n                          divide by zero when updating weights for SMACOF algorithm \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                 TARGET - the matrix of target quantities that you would like to \n                          match. You can use multiple instances of this keyword i.e. \n                          TARGET1, TARGET2, TARGET3... \n                   FUNC - a function that is applied on the distances between the \n                          points in the low dimensional space. You can use multiple \n                          instances of this keyword i.e. FUNC1, FUNC2, FUNC3... \n                WEIGHTS - the matrix with the weights of the target quantities. You \n                          can use multiple instances of this keyword i.e. WEIGHTS1, \n                          WEIGHTS2, WEIGHTS3... \n\n"
  },
  "ATOMIC_SMAC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ATOMIC_SMAC",
    "description" : "Calculate the atomic smac CV",
    "module" : "symfunc",
    "displayname" : "ATOMIC_SMAC",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated and the atoms that can be in the environments", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "the list of atoms that can be in the environments of each of the atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "the switching function that it used in the construction of the contact matrix", "multiple": 0, "actionlink": "none"},
       "KERNEL" : { "type": "optional", "description": "The kernels used in the function of the angle", "multiple": 1, "actionlink": "none"},
       "SWITCH_COORD" : { "type": "optional", "description": "This keyword is used to define the coordination switching function", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "GSYMFUNC_THREEBODY", "ONES", "MATRIX_VECTOR_PRODUCT"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - the list of atoms for which the symmetry function is being \n                          calculated and the atoms that can be in the environments \n               SPECIESA - the list of atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESB, \n                          which specifies the atoms that are in the environment. \n               SPECIESB - the list of atoms that can be in the environments of each \n                          of the atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESA, \n                          which specifies the atoms for which the symmetry function is \n                          being calculated. \n\nThe following options are available\n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                 SWITCH - the switching function that it used in the construction of \n                          the contact matrix \n                 KERNEL - The kernels used in the function of the angle. You can use \n                          multiple instances of this keyword i.e. KERNEL1, KERNEL2, KERNEL3... \n           SWITCH_COORD - This keyword is used to define the coordination switching \n                          function. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "AVERAGE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/AVERAGE",
    "description" : "Calculate the ensemble average of a collective variable",
    "module" : "generic",
    "displayname" : "AVERAGE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the quantity that is being averaged", "multiple": 0, "actionlink": "none", "argtype": "scalar/grid"},
       "LOGWEIGHTS" : { "type": "optional", "description": "the logarithm of the quantity to use as the weights when calculating averages", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which to store data for averaging", "multiple": 0, "actionlink": "none", "default": "1"},
       "CLEAR" : { "type": "compulsory", "description": " the frequency with whihc to clear the data that is being averaged", "multiple": 0, "actionlink": "none", "default": "0"},
       "NORMALIZATION" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/grid",
           "description": "the value of the average"
         }
       }
    },
    "needs" : ["COMBINE", "CUSTOM", "ONES", "ACCUMULATE"],
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the quantity that is being averaged \n                 STRIDE - ( default=1 ) the frequency with which to store data for \n                          averaging \n                  CLEAR - ( default=0 ) the frequency with whihc to clear the data \n                          that is being averaged \n             LOGWEIGHTS - the logarithm of the quantity to use as the weights when \n                          calculating averages \n\n"
  },
  "AVERAGE_PATH_DISPLACEMENT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/AVERAGE_PATH_DISPLACEMENT",
    "description" : "Accumulate the distances between the reference frames in the paths and the configurations visited",
    "module" : "mapping",
    "displayname" : "AVERAGE_PATH_DISPLACEMENT",
     "dois" : ["10.1063/1.2432340", "10.1063/1.3660208"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the matrix that contains the vectors of displacements from each frame in the path", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "METRIC" : { "type": "compulsory", "description": "the method to use for computing the displacement vectors between the reference frames", "multiple": 0, "actionlink": "none"},
       "METRIC_COMPONENT" : { "type": "compulsory", "description": "if the final action in your metric contains multiple components this keyword is used to specify the component that should be used", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "compulsory", "description": "labels for actions that contain reference coordinates for each point on the path", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the average displacements should be collected and added to the average displacements", "multiple": 0, "actionlink": "none", "default": "1"},
       "HALFLIFE" : { "type": "compulsory", "description": " the number of MD steps after which a previously measured path distance weighs only 50 percent in the average", "multiple": 0, "actionlink": "none", "default": "-1"},
       "CLEAR" : { "type": "compulsory", "description": " the frequency with which to clear all the accumulated data", "multiple": 0, "actionlink": "none", "default": "0"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "matrix containing the average displacement between the trajectory and each of the landmarks that makes up the path"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the matrix that contains the vectors of \n                          displacements from each frame in the path \n                 METRIC - the method to use for computing the displacement vectors \n                          between the reference frames \n       METRIC_COMPONENT - if the final action in your metric contains multiple \n                          components this keyword is used to specify the component that should \n                          be used \n              REFERENCE - labels for actions that contain reference coordinates for \n                          each point on the path \n                 STRIDE - ( default=1 ) the frequency with which the average \n                          displacements should be collected and added to the average displacements \n               HALFLIFE - ( default=-1 ) the number of MD steps after which a \n                          previously measured path distance weighs only 50 percent in the \n                          average. This option may increase convergence by allowing to forget \n                          the memory of a bad initial guess path. The default is to set \n                          this to infinity \n                  CLEAR - ( default=0 ) the frequency with which to clear all the \n                          accumulated data. The default value of 0 implies that all the data will \n                          be used and that the grid will never be cleared \n"
  },
  "BAIES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BAIES",
    "description" : "Bayesian refinement of AF models.",
    "module" : "isdb",
    "displayname" : "BAIES",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "atoms used in the calculation of bAIes energy", "multiple": 1, "actionlink": "none"},
       "DATA_FILE" : { "type": "compulsory", "description": "file with AF2 fit parameters", "multiple": 0, "actionlink": "none"},
       "PRIOR" : { "type": "compulsory", "description": "type of prior to use (NONE, JEFFREYS, CAUCHY", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "temperature in kBt units", "multiple": 0, "actionlink": "none"},
       "SIGMA_MIN" : { "type": "optional", "description": "minimum value of sigma", "multiple": 0, "actionlink": "none"},
       "output" : {
         "ene" : {
           "flag": "default",
           "type": "scalar",
           "description": "Bayesian bAIes energy"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - atoms used in the calculation of bAIes energy. For more \n                          information on how to specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n              DATA_FILE - file with AF2 fit parameters \n                  PRIOR - type of prior to use (NONE, JEFFREYS, CAUCHY \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                   TEMP - temperature in kBt units \n              SIGMA_MIN - minimum value of sigma \n\n"
  },
  "BESSEL": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BESSEL",
    "description" : "Calculate the value of a Bessel function.",
    "module" : "function",
    "displayname" : "BESSEL",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ORDER" : { "type": "compulsory", "description": " the order of Bessel function to use", "multiple": 0, "actionlink": "none", "default": "0"},
       "ARG" : { "type": "compulsory", "description": "the values input to this function", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector/matrix that should be used to determine which elements of the vector/matrix should be computed", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the value of the bessel function"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                  ORDER - ( default=0 ) the order of Bessel function to use. Can only \n                          be zero at the moment. \n                    ARG - the values input to this function \n                   MASK - the label for a sparse vector/matrix that should be used to \n                          determine which elements of the vector/matrix should be computed \n\n"
  },
  "BESSEL_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BESSEL_SCALAR",
    "description" : "",
    "module" : "function",
    "displayname" : "BESSEL",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "ORDER" : { "type": "compulsory", "description": " the order of Bessel function to use", "multiple": 0, "actionlink": "none", "default": "0"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the value of the bessel function"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n                  ORDER - ( default=0 ) the order of Bessel function to use. Can only \n                          be zero at the moment. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n"
  },
  "BESSEL_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BESSEL_VECTOR",
    "description" : "",
    "module" : "function",
    "displayname" : "BESSEL",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and vector that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "ORDER" : { "type": "compulsory", "description": " the order of Bessel function to use", "multiple": 0, "actionlink": "none", "default": "0"},
       "MASK" : { "type": "optional", "description": "the label for a sparse matrix that should be used to determine which elements of the matrix should be computed", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the vector obtained by doing an element-wise application of the value of the bessel function to the input vectors"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and vector that on which the \n                          function is being calculated elementwise \n                  ORDER - ( default=0 ) the order of Bessel function to use. Can only \n                          be zero at the moment. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - the label for a sparse matrix that should be used to \n                          determine which elements of the matrix should be computed \n\n"
  },
  "BETWEEN": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BETWEEN",
    "description" : "Use a switching function to determine how many of the input variables are within a certain range.",
    "module" : "function",
    "displayname" : "BETWEEN",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "LOWER" : { "type": "compulsory", "description": "the lower boundary for this particular bin", "multiple": 0, "actionlink": "none"},
       "UPPER" : { "type": "compulsory", "description": "the upper boundary for this particular bin", "multiple": 0, "actionlink": "none"},
       "SMEAR" : { "type": "compulsory", "description": " the ammount to smear the Gaussian for each value in the distribution", "multiple": 0, "actionlink": "none", "default": "0.5"},
       "SWITCH" : { "type": "optional", "description": "This keyword is used if you want to employ an alternative to the continuous function defined above", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the values input to this function", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector/matrix that should be used to determine which elements of the vector/matrix should be computed", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector/matrix",
           "description": "a function that is one if the input falls within a particular range and zero otherwise"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                  LOWER - the lower boundary for this particular bin \n                  UPPER - the upper boundary for this particular bin \n                  SMEAR - ( default=0.5 ) the ammount to smear the Gaussian for each \n                          value in the distribution \n                    ARG - the values input to this function \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous function defined above. The following \n                          provides information on the \ref histogrambead that are available. \n                          When this keyword is present you no longer need the LOWER, \n                          UPPER, SMEAR and KERNEL keywords. \n                   MASK - the label for a sparse vector/matrix that should be used to \n                          determine which elements of the vector/matrix should be computed \n\n"
  },
  "BETWEEN_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BETWEEN_MATRIX",
    "description" : "",
    "module" : "function",
    "displayname" : "BETWEEN",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and matrices that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/matrix"},
       "MASK" : { "type": "optional", "description": "a matrix that is used to used to determine which elements of the output matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "LOWER" : { "type": "compulsory", "description": "the lower boundary for this particular bin", "multiple": 0, "actionlink": "none"},
       "UPPER" : { "type": "compulsory", "description": "the upper boundary for this particular bin", "multiple": 0, "actionlink": "none"},
       "SMEAR" : { "type": "compulsory", "description": " the ammount to smear the Gaussian for each value in the distribution", "multiple": 0, "actionlink": "none", "default": "0.5"},
       "SWITCH" : { "type": "optional", "description": "This keyword is used if you want to employ an alternative to the continuous function defined above", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "the matrix obtained by doing an element-wise application of a function that is one if the input falls within a particular range and zero otherwise to the input matrix"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and matrices that on which the \n                          function is being calculated elementwise \n                  LOWER - the lower boundary for this particular bin \n                  UPPER - the upper boundary for this particular bin \n                  SMEAR - ( default=0.5 ) the ammount to smear the Gaussian for each \n                          value in the distribution \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a matrix that is used to used to determine which elements \n                          of the output matrix to compute \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous function defined above. The following \n                          provides information on the \ref histogrambead that are available. \n                          When this keyword is present you no longer need the LOWER, \n                          UPPER, SMEAR and KERNEL keywords. \n\n"
  },
  "BETWEEN_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BETWEEN_SCALAR",
    "description" : "",
    "module" : "function",
    "displayname" : "BETWEEN",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "LOWER" : { "type": "compulsory", "description": "the lower boundary for this particular bin", "multiple": 0, "actionlink": "none"},
       "UPPER" : { "type": "compulsory", "description": "the upper boundary for this particular bin", "multiple": 0, "actionlink": "none"},
       "SMEAR" : { "type": "compulsory", "description": " the ammount to smear the Gaussian for each value in the distribution", "multiple": 0, "actionlink": "none", "default": "0.5"},
       "SWITCH" : { "type": "optional", "description": "This keyword is used if you want to employ an alternative to the continuous function defined above", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector/matrix",
           "description": "a function that is one if the input falls within a particular range and zero otherwise"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n                  LOWER - the lower boundary for this particular bin \n                  UPPER - the upper boundary for this particular bin \n                  SMEAR - ( default=0.5 ) the ammount to smear the Gaussian for each \n                          value in the distribution \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous function defined above. The following \n                          provides information on the \ref histogrambead that are available. \n                          When this keyword is present you no longer need the LOWER, \n                          UPPER, SMEAR and KERNEL keywords. \n\n"
  },
  "BETWEEN_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BETWEEN_VECTOR",
    "description" : "",
    "module" : "function",
    "displayname" : "BETWEEN",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and vector that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "LOWER" : { "type": "compulsory", "description": "the lower boundary for this particular bin", "multiple": 0, "actionlink": "none"},
       "UPPER" : { "type": "compulsory", "description": "the upper boundary for this particular bin", "multiple": 0, "actionlink": "none"},
       "SMEAR" : { "type": "compulsory", "description": " the ammount to smear the Gaussian for each value in the distribution", "multiple": 0, "actionlink": "none", "default": "0.5"},
       "SWITCH" : { "type": "optional", "description": "This keyword is used if you want to employ an alternative to the continuous function defined above", "multiple": 0, "actionlink": "none"},
       "MASK" : { "type": "optional", "description": "the label for a sparse matrix that should be used to determine which elements of the matrix should be computed", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the vector obtained by doing an element-wise application of a function that is one if the input falls within a particular range and zero otherwise to the input vectors"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and vector that on which the \n                          function is being calculated elementwise \n                  LOWER - the lower boundary for this particular bin \n                  UPPER - the upper boundary for this particular bin \n                  SMEAR - ( default=0.5 ) the ammount to smear the Gaussian for each \n                          value in the distribution \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous function defined above. The following \n                          provides information on the \ref histogrambead that are available. \n                          When this keyword is present you no longer need the LOWER, \n                          UPPER, SMEAR and KERNEL keywords. \n                   MASK - the label for a sparse matrix that should be used to \n                          determine which elements of the matrix should be computed \n\n"
  },
  "BF_CHEBYSHEV": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BF_CHEBYSHEV",
    "description" : "Chebyshev polynomial basis functions.",
    "module" : "ves",
    "displayname" : "BF_CHEBYSHEV",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ORDER" : { "type": "compulsory", "description": "The order of the basis function expansion", "multiple": 0, "actionlink": "none"},
       "MINIMUM" : { "type": "compulsory", "description": "The minimum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "MAXIMUM" : { "type": "compulsory", "description": "The maximum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "NGRID_POINTS" : { "type": "hidden", "description": "The number of grid points used for numerical integrals", "multiple": 0, "actionlink": "none"},
       "DEBUG_INFO" : { "type": "flag", "description": " Print out more detailed information about the basis set", "multiple": 0, "actionlink": "none", "default": "off"},
       "NUMERICAL_INTEGRALS" : { "type": "flag", "description": " Calculate basis function integral for the uniform distribution numerically", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                  ORDER - The order of the basis function expansion. \n                MINIMUM - The minimum of the interval on which the basis functions \n                          are defined. \n                MAXIMUM - The maximum of the interval on which the basis functions \n                          are defined. \n\nIn addition you may use the following options: \n\n             DEBUG_INFO - ( default=off ) Print out more detailed information about \n                          the basis set. Useful for debugging. \n    NUMERICAL_INTEGRALS - ( default=off ) Calculate basis function integral for the \n                          uniform distribution numerically. Useful for debugging. \n"
  },
  "BF_COMBINED": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BF_COMBINED",
    "description" : "Combining other basis functions types",
    "module" : "ves",
    "displayname" : "BF_COMBINED",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "DEBUG_INFO" : { "type": "flag", "description": " Print out more detailed information about the basis set", "multiple": 0, "actionlink": "none", "default": "off"},
       "BASIS_FUNCTIONS" : { "type": "compulsory", "description": "Labels of the basis functions that should be combined", "multiple": 0, "actionlink": "none"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n        BASIS_FUNCTIONS - Labels of the basis functions that should be combined. Note \n                          that the order used matters for the ordering of the basis \n                          functions. This needs to be kept in mind when restarting from previous \n                          coefficients. \n\nIn addition you may use the following options: \n\n             DEBUG_INFO - ( default=off ) Print out more detailed information about \n                          the basis set. Useful for debugging. \n"
  },
  "BF_COSINE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BF_COSINE",
    "description" : "Fourier cosine basis functions.",
    "module" : "ves",
    "displayname" : "BF_COSINE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ORDER" : { "type": "compulsory", "description": "The order of the basis function expansion", "multiple": 0, "actionlink": "none"},
       "MINIMUM" : { "type": "compulsory", "description": "The minimum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "MAXIMUM" : { "type": "compulsory", "description": "The maximum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "NGRID_POINTS" : { "type": "hidden", "description": "The number of grid points used for numerical integrals", "multiple": 0, "actionlink": "none"},
       "DEBUG_INFO" : { "type": "flag", "description": " Print out more detailed information about the basis set", "multiple": 0, "actionlink": "none", "default": "off"},
       "NUMERICAL_INTEGRALS" : { "type": "flag", "description": " Calculate basis function integral for the uniform distribution numerically", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                  ORDER - The order of the basis function expansion. \n                MINIMUM - The minimum of the interval on which the basis functions \n                          are defined. \n                MAXIMUM - The maximum of the interval on which the basis functions \n                          are defined. \n\nIn addition you may use the following options: \n\n             DEBUG_INFO - ( default=off ) Print out more detailed information about \n                          the basis set. Useful for debugging. \n    NUMERICAL_INTEGRALS - ( default=off ) Calculate basis function integral for the \n                          uniform distribution numerically. Useful for debugging. \n"
  },
  "BF_CUBIC_B_SPLINES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BF_CUBIC_B_SPLINES",
    "description" : "Cubic B spline basis functions.",
    "module" : "ves",
    "displayname" : "BF_CUBIC_B_SPLINES",
     "dois" : ["10.1007/s10614-007-9092-4", "10.1021/acs.jctc.2c00197"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ORDER" : { "type": "compulsory", "description": "The order of the basis function expansion", "multiple": 0, "actionlink": "none"},
       "MINIMUM" : { "type": "compulsory", "description": "The minimum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "MAXIMUM" : { "type": "compulsory", "description": "The maximum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "NGRID_POINTS" : { "type": "hidden", "description": "The number of grid points used for numerical integrals", "multiple": 0, "actionlink": "none"},
       "DEBUG_INFO" : { "type": "flag", "description": " Print out more detailed information about the basis set", "multiple": 0, "actionlink": "none", "default": "off"},
       "NORMALIZATION" : { "type": "optional", "description": "the normalization factor that is used to normalize the basis functions by dividing the values", "multiple": 0, "actionlink": "none"},
       "PERIODIC" : { "type": "flag", "description": " Use periodic version of basis set", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                  ORDER - The order of the basis function expansion. \n                MINIMUM - The minimum of the interval on which the basis functions \n                          are defined. \n                MAXIMUM - The maximum of the interval on which the basis functions \n                          are defined. \n\nIn addition you may use the following options: \n\n             DEBUG_INFO - ( default=off ) Print out more detailed information about \n                          the basis set. Useful for debugging. \n               PERIODIC - ( default=off ) Use periodic version of basis set. \n          NORMALIZATION - the normalization factor that is used to normalize the \n                          basis functions by dividing the values. By default it is 2. \n\n"
  },
  "BF_CUSTOM": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BF_CUSTOM",
    "description" : "Basis functions given by arbitrary mathematical expressions.",
    "module" : "ves",
    "displayname" : "BF_CUSTOM",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "MINIMUM" : { "type": "compulsory", "description": "The minimum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "MAXIMUM" : { "type": "compulsory", "description": "The maximum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "NGRID_POINTS" : { "type": "hidden", "description": "The number of grid points used for numerical integrals", "multiple": 0, "actionlink": "none"},
       "DEBUG_INFO" : { "type": "flag", "description": " Print out more detailed information about the basis set", "multiple": 0, "actionlink": "none", "default": "off"},
       "FUNC" : { "type": "optional", "description": "The basis functions f_i(x) given in mathematical expressions using _x_ as a variable", "multiple": 1, "actionlink": "none"},
       "TRANSFORM" : { "type": "optional", "description": "An optional function that can be used to transform the argument before calculating the basis function values", "multiple": 0, "actionlink": "none"},
       "PERIODIC" : { "type": "flag", "description": " Indicate that the basis functions are periodic", "multiple": 0, "actionlink": "none", "default": "off"},
       "CHECK_NAN_INF" : { "type": "flag", "description": " Check that the basis functions do not result in a not a number (nan) or infinity (inf)", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                MINIMUM - The minimum of the interval on which the basis functions \n                          are defined. \n                MAXIMUM - The maximum of the interval on which the basis functions \n                          are defined. \n\nIn addition you may use the following options: \n\n             DEBUG_INFO - ( default=off ) Print out more detailed information about \n                          the basis set. Useful for debugging. \n               PERIODIC - ( default=off ) Indicate that the basis functions are \n                          periodic. \n          CHECK_NAN_INF - ( default=off ) Check that the basis functions do not \n                          result in a not a number (nan) or infinity (inf). \n                   FUNC - The basis functions f_i(x) given in mathematical \n                          expressions using _x_ as a variable.. You can use multiple instances of \n                          this keyword i.e. FUNC1, FUNC2, FUNC3... \n              TRANSFORM - An optional function that can be used to transform the \n                          argument before calculating the basis function values. You should \n                          use _t_ as a variable. You can use the variables _min_ and \n                          _max_ to give the minimum and the maximum of the interval. \n\n"
  },
  "BF_FOURIER": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BF_FOURIER",
    "description" : "Fourier basis functions.",
    "module" : "ves",
    "displayname" : "BF_FOURIER",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ORDER" : { "type": "compulsory", "description": "The order of the basis function expansion", "multiple": 0, "actionlink": "none"},
       "MINIMUM" : { "type": "compulsory", "description": "The minimum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "MAXIMUM" : { "type": "compulsory", "description": "The maximum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "NGRID_POINTS" : { "type": "hidden", "description": "The number of grid points used for numerical integrals", "multiple": 0, "actionlink": "none"},
       "DEBUG_INFO" : { "type": "flag", "description": " Print out more detailed information about the basis set", "multiple": 0, "actionlink": "none", "default": "off"},
       "NUMERICAL_INTEGRALS" : { "type": "flag", "description": " Calculate basis function integral for the uniform distribution numerically", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                  ORDER - The order of the basis function expansion. \n                MINIMUM - The minimum of the interval on which the basis functions \n                          are defined. \n                MAXIMUM - The maximum of the interval on which the basis functions \n                          are defined. \n\nIn addition you may use the following options: \n\n             DEBUG_INFO - ( default=off ) Print out more detailed information about \n                          the basis set. Useful for debugging. \n    NUMERICAL_INTEGRALS - ( default=off ) Calculate basis function integral for the \n                          uniform distribution numerically. Useful for debugging. \n"
  },
  "BF_GAUSSIANS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BF_GAUSSIANS",
    "description" : "Gaussian basis functions.",
    "module" : "ves",
    "displayname" : "BF_GAUSSIANS",
     "dois" : ["10.1021/acs.jctc.2c00197"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ORDER" : { "type": "compulsory", "description": "The order of the basis function expansion", "multiple": 0, "actionlink": "none"},
       "MINIMUM" : { "type": "compulsory", "description": "The minimum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "MAXIMUM" : { "type": "compulsory", "description": "The maximum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "NGRID_POINTS" : { "type": "hidden", "description": "The number of grid points used for numerical integrals", "multiple": 0, "actionlink": "none"},
       "DEBUG_INFO" : { "type": "flag", "description": " Print out more detailed information about the basis set", "multiple": 0, "actionlink": "none", "default": "off"},
       "WIDTH" : { "type": "optional", "description": "The width (i", "multiple": 0, "actionlink": "none"},
       "PERIODIC" : { "type": "flag", "description": " Use periodic version of basis set", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                  ORDER - The order of the basis function expansion. \n                MINIMUM - The minimum of the interval on which the basis functions \n                          are defined. \n                MAXIMUM - The maximum of the interval on which the basis functions \n                          are defined. \n\nIn addition you may use the following options: \n\n             DEBUG_INFO - ( default=off ) Print out more detailed information about \n                          the basis set. Useful for debugging. \n               PERIODIC - ( default=off ) Use periodic version of basis set. \n                  WIDTH - The width (i.e. standart deviation) of the Gaussian \n                          functions. By default it is equal to the sub-intervall size. \n\n"
  },
  "BF_LEGENDRE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BF_LEGENDRE",
    "description" : "Legendre polynomials basis functions.",
    "module" : "ves",
    "displayname" : "BF_LEGENDRE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ORDER" : { "type": "compulsory", "description": "The order of the basis function expansion", "multiple": 0, "actionlink": "none"},
       "MINIMUM" : { "type": "compulsory", "description": "The minimum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "MAXIMUM" : { "type": "compulsory", "description": "The maximum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "NGRID_POINTS" : { "type": "hidden", "description": "The number of grid points used for numerical integrals", "multiple": 0, "actionlink": "none"},
       "DEBUG_INFO" : { "type": "flag", "description": " Print out more detailed information about the basis set", "multiple": 0, "actionlink": "none", "default": "off"},
       "NUMERICAL_INTEGRALS" : { "type": "flag", "description": " Calculate basis function integral for the uniform distribution numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALED" : { "type": "flag", "description": " Scale the polynomials such that they are orthonormal to 1", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                  ORDER - The order of the basis function expansion. \n                MINIMUM - The minimum of the interval on which the basis functions \n                          are defined. \n                MAXIMUM - The maximum of the interval on which the basis functions \n                          are defined. \n\nIn addition you may use the following options: \n\n             DEBUG_INFO - ( default=off ) Print out more detailed information about \n                          the basis set. Useful for debugging. \n    NUMERICAL_INTEGRALS - ( default=off ) Calculate basis function integral for the \n                          uniform distribution numerically. Useful for debugging. \n                 SCALED - ( default=off ) Scale the polynomials such that they are \n                          orthonormal to 1. \n"
  },
  "BF_POWERS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BF_POWERS",
    "description" : "Polynomial power basis functions.",
    "module" : "ves",
    "displayname" : "BF_POWERS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ORDER" : { "type": "compulsory", "description": "The order of the basis function expansion", "multiple": 0, "actionlink": "none"},
       "MINIMUM" : { "type": "compulsory", "description": "The minimum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "MAXIMUM" : { "type": "compulsory", "description": "The maximum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "NGRID_POINTS" : { "type": "hidden", "description": "The number of grid points used for numerical integrals", "multiple": 0, "actionlink": "none"},
       "DEBUG_INFO" : { "type": "flag", "description": " Print out more detailed information about the basis set", "multiple": 0, "actionlink": "none", "default": "off"},
       "NORMALIZATION" : { "type": "optional", "description": "The normalization factor that is used to normalize the basis functions", "multiple": 0, "actionlink": "none"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                  ORDER - The order of the basis function expansion. \n                MINIMUM - The minimum of the interval on which the basis functions \n                          are defined. \n                MAXIMUM - The maximum of the interval on which the basis functions \n                          are defined. \n\nIn addition you may use the following options: \n\n             DEBUG_INFO - ( default=off ) Print out more detailed information about \n                          the basis set. Useful for debugging. \n          NORMALIZATION - The normalization factor that is used to normalize the \n                          basis functions. By default it is 1.0. \n\n"
  },
  "BF_SINE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BF_SINE",
    "description" : "Fourier sine basis functions.",
    "module" : "ves",
    "displayname" : "BF_SINE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ORDER" : { "type": "compulsory", "description": "The order of the basis function expansion", "multiple": 0, "actionlink": "none"},
       "MINIMUM" : { "type": "compulsory", "description": "The minimum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "MAXIMUM" : { "type": "compulsory", "description": "The maximum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "NGRID_POINTS" : { "type": "hidden", "description": "The number of grid points used for numerical integrals", "multiple": 0, "actionlink": "none"},
       "DEBUG_INFO" : { "type": "flag", "description": " Print out more detailed information about the basis set", "multiple": 0, "actionlink": "none", "default": "off"},
       "NUMERICAL_INTEGRALS" : { "type": "flag", "description": " Calculate basis function integral for the uniform distribution numerically", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                  ORDER - The order of the basis function expansion. \n                MINIMUM - The minimum of the interval on which the basis functions \n                          are defined. \n                MAXIMUM - The maximum of the interval on which the basis functions \n                          are defined. \n\nIn addition you may use the following options: \n\n             DEBUG_INFO - ( default=off ) Print out more detailed information about \n                          the basis set. Useful for debugging. \n    NUMERICAL_INTEGRALS - ( default=off ) Calculate basis function integral for the \n                          uniform distribution numerically. Useful for debugging. \n"
  },
  "BF_WAVELETS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BF_WAVELETS",
    "description" : "Daubechies Wavelets basis functions.",
    "module" : "ves",
    "displayname" : "BF_WAVELETS",
     "dois" : ["10.1137/1.9781611970104", "10.1021/acs.jctc.2c00197"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ORDER" : { "type": "compulsory", "description": "The order of the basis function expansion", "multiple": 0, "actionlink": "none"},
       "MINIMUM" : { "type": "compulsory", "description": "The minimum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "MAXIMUM" : { "type": "compulsory", "description": "The maximum of the interval on which the basis functions are defined", "multiple": 0, "actionlink": "none"},
       "NGRID_POINTS" : { "type": "hidden", "description": "The number of grid points used for numerical integrals", "multiple": 0, "actionlink": "none"},
       "DEBUG_INFO" : { "type": "flag", "description": " Print out more detailed information about the basis set", "multiple": 0, "actionlink": "none", "default": "off"},
       "TYPE" : { "type": "compulsory", "description": "Specify the wavelet type", "multiple": 0, "actionlink": "none"},
       "FUNCTION_LENGTH" : { "type": "optional", "description": "The domain size of the individual basis functions", "multiple": 0, "actionlink": "none"},
       "NUM_BF" : { "type": "optional", "description": "The number of basis functions that should be used", "multiple": 0, "actionlink": "none"},
       "TAILS_THRESHOLD" : { "type": "optional", "description": "The threshold for cutting off tail wavelets as a fraction of the maximum value", "multiple": 0, "actionlink": "none"},
       "MOTHER_WAVELET" : { "type": "flag", "description": " If this flag is set mother wavelets will be used instead of the scaling function (father wavelet)", "multiple": 0, "actionlink": "none", "default": "off"},
       "MIN_GRID_SIZE" : { "type": "optional", "description": "The minimal number of grid bins of the Wavelet function", "multiple": 0, "actionlink": "none"},
       "DUMP_WAVELET_GRID" : { "type": "flag", "description": " If this flag is set the grid with the wavelet values will be written to a file", "multiple": 0, "actionlink": "none", "default": "off"},
       "WAVELET_FILE_FMT" : { "type": "optional", "description": "The number format of the wavelet grid values and derivatives written to file", "multiple": 0, "actionlink": "none"},
       "PERIODIC" : { "type": "flag", "description": " Use periodic version of basis set", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                  ORDER - The order of the basis function expansion. \n                MINIMUM - The minimum of the interval on which the basis functions \n                          are defined. \n                MAXIMUM - The maximum of the interval on which the basis functions \n                          are defined. \n                   TYPE - Specify the wavelet type. Currently available are \n                          DAUBECHIES Wavelets with minimum phase and the more symmetric SYMLETS \n\nIn addition you may use the following options: \n\n             DEBUG_INFO - ( default=off ) Print out more detailed information about \n                          the basis set. Useful for debugging. \n         MOTHER_WAVELET - ( default=off ) If this flag is set mother wavelets will be \n                          used instead of the scaling function (father wavelet). Makes \n                          only sense for multiresolution, which is at the moment not \n                          usable. \n      DUMP_WAVELET_GRID - ( default=off ) If this flag is set the grid with the \n                          wavelet values will be written to a file. This file is called \n                          wavelet_grid.data. \n               PERIODIC - ( default=off ) Use periodic version of basis set. \n        FUNCTION_LENGTH - The domain size of the individual basis functions. (length) \n                          This is used to alter the scaling of the basis functions. By \n                          default it is set to the total size of the interval. This also \n                          influences the number of actually used basis functions, as all shifted \n                          functions that are partially supported in the CV space are used. \n                 NUM_BF - The number of basis functions that should be used. Includes \n                          the constant one and N-1 shifted wavelets within the specified \n                          range. Cannot be used together with FUNCTION_LENGTH. \n        TAILS_THRESHOLD - The threshold for cutting off tail wavelets as a fraction \n                          of the maximum value. All shifted wavelet functions that only \n                          have values smaller than the threshold in the bias range will be \n                          excluded from the basis set. Defaults to 0 (include all). \n          MIN_GRID_SIZE - The minimal number of grid bins of the Wavelet function. \n                          The true number depends also on the used wavelet type and will \n                          probably be larger. Defaults to 1000. \n       WAVELET_FILE_FMT - The number format of the wavelet grid values and \n                          derivatives written to file. By default it is %15.8f. \n\n"
  },
  "BIASVALUE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BIASVALUE",
    "description" : "Takes the value of one variable and use it as a bias",
    "module" : "bias",
    "displayname" : "BIASVALUE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar/vector arguments whose values will be used as a bias on the system", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "_bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "one or multiple instances of this quantity can be referenced elsewhere in the input file"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar/vector arguments whose values will \n                          be used as a bias on the system \n"
  },
  "BOPS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BOPS",
    "description" : "Calculate Bond orientational order parameters for molecules.",
    "module" : "crystdistrib",
    "displayname" : "BOPS",
     "dois" : ["10.1063/1.3548889"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "this keyword is used for colvars such as coordination number", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "this keyword is used for colvars such as the coordination number", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "this keyword is used for colvars such as the coordination number", "multiple": 1, "actionlink": "none"},
       "QUATERNIONS" : { "type": "compulsory", "description": "the label of the action that computes the quaternions that should be used", "multiple": 0, "actionlink": "none"},
       "KERNELFILE_DOPS" : { "type": "compulsory", "description": "the file containing the list of kernel parameters", "multiple": 0, "actionlink": "none"},
       "KERNELFILE_BOPS" : { "type": "compulsory", "description": "the second file containing the list of kernel parameters", "multiple": 0, "actionlink": "none"},
       "CUTOFF" : { "type": "compulsory", "description": "cutoff for the distance matrix", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the values of the bops order parameters"
         }
       }
    },
    "needs" : ["DISTANCE_MATRIX", "QUATERNION_BOND_PRODUCT_MATRIX", "CUSTOM", "ONES", "MATRIX_VECTOR_PRODUCT"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - this keyword is used for colvars such as coordination \n                          number. In that context it specifies that plumed should calculate \n                          one coordination number for each of the atoms specified. Each \n                          of these coordination numbers specifies how many of the other \n                          specified atoms are within a certain cutoff of the central atom. You \n                          can specify the atoms here as another multicolvar action or \n                          using a MultiColvarFilter or ActionVolume action. When you do so \n                          the quantity is calculated for those atoms specified in the \n                          previous multicolvar. This is useful if you would like to calculate \n                          the Steinhardt parameter for those atoms that have a \n                          coordination number more than four for example. For more information on \n                          how to specify lists of atoms see \ref Group \n               SPECIESA - this keyword is used for colvars such as the coordination \n                          number. In that context it species that plumed should calculate one \n                          coordination number for each of the atoms specified in SPECIESA. Each of \n                          these cooordination numbers specifies how many of the atoms \n                          specifies using SPECIESB is within the specified cutoff. As with the \n                          species keyword the input can also be specified using the label of \n                          another multicolvar \n               SPECIESB - this keyword is used for colvars such as the coordination \n                          number. It must appear with SPECIESA. For a full explanation see \n                          the documentation for that keyword \n\nThe following arguments are compulsory: \n\n            QUATERNIONS - the label of the action that computes the quaternions that \n                          should be used \n        KERNELFILE_DOPS - the file containing the list of kernel parameters. We \n                          expect h, mu and sigma parameters for a 1D Gaussian kernel of the \n                          form h*exp(-(x-mu)^2/2sigma^2) \n        KERNELFILE_BOPS - the second file containing the list of kernel parameters. \n                          Expecting a normalization factor (height), concentration parameter \n                          (kappa), and 3 norm vector pieces of the mean (mu_i, mu_j, mu_k )for \n                          a fisher distribution. of the form \n                          h*exp(kappa*dot(r_mean,r)), where dot is a standard dot product. \n                 CUTOFF - cutoff for the distance matrix \n"
  },
  "BRIDGE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BRIDGE",
    "description" : "Calculate the number of briding atoms between two groups",
    "module" : "adjmat",
    "displayname" : "BRIDGE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "GROUP" : { "type": "atoms", "description": "the atoms for which you would like to calculate the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "GROUPA" : { "type": "atoms", "description": "when you are calculating the adjacency matrix between two sets of atoms this keyword is used to specify the atoms along with the keyword GROUPB", "multiple": 1, "actionlink": "none"},
       "GROUPB" : { "type": "atoms", "description": "when you are calculating the adjacency matrix between two sets of atoms this keyword is used to specify the atoms along with the keyword GROUPA", "multiple": 1, "actionlink": "none"},
       "BRIDGING_ATOMS" : { "type": "atoms", "description": "The list of atoms that can form the bridge between the two interesting parts of the structure", "multiple": 1, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "The parameters of the two switching functions in the above formula", "multiple": 0, "actionlink": "LESS_THAN"},
       "SWITCHA" : { "type": "optional", "description": "The switching function on the distance between bridging atoms and the atoms in group A", "multiple": 0, "actionlink": "LESS_THAN"},
       "SWITCHB" : { "type": "optional", "description": "The switching function on the distance between the bridging atoms and the atoms in group B", "multiple": 0, "actionlink": "LESS_THAN"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the number of bridging atoms between the two groups"
         }
       }
    },
    "needs" : ["BRIDGE_MATRIX", "SUM"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - the atoms for which you would like to calculate the \n                          adjacency matrix. For more information on how to specify lists of \n                          atoms see \ref Group \n                 GROUPA - when you are calculating the adjacency matrix between two \n                          sets of atoms this keyword is used to specify the atoms along \n                          with the keyword GROUPB. For more information on how to specify \n                          lists of atoms see \ref Group \n                 GROUPB - when you are calculating the adjacency matrix between two \n                          sets of atoms this keyword is used to specify the atoms along \n                          with the keyword GROUPA. For more information on how to specify \n                          lists of atoms see \ref Group \n         BRIDGING_ATOMS - The list of atoms that can form the bridge between the two \n                          interesting parts of the structure.. For more information on how to \n                          specify lists of atoms see \ref Group \n                 SWITCH - The parameters of the two switching functions in the above \n                          formula \n                SWITCHA - The switching function on the distance between bridging \n                          atoms and the atoms in group A \n                SWITCHB - The switching function on the distance between the bridging \n                          atoms and the atoms in group B \n\n"
  },
  "BRIDGE_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/BRIDGE_MATRIX",
    "description" : "Calculate the number of atoms that bridge two parts of a structure",
    "module" : "adjmat",
    "displayname" : "BRIDGE_MATRIX",
     "dois" : ["10.1021/acs.jctc.6b01073"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "a vector that is used to used to determine which rows of the adjancency matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "GROUP" : { "type": "atoms", "description": "the atoms for which you would like to calculate the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "GROUPA" : { "type": "atoms", "description": "when you are calculating the adjacency matrix between two sets of atoms this keyword is used to specify the atoms along with the keyword GROUPB", "multiple": 1, "actionlink": "none"},
       "GROUPB" : { "type": "atoms", "description": "when you are calculating the adjacency matrix between two sets of atoms this keyword is used to specify the atoms along with the keyword GROUPA", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the atoms for which you would like to calculate the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "COMPONENTS" : { "type": "flag", "description": " also calculate the components of the vector connecting the atoms in the contact matrix", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOPBC" : { "type": "flag", "description": " don't use pbc", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "compulsory", "description": " The cutoff for the neighbor list", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "NL_STRIDE" : { "type": "compulsory", "description": " The frequency with which we are updating the atoms in the neighbor list", "multiple": 0, "actionlink": "none", "default": "1"},
       "BRIDGING_ATOMS" : { "type": "atoms", "description": "The list of atoms that can form the bridge between the two interesting parts of the structure", "multiple": 1, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "The parameters of the two switching functions in the above formula", "multiple": 0, "actionlink": "LESS_THAN"},
       "SWITCHA" : { "type": "optional", "description": "The switching function on the distance between bridging atoms and the atoms in group A", "multiple": 0, "actionlink": "LESS_THAN"},
       "SWITCHB" : { "type": "optional", "description": "The switching function on the distance between the bridging atoms and the atoms in group B", "multiple": 0, "actionlink": "LESS_THAN"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "w" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "a matrix containing the weights for the bonds between each pair of atoms"
         },
         "x" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the x axis"
         },
         "y" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the y axis"
         },
         "z" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the z axis"
         },
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "a matrix containing the weights for the bonds between each pair of atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - the atoms for which you would like to calculate the \n                          adjacency matrix. For more information on how to specify lists of \n                          atoms see \ref Group \n                 GROUPA - when you are calculating the adjacency matrix between two \n                          sets of atoms this keyword is used to specify the atoms along \n                          with the keyword GROUPB. For more information on how to specify \n                          lists of atoms see \ref Group \n                 GROUPB - when you are calculating the adjacency matrix between two \n                          sets of atoms this keyword is used to specify the atoms along \n                          with the keyword GROUPA. For more information on how to specify \n                          lists of atoms see \ref Group \n                  ATOMS - the atoms for which you would like to calculate the \n                          adjacency matrix. This is a depracated syntax that is equivalent to \n                          GROUP. You are strongly recommened to use GROUP instead of ATOMS. \n         BRIDGING_ATOMS - The list of atoms that can form the bridge between the two \n                          interesting parts of the structure.. For more information on how to \n                          specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n              NL_CUTOFF - ( default=0.0 ) The cutoff for the neighbor list. A value \n                          of 0 means we are not using a neighbor list \n              NL_STRIDE - ( default=1 ) The frequency with which we are updating the \n                          atoms in the neighbor list \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n             COMPONENTS - ( default=off ) also calculate the components of the vector \n                          connecting the atoms in the contact matrix \n                  NOPBC - ( default=off ) don't use pbc \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a vector that is used to used to determine which rows of \n                          the adjancency matrix to compute \n                 SWITCH - The parameters of the two switching functions in the above \n                          formula \n                SWITCHA - The switching function on the distance between bridging \n                          atoms and the atoms in group A \n                SWITCHB - The switching function on the distance between the bridging \n                          atoms and the atoms in group B \n\n"
  },
  "CALIBER": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CALIBER",
    "description" : "Add a time-dependent, harmonic restraint on one or more variables.",
    "module" : "isdb",
    "displayname" : "CALIBER",
     "dois" : ["10.1063/1.5030339"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "NOENSEMBLE" : { "type": "flag", "description": " don't perform any replica-averaging", "multiple": 0, "actionlink": "none", "default": "off"},
       "FILE" : { "type": "compulsory", "description": "the name of the file containing the time-resolved values", "multiple": 0, "actionlink": "none"},
       "KAPPA" : { "type": "compulsory", "description": "a force constant, this can be use to scale a constant estimated on-the-fly using AVERAGING", "multiple": 0, "actionlink": "none"},
       "AVERAGING" : { "type": "optional", "description": "Stride for calculation of the optimum kappa, if 0 only KAPPA is used", "multiple": 0, "actionlink": "none"},
       "TSCALE" : { "type": "compulsory", "description": " Apply a time scaling on the experimental time scale", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SCALE" : { "type": "compulsory", "description": " Apply a constant scaling on the data provided as arguments", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "REGRES_ZERO" : { "type": "optional", "description": "stride for regression with zero offset", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "x0" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the center of the potential"
         },
         "mean" : {
           "flag": "default",
           "type": "scalar",
           "description": "the current average value of the calculated observable"
         },
         "kappa" : {
           "flag": "default",
           "type": "scalar",
           "description": "the current force constant"
         },
         "scale" : {
           "flag": "REGRES_ZERO",
           "type": "scalar",
           "description": "the current scaling constant"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n                   FILE - the name of the file containing the time-resolved values \n                  KAPPA - a force constant, this can be use to scale a constant \n                          estimated on-the-fly using AVERAGING \n                 TSCALE - ( default=1.0 ) Apply a time scaling on the experimental \n                          time scale \n                  SCALE - ( default=1.0 ) Apply a constant scaling on the data \n                          provided as arguments \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n             NOENSEMBLE - ( default=off ) don't perform any replica-averaging \n              AVERAGING - Stride for calculation of the optimum kappa, if 0 only \n                          KAPPA is used. \n            REGRES_ZERO - stride for regression with zero offset \n\n"
  },
  "CAVITY": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CAVITY",
    "description" : "This quantity can be used to calculate functions of the distribution of collective variables for the atoms that lie in a box defined by the positions of four atoms.",
    "module" : "volumes",
    "displayname" : "CAVITY",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the group of atoms that you would like to investigate", "multiple": 1, "actionlink": "none"},
       "OUTSIDE" : { "type": "flag", "description": " calculate quantities for colvars that are on atoms outside the region of interest", "multiple": 0, "actionlink": "none", "default": "off"},
       "SIGMA" : { "type": "compulsory", "description": "the width of the function to be used for kernel density estimation", "multiple": 0, "actionlink": "none"},
       "KERNEL" : { "type": "compulsory", "description": " the type of kernel function to be used", "multiple": 0, "actionlink": "none", "default": "gaussian"},
       "BOX" : { "type": "atoms", "description": "the positions of four atoms that define spatial extent of the cavity", "multiple": 1, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "DATA" : { "type": "optional", "description": "the label of an action that calculates multicolvars", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calcualte the number of colvars that are inside the region of interest and that are less than a certain threshold", "multiple": 0, "actionlink": "none"},
       "MORE_THAN" : { "type": "optional", "description": "calcualte the number of colvars that are inside the region of interest and that are greater that a certain threshold", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of colvars that are inside the region of interest and that have a CV value that is between a particular set of bounds", "multiple": 0, "actionlink": "none"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the average value of the colvar inside the region of interest", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "sum of values of input CVs in regin of interest"
         },
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of cvs in the region of interest that are less than a certain threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of cvs in the region of interest that are more than a certain threshold"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of cvs in the region of interest that are within a certain range"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of all the colvars weighted by the function that determines if we are in the region"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the average values of the colvar in the region of interest"
         }
       }
    },
    "needs" : ["LESS_THAN", "MORE_THAN", "GROUP", "BETWEEN", "SUM", "MEAN", "CUSTOM"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the group of atoms that you would like to investigate. For \n                          more information on how to specify lists of atoms see \ref Group \n                    BOX - the positions of four atoms that define spatial extent of \n                          the cavity. For more information on how to specify lists of \n                          atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                  SIGMA - the width of the function to be used for kernel density \n                          estimation \n                 KERNEL - ( default=gaussian ) the type of kernel function to be used \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                OUTSIDE - ( default=off ) calculate quantities for colvars that are \n                          on atoms outside the region of interest \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the average value of the colvar \n                          inside the region of interest \n                   DATA - the label of an action that calculates multicolvars. \n                          Weighted sums based on the location of the colvars calculated by \n                          this action will be calcualted \n              LESS_THAN - calcualte the number of colvars that are inside the region \n                          of interest and that are less than a certain threshold \n              MORE_THAN - calcualte the number of colvars that are inside the region \n                          of interest and that are greater that a certain threshold \n                BETWEEN - calculate the number of colvars that are inside the region \n                          of interest and that have a CV value that is between a \n                          particular set of bounds \n\n"
  },
  "CAVITY_CALC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CAVITY_CALC",
    "description" : "",
    "module" : "volumes",
    "displayname" : "CAVITY",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the group of atoms that you would like to investigate", "multiple": 1, "actionlink": "none"},
       "OUTSIDE" : { "type": "flag", "description": " calculate quantities for colvars that are on atoms outside the region of interest", "multiple": 0, "actionlink": "none", "default": "off"},
       "SIGMA" : { "type": "compulsory", "description": "the width of the function to be used for kernel density estimation", "multiple": 0, "actionlink": "none"},
       "KERNEL" : { "type": "compulsory", "description": " the type of kernel function to be used", "multiple": 0, "actionlink": "none", "default": "gaussian"},
       "BOX" : { "type": "atoms", "description": "the positions of four atoms that define spatial extent of the cavity", "multiple": 1, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "vector of numbers between 0 and 1 that measure the degree to which each atom is within the volume of interest"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the group of atoms that you would like to investigate. For \n                          more information on how to specify lists of atoms see \ref Group \n                    BOX - the positions of four atoms that define spatial extent of \n                          the cavity. For more information on how to specify lists of \n                          atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                  SIGMA - the width of the function to be used for kernel density \n                          estimation \n                 KERNEL - ( default=gaussian ) the type of kernel function to be used \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                OUTSIDE - ( default=off ) calculate quantities for colvars that are \n                          on atoms outside the region of interest \n"
  },
  "CELL": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CELL",
    "description" : "Get the components of the simulation cell",
    "module" : "colvar",
    "displayname" : "CELL",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "output" : {
         "ax" : {
           "flag": "default",
           "type": "scalar",
           "description": "the ax component of the cell matrix"
         },
         "ay" : {
           "flag": "default",
           "type": "scalar",
           "description": "the ay component of the cell matrix"
         },
         "az" : {
           "flag": "default",
           "type": "scalar",
           "description": "the az component of the cell matrix"
         },
         "bx" : {
           "flag": "default",
           "type": "scalar",
           "description": "the bx component of the cell matrix"
         },
         "by" : {
           "flag": "default",
           "type": "scalar",
           "description": "the by component of the cell matrix"
         },
         "bz" : {
           "flag": "default",
           "type": "scalar",
           "description": "the bz component of the cell matrix"
         },
         "cx" : {
           "flag": "default",
           "type": "scalar",
           "description": "the cx component of the cell matrix"
         },
         "cy" : {
           "flag": "default",
           "type": "scalar",
           "description": "the cy component of the cell matrix"
         },
         "cz" : {
           "flag": "default",
           "type": "scalar",
           "description": "the cz component of the cell matrix"
         }
       }
    },
    "help" : ""
  },
  "CENTER": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CENTER",
    "description" : "Calculate the center for a group of atoms, with arbitrary weights.",
    "module" : "vatom",
    "displayname" : "CENTER",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the group of atoms that appear in the definition of this center", "multiple": 1, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "WEIGHTS" : { "type": "optional", "description": "what weights should be used when calculating the center", "multiple": 0, "actionlink": "none"},
       "PHASES" : { "type": "flag", "description": " use trigonometric phases when computing position of center", "multiple": 0, "actionlink": "none", "default": "off"},
       "SAFE_PHASES" : { "type": "flag", "description": " use trignomentric phases when computing position of center but also compute the center in ths usual way and use this when the pbc are not set", "multiple": 0, "actionlink": "none", "default": "off"},
       "MASS" : { "type": "flag", "description": " calculate the center of mass", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "atom",
           "description": "the position of the center of mass"
         }
       }
    },
    "needs" : ["MASS", "SUM", "CHARGE", "CONSTANT", "CUSTOM", "POSITION", "ARGS2VATOM"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the group of atoms that appear in the definition of this \n                          center. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 PHASES - ( default=off ) use trigonometric phases when computing \n                          position of center \n            SAFE_PHASES - ( default=off ) use trignomentric phases when computing \n                          position of center but also compute the center in ths usual way and \n                          use this when the pbc are not set. There are two reasons for \n                          using this option (1) you are doing something that you know is \n                          really weird or (2) you are an idiot \n                   MASS - ( default=off ) calculate the center of mass \n                WEIGHTS - what weights should be used when calculating the center. If \n                          this keyword is not present the geometric center is computed. If \n                          WEIGHTS=@Masses is used the center of mass is computed. If WEIGHTS=@charges \n                          the center of charge is computed. If the label of an action is \n                          provided PLUMED assumes that that action calculates a list of \n                          symmetry functions that can be used as weights. Lastly, an explicit \n                          list of numbers to use as weights can be provided \n\n"
  },
  "CENTER_FAST": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CENTER_FAST",
    "description" : "",
    "module" : "vatom",
    "displayname" : "CENTER",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the list of atoms which are involved the virtual atom's definition", "multiple": 1, "actionlink": "none"},
       "WEIGHTS" : { "type": "optional", "description": "Center is computed as a weighted average", "multiple": 0, "actionlink": "none"},
       "SET_CHARGE" : { "type": "optional", "description": "Set the charge of the virtual atom to a given value", "multiple": 0, "actionlink": "none"},
       "SET_MASS" : { "type": "optional", "description": "Set the mass of the virtual atom to a given value", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "MASS" : { "type": "flag", "description": " If set center is mass weighted", "multiple": 0, "actionlink": "none", "default": "off"},
       "PHASES" : { "type": "flag", "description": " Compute center using trigonometric phases", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the list of atoms which are involved the virtual atom's \n                          definition. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                   MASS - ( default=off ) If set center is mass weighted \n                 PHASES - ( default=off ) Compute center using trigonometric phases \n                WEIGHTS - Center is computed as a weighted average. \n             SET_CHARGE - Set the charge of the virtual atom to a given value. \n               SET_MASS - Set the mass of the virtual atom to a given value. \n\n"
  },
  "CHARGE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CHARGE",
    "description" : "Get the charges of one or multiple atoms",
    "module" : "colvar",
    "displayname" : "CHARGE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the atom numbers that you would like to store the masses and charges of", "multiple": 1, "actionlink": "none"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the CHARGE of the atom/s"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the atom numbers that you would like to store the masses \n                          and charges of. For more information on how to specify lists of \n                          atoms see \ref Group \n"
  },
  "CLASSICAL_MDS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CLASSICAL_MDS",
    "description" : "Create a low-dimensional projection of a trajectory using the classical multidimensional",
    "module" : "dimred",
    "displayname" : "CLASSICAL_MDS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the arguments that you would like to make the histogram for", "multiple": 0, "actionlink": "none"},
       "NLOW_DIM" : { "type": "compulsory", "description": "number of low-dimensional coordinates required", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "the low dimensional projections for the input data points"
         }
       }
    },
    "needs" : ["TRANSPOSE", "DISSIMILARITIES", "MATRIX_VECTOR_PRODUCT", "VSTACK", "SUM", "CUSTOM", "OUTER_PRODUCT", "DIAGONALIZE"],
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the arguments that you would like to make the histogram for \n               NLOW_DIM - number of low-dimensional coordinates required \n"
  },
  "CLUSTER_DIAMETER": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CLUSTER_DIAMETER",
    "description" : "Print out the diameter of one of the connected components.",
    "module" : "clusters",
    "displayname" : "CLUSTER_DIAMETER",
     "dois" : ["https://doi.org/10.1021/acs.jctc.6b01073"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "calculate ths radius of the cluster that are in this particular cluster", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "compulsory", "description": "the atoms that were used to calculate the matrix that was clustered", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the largest of all the distances between the pairs of atom in the cluster"
         }
       }
    },
    "needs" : ["DISTANCE_MATRIX", "OUTER_PRODUCT", "CUSTOM", "FLATTEN", "HIGHEST"],
    "help" : "\nThe following arguments are compulsory: \n\n                  ATOMS - the atoms that were used to calculate the matrix that was \n                          clustered \n                    ARG - calculate ths radius of the cluster that are in this \n                          particular cluster \n\n"
  },
  "CLUSTER_DISTRIBUTION": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CLUSTER_DISTRIBUTION",
    "description" : "Calculate functions of the distribution of properties in your connected components.",
    "module" : "clusters",
    "displayname" : "CLUSTER_DISTRIBUTION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "CLUSTERS" : { "type": "compulsory", "description": "the label of the action that does the clustering", "multiple": 0, "actionlink": "none"},
       "WEIGHTS" : { "type": "optional", "description": "use the vector of values calculated by this action as weights rather than giving each atom a unit weight", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "hidden", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "hidden", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "hidden", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "hidden", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "hidden", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "hidden", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "hidden", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN"],
    "help" : "\nThe following arguments are compulsory: \n\n               CLUSTERS - the label of the action that does the clustering \n                WEIGHTS - use the vector of values calculated by this action as \n                          weights rather than giving each atom a unit weight \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "CLUSTER_DISTRIBUTION_CALC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CLUSTER_DISTRIBUTION_CALC",
    "description" : "",
    "module" : "clusters",
    "displayname" : "CLUSTER_DISTRIBUTION",
     "dois" : ["https://doi.org/10.1021/acs.jctc.6b01073"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "CLUSTERS" : { "type": "compulsory", "description": "the label of the action that does the clustering", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "WEIGHTS" : { "type": "optional", "description": "use the vector of values calculated by this action as weights rather than giving each atom a unit weight", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "a vector containing the sum of a atomic-cv that is calculated for each of the identified clusters"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n               CLUSTERS - the label of the action that does the clustering \n                WEIGHTS - use the vector of values calculated by this action as \n                          weights rather than giving each atom a unit weight \n\n"
  },
  "CLUSTER_NATOMS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CLUSTER_NATOMS",
    "description" : "Calculate the number of atoms in the cluster of interest",
    "module" : "clusters",
    "displayname" : "CLUSTER_NATOMS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "CLUSTERS" : { "type": "compulsory", "description": "the label of the action that does the clustering", "multiple": 0, "actionlink": "none"},
       "CLUSTER" : { "type": "compulsory", "description": " which cluster would you like to look at 1 is the largest cluster, 2 is the second largest, 3 is the the third largest and so on", "multiple": 0, "actionlink": "none", "default": "1"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the number of atoms in the cluster"
         }
       }
    },
    "needs" : ["CLUSTER_WEIGHTS", "SUM"],
    "help" : "\nThe following arguments are compulsory: \n\n               CLUSTERS - the label of the action that does the clustering \n                CLUSTER - ( default=1 ) which cluster would you like to look at 1 is \n                          the largest cluster, 2 is the second largest, 3 is the the \n                          third largest and so on. \n"
  },
  "CLUSTER_PROPERTIES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CLUSTER_PROPERTIES",
    "description" : "Calculate properties of the distribution of some quantities that are part of a connected component",
    "module" : "clusters",
    "displayname" : "CLUSTER_PROPERTIES",
    "replacement" : "CLUSTER_WEIGHTS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "calculate the sum of the arguments calculated by this action for the cluster", "multiple": 0, "actionlink": "none"},
       "CLUSTERS" : { "type": "compulsory", "description": "the label of the action that does the clustering", "multiple": 0, "actionlink": "none"},
       "CLUSTER" : { "type": "compulsory", "description": " which cluster would you like to look at 1 is the largest cluster, 2 is the second largest, 3 is the the third largest and so on", "multiple": 0, "actionlink": "none", "default": "1"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "a vector that is one if the atom is part of the cluster or interest and zero otherwise"
         },
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CLUSTER_WEIGHTS"],
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - calculate the sum of the arguments calculated by this \n                          action for the cluster \n               CLUSTERS - the label of the action that does the clustering \n                CLUSTER - ( default=1 ) which cluster would you like to look at 1 is \n                          the largest cluster, 2 is the second largest, 3 is the the \n                          third largest and so on. \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "CLUSTER_WEIGHTS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CLUSTER_WEIGHTS",
    "description" : "Setup a vector that has one for all the atoms that form part of the cluster of interest and that has zero for all other atoms.",
    "module" : "clusters",
    "displayname" : "CLUSTER_WEIGHTS",
     "dois" : ["https://doi.org/10.1021/acs.jctc.6b01073"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "CLUSTERS" : { "type": "compulsory", "description": "the label of the action that does the clustering", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "CLUSTER" : { "type": "compulsory", "description": " which cluster would you like to look at 1 is the largest cluster, 2 is the second largest, 3 is the the third largest and so on", "multiple": 0, "actionlink": "none", "default": "1"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "vector with elements that are one if the atom of interest is part of the required cluster and zero otherwise"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n               CLUSTERS - the label of the action that does the clustering \n                CLUSTER - ( default=1 ) which cluster would you like to look at 1 is \n                          the largest cluster, 2 is the second largest, 3 is the the \n                          third largest and so on. \n"
  },
  "CLUSTER_WITHSURFACE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CLUSTER_WITHSURFACE",
    "description" : "Determine the atoms that are within a certain cutoff of the atoms in a cluster.",
    "module" : "clusters",
    "displayname" : "CLUSTER_WITHSURFACE",
     "dois" : ["https://doi.org/10.1021/acs.jctc.6b01073"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "RCUT_SURF" : { "type": "optional", "description": "the cutoff to use for determining which atoms are connected to the surface of the cluster", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "compulsory", "description": "the atoms that were used to calculate the matrix that was clustered", "multiple": 0, "actionlink": "none"},
       "CLUSTERS" : { "type": "compulsory", "description": "the label of the action that does the clustering", "multiple": 0, "actionlink": "none"},
       "CLUSTER" : { "type": "compulsory", "description": " which cluster would you like to look at 1 is the largest cluster, 2 is the second largest, 3 is the the third largest and so on", "multiple": 0, "actionlink": "none", "default": "1"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "a vector that is one for those atoms that are within the cluster or that are within a cetain cutoff of one of the atoms in the cluster and zero otherwise"
         }
       }
    },
    "needs" : ["CLUSTER_WEIGHTS", "CONTACT_MATRIX", "OUTER_PRODUCT", "CUSTOM", "DFSCLUSTERING"],
    "help" : "\nThe following arguments are compulsory: \n\n                  ATOMS - the atoms that were used to calculate the matrix that was \n                          clustered \n               CLUSTERS - the label of the action that does the clustering \n                CLUSTER - ( default=1 ) which cluster would you like to look at 1 is \n                          the largest cluster, 2 is the second largest, 3 is the the \n                          third largest and so on. \n              RCUT_SURF - the cutoff to use for determining which atoms are connected \n                          to the surface of the cluster \n\n"
  },
  "COLLECT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/COLLECT",
    "description" : "Collect data from the trajectory for later analysis",
    "module" : "generic",
    "displayname" : "COLLECT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the label of the value whose time series is being stored for later analysis", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the data should be collected and added to the quantity being averaged", "multiple": 0, "actionlink": "none", "default": "1"},
       "CLEAR" : { "type": "compulsory", "description": " the frequency with which to clear all the accumulated data", "multiple": 0, "actionlink": "none", "default": "0"},
       "TYPE" : { "type": "compulsory", "description": " required if you are collecting an object with rank>0", "multiple": 0, "actionlink": "none", "default": "auto"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector/matrix",
           "description": "the time series for the input quantity"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label of the value whose time series is being stored \n                          for later analysis \n                 STRIDE - ( default=1 ) the frequency with which the data should be \n                          collected and added to the quantity being averaged \n                  CLEAR - ( default=0 ) the frequency with which to clear all the \n                          accumulated data. The default value of 0 implies that all the data will \n                          be used and that the grid will never be cleared \n                   TYPE - ( default=auto ) required if you are collecting an object \n                          with rank>0. Should be vector/matrix and determines how data is \n                          stored. If rank==0 then data has to be stored as a vector \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \n\n"
  },
  "COLLECT_FRAMES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/COLLECT_FRAMES",
    "description" : "Collect atomic positions or argument values from the trajectory for later analysis",
    "module" : "landmarks",
    "displayname" : "COLLECT_FRAMES",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the labels of the values whose time series you would like to collect for later analysis", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which data should be stored for analysis", "multiple": 0, "actionlink": "none", "default": "1"},
       "CLEAR" : { "type": "compulsory", "description": " the frequency with which data should all be deleted and restarted", "multiple": 0, "actionlink": "none", "default": "0"},
       "ALIGN" : { "type": "compulsory", "description": " if storing atoms how would you like the alignment to be done can be SIMPLE/OPTIMAL", "multiple": 0, "actionlink": "none", "default": "OPTIMAL"},
       "ATOMS" : { "type": "optional", "description": "list of atomic positions that you would like to collect and store for later analysis", "multiple": 0, "actionlink": "none"},
       "LOGWEIGHTS" : { "type": "optional", "description": "list of actions that calculates log weights that should be used to weight configurations when calculating averages", "multiple": 0, "actionlink": "none"},
       "output" : {
         "data" : {
           "flag": "default",
           "type": "matrix",
           "description": "the data that is being collected by this action"
         },
         "logweights" : {
           "flag": "default",
           "type": "vector",
           "description": "the logarithms of the weights of the data points"
         }
       }
    },
    "needs" : ["POSITION", "CONCATENATE", "MEAN", "CUSTOM", "COLLECT", "TRANSPOSE", "RMSD_VECTOR", "COMBINE", "VSTACK", "CONSTANT"],
    "help" : "\nThe following arguments are compulsory: \n\n                 STRIDE - ( default=1 ) the frequency with which data should be \n                          stored for analysis. By default data is collected on every step \n                  CLEAR - ( default=0 ) the frequency with which data should all be \n                          deleted and restarted \n                  ALIGN - ( default=OPTIMAL ) if storing atoms how would you like the \n                          alignment to be done can be SIMPLE/OPTIMAL \n                    ARG - the labels of the values whose time series you would like \n                          to collect for later analysis \n                  ATOMS - list of atomic positions that you would like to collect and \n                          store for later analysis \n             LOGWEIGHTS - list of actions that calculates log weights that should be \n                          used to weight configurations when calculating averages \n\n"
  },
  "COM": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/COM",
    "description" : "Calculate the center of mass for a group of atoms.",
    "module" : "vatom",
    "displayname" : "COM",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the list of atoms which are involved the virtual atom's definition", "multiple": 1, "actionlink": "none"},
       "WEIGHTS" : { "type": "optional", "description": "Center is computed as a weighted average", "multiple": 0, "actionlink": "none"},
       "SET_CHARGE" : { "type": "optional", "description": "Set the charge of the virtual atom to a given value", "multiple": 0, "actionlink": "none"},
       "SET_MASS" : { "type": "optional", "description": "Set the mass of the virtual atom to a given value", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "MASS" : { "type": "flag", "description": " If set center is mass weighted", "multiple": 0, "actionlink": "none", "default": "off"},
       "PHASES" : { "type": "flag", "description": " Compute center using trigonometric phases", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the list of atoms which are involved the virtual atom's \n                          definition. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                   MASS - ( default=off ) If set center is mass weighted \n                 PHASES - ( default=off ) Compute center using trigonometric phases \n                WEIGHTS - Center is computed as a weighted average. \n             SET_CHARGE - Set the charge of the virtual atom to a given value. \n               SET_MASS - Set the mass of the virtual atom to a given value. \n\n"
  },
  "COMBINE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/COMBINE",
    "description" : "Calculate a polynomial combination of a set of other variables.",
    "module" : "function",
    "displayname" : "COMBINE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "PERIODIC" : { "type": "compulsory", "description": "if the output of your function is periodic then you should specify the periodicity of the function", "multiple": 0, "actionlink": "none"},
       "COEFFICIENTS" : { "type": "compulsory", "description": " the coefficients of the arguments in your function", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "PARAMETERS" : { "type": "compulsory", "description": " the parameters of the arguments in your function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "POWERS" : { "type": "compulsory", "description": " the powers to which you are raising each of the arguments in your function", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "NORMALIZE" : { "type": "flag", "description": " normalize all the coefficients so that in total they are equal to one", "multiple": 0, "actionlink": "none", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the values input to this function", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector/matrix that should be used to determine which elements of the vector/matrix should be computed", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector/matrix",
           "description": "a linear compbination"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n               PERIODIC - if the output of your function is periodic then you should \n                          specify the periodicity of the function. If the output is not \n                          periodic you must state this using PERIODIC=NO \n           COEFFICIENTS - ( default=1.0 ) the coefficients of the arguments in your \n                          function \n             PARAMETERS - ( default=0.0 ) the parameters of the arguments in your \n                          function \n                 POWERS - ( default=1.0 ) the powers to which you are raising each of \n                          the arguments in your function \n                    ARG - the values input to this function \n\nIn addition you may use the following options: \n\n              NORMALIZE - ( default=off ) normalize all the coefficients so that in \n                          total they are equal to one \n                   MASK - the label for a sparse vector/matrix that should be used to \n                          determine which elements of the vector/matrix should be computed \n\n"
  },
  "COMBINE_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/COMBINE_MATRIX",
    "description" : "",
    "module" : "function",
    "displayname" : "COMBINE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and matrices that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/matrix"},
       "MASK" : { "type": "optional", "description": "a matrix that is used to used to determine which elements of the output matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "PERIODIC" : { "type": "compulsory", "description": "if the output of your function is periodic then you should specify the periodicity of the function", "multiple": 0, "actionlink": "none"},
       "COEFFICIENTS" : { "type": "compulsory", "description": " the coefficients of the arguments in your function", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "PARAMETERS" : { "type": "compulsory", "description": " the parameters of the arguments in your function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "POWERS" : { "type": "compulsory", "description": " the powers to which you are raising each of the arguments in your function", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "NORMALIZE" : { "type": "flag", "description": " normalize all the coefficients so that in total they are equal to one", "multiple": 0, "actionlink": "none", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "the matrix obtained by doing an element-wise application of a linear compbination to the input matrix"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and matrices that on which the \n                          function is being calculated elementwise \n               PERIODIC - if the output of your function is periodic then you should \n                          specify the periodicity of the function. If the output is not \n                          periodic you must state this using PERIODIC=NO \n           COEFFICIENTS - ( default=1.0 ) the coefficients of the arguments in your \n                          function \n             PARAMETERS - ( default=0.0 ) the parameters of the arguments in your \n                          function \n                 POWERS - ( default=1.0 ) the powers to which you are raising each of \n                          the arguments in your function \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n              NORMALIZE - ( default=off ) normalize all the coefficients so that in \n                          total they are equal to one \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a matrix that is used to used to determine which elements \n                          of the output matrix to compute \n\n"
  },
  "COMBINE_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/COMBINE_SCALAR",
    "description" : "",
    "module" : "function",
    "displayname" : "COMBINE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "PERIODIC" : { "type": "compulsory", "description": "if the output of your function is periodic then you should specify the periodicity of the function", "multiple": 0, "actionlink": "none"},
       "COEFFICIENTS" : { "type": "compulsory", "description": " the coefficients of the arguments in your function", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "PARAMETERS" : { "type": "compulsory", "description": " the parameters of the arguments in your function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "POWERS" : { "type": "compulsory", "description": " the powers to which you are raising each of the arguments in your function", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "NORMALIZE" : { "type": "flag", "description": " normalize all the coefficients so that in total they are equal to one", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector/matrix",
           "description": "a linear compbination"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n               PERIODIC - if the output of your function is periodic then you should \n                          specify the periodicity of the function. If the output is not \n                          periodic you must state this using PERIODIC=NO \n           COEFFICIENTS - ( default=1.0 ) the coefficients of the arguments in your \n                          function \n             PARAMETERS - ( default=0.0 ) the parameters of the arguments in your \n                          function \n                 POWERS - ( default=1.0 ) the powers to which you are raising each of \n                          the arguments in your function \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n              NORMALIZE - ( default=off ) normalize all the coefficients so that in \n                          total they are equal to one \n"
  },
  "COMBINE_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/COMBINE_VECTOR",
    "description" : "",
    "module" : "function",
    "displayname" : "COMBINE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and vector that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "PERIODIC" : { "type": "compulsory", "description": "if the output of your function is periodic then you should specify the periodicity of the function", "multiple": 0, "actionlink": "none"},
       "COEFFICIENTS" : { "type": "compulsory", "description": " the coefficients of the arguments in your function", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "PARAMETERS" : { "type": "compulsory", "description": " the parameters of the arguments in your function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "POWERS" : { "type": "compulsory", "description": " the powers to which you are raising each of the arguments in your function", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "NORMALIZE" : { "type": "flag", "description": " normalize all the coefficients so that in total they are equal to one", "multiple": 0, "actionlink": "none", "default": "off"},
       "MASK" : { "type": "optional", "description": "the label for a sparse matrix that should be used to determine which elements of the matrix should be computed", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the vector obtained by doing an element-wise application of a linear compbination to the input vectors"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and vector that on which the \n                          function is being calculated elementwise \n               PERIODIC - if the output of your function is periodic then you should \n                          specify the periodicity of the function. If the output is not \n                          periodic you must state this using PERIODIC=NO \n           COEFFICIENTS - ( default=1.0 ) the coefficients of the arguments in your \n                          function \n             PARAMETERS - ( default=0.0 ) the parameters of the arguments in your \n                          function \n                 POWERS - ( default=1.0 ) the powers to which you are raising each of \n                          the arguments in your function \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n              NORMALIZE - ( default=off ) normalize all the coefficients so that in \n                          total they are equal to one \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - the label for a sparse matrix that should be used to \n                          determine which elements of the matrix should be computed \n\n"
  },
  "COMMITTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/COMMITTOR",
    "description" : "Does a committor analysis.",
    "module" : "generic",
    "displayname" : "COMMITTOR",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values which is being used to define the committor surface", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "BASIN_LL" : { "type": "compulsory", "description": "List of lower limits for basin #", "multiple": 1, "actionlink": "none"},
       "BASIN_UL" : { "type": "compulsory", "description": "List of upper limits for basin #", "multiple": 1, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the CVs are analyzed", "multiple": 0, "actionlink": "none", "default": "1"},
       "FILE" : { "type": "optional", "description": "the name of the file on which to output the reached basin", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "optional", "description": "the format that should be used to output real numbers", "multiple": 0, "actionlink": "none"},
       "NOSTOP" : { "type": "flag", "description": " if true do not stop the simulation when reaching a basin but just keep track of it", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values which is being used to define the \n                          committor surface \n               BASIN_LL - List of lower limits for basin #. You can use multiple \n                          instances of this keyword i.e. BASIN_LL1, BASIN_LL2, BASIN_LL3... \n               BASIN_UL - List of upper limits for basin #. You can use multiple \n                          instances of this keyword i.e. BASIN_UL1, BASIN_UL2, BASIN_UL3... \n                 STRIDE - ( default=1 ) the frequency with which the CVs are analyzed \n\nIn addition you may use the following options: \n\n                 NOSTOP - ( default=off ) if true do not stop the simulation when \n                          reaching a basin but just keep track of it \n                   FILE - the name of the file on which to output the reached basin \n                    FMT - the format that should be used to output real numbers \n\n"
  },
  "CONCATENATE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CONCATENATE",
    "description" : "Join vectors or matrices together",
    "module" : "valtools",
    "displayname" : "CONCATENATE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the values that should be concatenated together to form the output vector", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "MATRIX" : { "type": "compulsory", "description": "specify the matrices that you wish to join together into a single matrix", "multiple": 1, "actionlink": "none", "argtype": "scalar/matrix"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector/matrix",
           "description": "the concatenated vector/matrix that was constructed from the input values"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                 MATRIX - specify the matrices that you wish to join together into a \n                          single matrix. You can use multiple instances of this keyword i.e. \n                          MATRIX1, MATRIX2, MATRIX3... \n                    ARG - the values that should be concatenated together to form the \n                          output vector \n\n"
  },
  "CONSTANT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CONSTANT",
    "description" : "Create a constant value that can be passed to actions",
    "module" : "generic",
    "displayname" : "CONSTANT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "FILE" : { "type": "optional", "description": "an input file containing the matrix", "multiple": 0, "actionlink": "none"},
       "NROWS" : { "type": "compulsory", "description": " the number of rows in your input matrix", "multiple": 0, "actionlink": "none", "default": "0"},
       "NCOLS" : { "type": "compulsory", "description": " the number of columns in your matrix", "multiple": 0, "actionlink": "none", "default": "0"},
       "VALUE" : { "type": "optional", "description": "the single number that you would like to store", "multiple": 0, "actionlink": "none"},
       "VALUES" : { "type": "optional", "description": "the numbers that are in your constant value", "multiple": 0, "actionlink": "none"},
       "SCALARS" : { "type": "flag", "description": " treat the input list of numbers as a set of scalars", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOLOG" : { "type": "flag", "description": " do not report all the read in scalars in the log", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "v" : {
           "flag": "SCALARS",
           "type": "scalar",
           "description": "the # value"
         },
         "value" : {
           "flag": "default",
           "type": "scalar/vector/matrix",
           "description": "the constant value that was read from the plumed input"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                  NROWS - ( default=0 ) the number of rows in your input matrix \n                  NCOLS - ( default=0 ) the number of columns in your matrix \n\nIn addition you may use the following options: \n\n                SCALARS - ( default=off ) treat the input list of numbers as a set of \n                          scalars \n                  NOLOG - ( default=off ) do not report all the read in scalars in \n                          the log \n                   FILE - an input file containing the matrix \n                  VALUE - the single number that you would like to store \n                 VALUES - the numbers that are in your constant value \n\n"
  },
  "CONTACTMAP": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CONTACTMAP",
    "description" : "Calculate the distances between a number of pairs of atoms and transform each distance by a switching function.",
    "module" : "colvar",
    "displayname" : "CONTACTMAP",
     "dois" : ["10.1021/ja803652f", "10.1073/pnas.1311599110"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the atoms involved in each of the contacts you wish to calculate", "multiple": 1, "actionlink": "none"},
       "SWITCH" : { "type": "compulsory", "description": "The switching functions to use for each of the contacts in your map", "multiple": 1, "actionlink": "LESS_THAN"},
       "REFERENCE" : { "type": "optional", "description": "A reference value for a given contact, by default is 0", "multiple": 1, "actionlink": "none"},
       "WEIGHT" : { "type": "optional", "description": "A weight value for a given contact, by default is 1", "multiple": 1, "actionlink": "none"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the contacts in the input", "multiple": 0, "actionlink": "none", "default": "off"},
       "CMDIST" : { "type": "flag", "description": " calculate the distance with respect to the provided reference contact map", "multiple": 0, "actionlink": "none", "default": "off"},
       "SERIAL" : { "type": "flag", "description": " Perform the calculation in serial - for debug purpose", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "contact" : {
           "flag": "default",
           "type": "scalar",
           "description": "By not using SUM or CMDIST each contact will be stored in a component"
         },
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the sum of all the switching function on all the distances"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the atoms involved in each of the contacts you wish to \n                          calculate. Keywords like ATOMS1, ATOMS2, ATOMS3,... should be listed \n                          and one contact will be calculated for each ATOM keyword you \n                          specify.. You can use multiple instances of this keyword i.e. ATOMS1, \n                          ATOMS2, ATOMS3... \n\nThe following arguments are compulsory: \n\n                 SWITCH - The switching functions to use for each of the contacts in \n                          your map. You can either specify a global switching function \n                          using SWITCH or one switching function for each contact. Details \n                          of the various switching functions you can use are provided on \n                          \ref switchingfunction.. You can use multiple instances of this \n                          keyword i.e. SWITCH1, SWITCH2, SWITCH3... \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                    SUM - ( default=off ) calculate the sum of all the contacts in \n                          the input \n                 CMDIST - ( default=off ) calculate the distance with respect to the \n                          provided reference contact map \n                 SERIAL - ( default=off ) Perform the calculation in serial - for \n                          debug purpose \n              REFERENCE - A reference value for a given contact, by default is 0.0 \n                          You can either specify a global reference value using REFERENCE \n                          or one reference value for each contact.. You can use multiple \n                          instances of this keyword i.e. REFERENCE1, REFERENCE2, REFERENCE3... \n                 WEIGHT - A weight value for a given contact, by default is 1.0 You \n                          can either specify a global weight value using WEIGHT or one \n                          weight value for each contact.. You can use multiple instances of \n                          this keyword i.e. WEIGHT1, WEIGHT2, WEIGHT3... \n\n"
  },
  "CONTACT_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CONTACT_MATRIX",
    "description" : "Adjacency matrix in which two atoms are adjacent if they are within a certain cutoff.",
    "module" : "adjmat",
    "displayname" : "CONTACT_MATRIX",
     "dois" : ["10.1021/acs.jctc.6b01073"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "a vector that is used to used to determine which rows of the adjancency matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "GROUPA" : { "type": "atoms", "description": "when you are calculating the adjacency matrix between two sets of atoms this keyword is used to specify the atoms along with the keyword GROUPB", "multiple": 1, "actionlink": "none"},
       "GROUPB" : { "type": "atoms", "description": "when you are calculating the adjacency matrix between two sets of atoms this keyword is used to specify the atoms along with the keyword GROUPA", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the atoms for which you would like to calculate the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "COMPONENTS" : { "type": "flag", "description": " also calculate the components of the vector connecting the atoms in the contact matrix", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOPBC" : { "type": "flag", "description": " don't use pbc", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "compulsory", "description": " The cutoff for the neighbor list", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "NL_STRIDE" : { "type": "compulsory", "description": " The frequency with which we are updating the atoms in the neighbor list", "multiple": 0, "actionlink": "none", "default": "1"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "GROUP" : { "type": "optional", "description": "specifies the list of atoms that should be assumed indistinguishable", "multiple": 1, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "the input for the switching function that acts upon the distance between each pair of atoms", "multiple": 1, "actionlink": "LESS_THAN"},
       "output" : {
         "w" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "a matrix containing the weights for the bonds between each pair of atoms"
         },
         "x" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the x axis"
         },
         "y" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the y axis"
         },
         "z" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the z axis"
         },
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "a matrix containing the weights for the bonds between each pair of atoms"
         }
       }
    },
    "needs" : ["TRANSPOSE", "CONCATENATE"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                 GROUPA - when you are calculating the adjacency matrix between two \n                          sets of atoms this keyword is used to specify the atoms along \n                          with the keyword GROUPB. For more information on how to specify \n                          lists of atoms see \ref Group \n                 GROUPB - when you are calculating the adjacency matrix between two \n                          sets of atoms this keyword is used to specify the atoms along \n                          with the keyword GROUPA. For more information on how to specify \n                          lists of atoms see \ref Group \n                  ATOMS - the atoms for which you would like to calculate the \n                          adjacency matrix. This is a depracated syntax that is equivalent to \n                          GROUP. You are strongly recommened to use GROUP instead of ATOMS. \n\nThe following arguments are compulsory: \n\n              NL_CUTOFF - ( default=0.0 ) The cutoff for the neighbor list. A value \n                          of 0 means we are not using a neighbor list \n              NL_STRIDE - ( default=1 ) The frequency with which we are updating the \n                          atoms in the neighbor list \n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n             COMPONENTS - ( default=off ) also calculate the components of the vector \n                          connecting the atoms in the contact matrix \n                  NOPBC - ( default=off ) don't use pbc \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a vector that is used to used to determine which rows of \n                          the adjancency matrix to compute \n                  GROUP - specifies the list of atoms that should be assumed \n                          indistinguishable. You can use multiple instances of this keyword i.e. GROUP1, \n                          GROUP2, GROUP3... \n                 SWITCH - the input for the switching function that acts upon the \n                          distance between each pair of atoms. You can use multiple instances \n                          of this keyword i.e. SWITCH1, SWITCH2, SWITCH3... \n\n"
  },
  "CONTACT_MATRIX_PROPER": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CONTACT_MATRIX_PROPER",
    "description" : "Adjacency matrix in which two atoms are adjacent if they are within a certain cutoff.",
    "module" : "adjmat",
    "displayname" : "CONTACT_MATRIX",
     "dois" : ["10.1021/acs.jctc.6b01073"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "a vector that is used to used to determine which rows of the adjancency matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "GROUP" : { "type": "atoms", "description": "the atoms for which you would like to calculate the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "GROUPA" : { "type": "atoms", "description": "when you are calculating the adjacency matrix between two sets of atoms this keyword is used to specify the atoms along with the keyword GROUPB", "multiple": 1, "actionlink": "none"},
       "GROUPB" : { "type": "atoms", "description": "when you are calculating the adjacency matrix between two sets of atoms this keyword is used to specify the atoms along with the keyword GROUPA", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the atoms for which you would like to calculate the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "COMPONENTS" : { "type": "flag", "description": " also calculate the components of the vector connecting the atoms in the contact matrix", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOPBC" : { "type": "flag", "description": " don't use pbc", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "compulsory", "description": " The cutoff for the neighbor list", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "NL_STRIDE" : { "type": "compulsory", "description": " The frequency with which we are updating the atoms in the neighbor list", "multiple": 0, "actionlink": "none", "default": "1"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "This keyword is used if you want to employ an alternative to the continuous swiching function defined above", "multiple": 0, "actionlink": "LESS_THAN"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "w" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "a matrix containing the weights for the bonds between each pair of atoms"
         },
         "x" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the x axis"
         },
         "y" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the y axis"
         },
         "z" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the z axis"
         },
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "a matrix containing the weights for the bonds between each pair of atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - the atoms for which you would like to calculate the \n                          adjacency matrix. For more information on how to specify lists of \n                          atoms see \ref Group \n                 GROUPA - when you are calculating the adjacency matrix between two \n                          sets of atoms this keyword is used to specify the atoms along \n                          with the keyword GROUPB. For more information on how to specify \n                          lists of atoms see \ref Group \n                 GROUPB - when you are calculating the adjacency matrix between two \n                          sets of atoms this keyword is used to specify the atoms along \n                          with the keyword GROUPA. For more information on how to specify \n                          lists of atoms see \ref Group \n                  ATOMS - the atoms for which you would like to calculate the \n                          adjacency matrix. This is a depracated syntax that is equivalent to \n                          GROUP. You are strongly recommened to use GROUP instead of ATOMS. \n\nThe following arguments are compulsory: \n\n              NL_CUTOFF - ( default=0.0 ) The cutoff for the neighbor list. A value \n                          of 0 means we are not using a neighbor list \n              NL_STRIDE - ( default=1 ) The frequency with which we are updating the \n                          atoms in the neighbor list \n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n             COMPONENTS - ( default=off ) also calculate the components of the vector \n                          connecting the atoms in the contact matrix \n                  NOPBC - ( default=off ) don't use pbc \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a vector that is used to used to determine which rows of \n                          the adjancency matrix to compute \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous swiching function defined above. The \n                          following provides information on the \ref switchingfunction that are \n                          available. When this keyword is present you no longer need the NN, MM, \n                          D_0 and R_0 keywords. \n\n"
  },
  "CONVERT_TO_FES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CONVERT_TO_FES",
    "description" : "Convert a histogram to a free energy surface.",
    "module" : "gridtools",
    "displayname" : "CONVERT_TO_FES",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the histogram that you would like to convert into a free energy surface", "multiple": 0, "actionlink": "none"},
       "GRID" : { "type": "deprecated", "description": "You should use ARG instead of this keyword which was used in older versions of PLUMED and is provided for back compatibility only", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "the temperature at which you are operating", "multiple": 0, "actionlink": "none"},
       "MINTOZERO" : { "type": "flag", "description": " set the minimum in the free energy to be equal to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "grid",
           "description": "the free energy surface"
         }
       }
    },
    "needs" : ["FIND_GRID_MINIMUM", "CUSTOM"],
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the histogram that you would like to convert into a free \n                          energy surface \n\nIn addition you may use the following options: \n\n              MINTOZERO - ( default=off ) set the minimum in the free energy to be \n                          equal to zero \n                   TEMP - the temperature at which you are operating \n\n"
  },
  "COORDINATION": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/COORDINATION",
    "description" : "Calculate coordination numbers.",
    "module" : "colvar",
    "displayname" : "COORDINATION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "SERIAL" : { "type": "flag", "description": " Perform the calculation in serial - for debug purpose", "multiple": 0, "actionlink": "none", "default": "off"},
       "PAIR" : { "type": "flag", "description": " Pair only 1st element of the 1st group with 1st element in the second, etc", "multiple": 0, "actionlink": "none", "default": "off"},
       "NLIST" : { "type": "flag", "description": " Use a neighbor list to speed up the calculation", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "optional", "description": "The cutoff for the neighbor list", "multiple": 0, "actionlink": "none"},
       "NL_STRIDE" : { "type": "optional", "description": "The frequency with which we are updating the atoms in the neighbor list", "multiple": 0, "actionlink": "none"},
       "GROUPA" : { "type": "atoms", "description": "First list of atoms", "multiple": 1, "actionlink": "none"},
       "GROUPB" : { "type": "atoms", "description": "Second list of atoms (if empty, N*(N-1)/2 pairs in GROUPA are counted)", "multiple": 1, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "This keyword is used if you want to employ an alternative to the continuous switching function defined above", "multiple": 0, "actionlink": "LESS_THAN"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the value of the coordination"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                 GROUPA - First list of atoms. For more information on how to specify \n                          lists of atoms see \ref Group \n                 GROUPB - Second list of atoms (if empty, N*(N-1)/2 pairs in GROUPA \n                          are counted). For more information on how to specify lists of \n                          atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 SERIAL - ( default=off ) Perform the calculation in serial - for \n                          debug purpose \n                   PAIR - ( default=off ) Pair only 1st element of the 1st group with \n                          1st element in the second, etc \n                  NLIST - ( default=off ) Use a neighbor list to speed up the \n                          calculation \n              NL_CUTOFF - The cutoff for the neighbor list \n              NL_STRIDE - The frequency with which we are updating the atoms in the \n                          neighbor list \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous switching function defined above. The \n                          following provides information on the \ref switchingfunction that are \n                          available. When this keyword is present you no longer need the NN, MM, \n                          D_0 and R_0 keywords. \n\n"
  },
  "COORDINATIONNUMBER": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/COORDINATIONNUMBER",
    "description" : "Calculate the coordination numbers of atoms so that you can then calculate functions of the distribution of",
    "module" : "symfunc",
    "displayname" : "COORDINATIONNUMBER",
     "dois" : ["10.1021/ct500320c"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated and the atoms that can be in the environments", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "the list of atoms that can be in the environments of each of the atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "the switching function that it used in the construction of the contact matrix", "multiple": 0, "actionlink": "LESS_THAN"},
       "MASK" : { "type": "optional", "description": "the label for a vector that is used to determine which rows of the matrix are computed", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "R_POWER" : { "type": "compulsory", "description": "the power to which you want to raise the distance", "multiple": 0, "actionlink": "none"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "MOMENTS" : { "type": "optional", "description": "the list of moments that you would like to calculate", "multiple": 0, "actionlink": "none"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "moment" : {
           "flag": "MOMENTS",
           "type": "scalar",
           "description": "the moments of the distribution"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the coordination numbers of the specified atoms"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "GROUP", "MATRIX_VECTOR_PRODUCT", "ONES", "MOMENTS"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - the list of atoms for which the symmetry function is being \n                          calculated and the atoms that can be in the environments \n               SPECIESA - the list of atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESB, \n                          which specifies the atoms that are in the environment. \n               SPECIESB - the list of atoms that can be in the environments of each \n                          of the atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESA, \n                          which specifies the atoms for which the symmetry function is \n                          being calculated. \n\nThe following arguments are compulsory: \n\n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n                R_POWER - the power to which you want to raise the distance \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                 SWITCH - the switching function that it used in the construction of \n                          the contact matrix \n                   MASK - the label for a vector that is used to determine which rows \n                          of the matrix are computed \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n                MOMENTS - the list of moments that you would like to calculate \n\n"
  },
  "COORDINATION_MOMENTS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/COORDINATION_MOMENTS",
    "description" : "Calculate moments of the distribution of distances in the first coordination sphere",
    "module" : "symfunc",
    "displayname" : "COORDINATION_MOMENTS",
     "dois" : ["10.1021/ct500320c"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated and the atoms that can be in the environments", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "the list of atoms that can be in the environments of each of the atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "the switching function that it used in the construction of the contact matrix", "multiple": 0, "actionlink": "LESS_THAN"},
       "MASK" : { "type": "optional", "description": "the label for a vector that is used to determine which rows of the matrix are computed", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "R_POWER" : { "type": "compulsory", "description": "the power to which you want to raise the distance", "multiple": 0, "actionlink": "none"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "MOMENTS" : { "type": "optional", "description": "the list of moments that you would like to calculate", "multiple": 0, "actionlink": "none"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "moment" : {
           "flag": "MOMENTS",
           "type": "scalar",
           "description": "the moments of the distribution"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the coordination numbers of the specified atoms"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "GROUP", "MATRIX_VECTOR_PRODUCT", "ONES", "MOMENTS"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - the list of atoms for which the symmetry function is being \n                          calculated and the atoms that can be in the environments \n               SPECIESA - the list of atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESB, \n                          which specifies the atoms that are in the environment. \n               SPECIESB - the list of atoms that can be in the environments of each \n                          of the atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESA, \n                          which specifies the atoms for which the symmetry function is \n                          being calculated. \n\nThe following arguments are compulsory: \n\n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n                R_POWER - the power to which you want to raise the distance \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                 SWITCH - the switching function that it used in the construction of \n                          the contact matrix \n                   MASK - the label for a vector that is used to determine which rows \n                          of the matrix are computed \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n                MOMENTS - the list of moments that you would like to calculate \n\n"
  },
  "COORDINATION_SHELL_AVERAGE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/COORDINATION_SHELL_AVERAGE",
    "description" : "Calculate an arbitrary function of all the bond vectors in the first coordination sphere of an atom and take an average",
    "module" : "symfunc",
    "displayname" : "COORDINATION_SHELL_AVERAGE",
     "dois" : ["10.1021/ct500320c", "10.1103/PhysRevB.81.125416", "10.1103/PhysRevB.92.180102", "10.1063/1.4997180", "10.1063/1.5134461"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated and the atoms that can be in the environments", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "the list of atoms that can be in the environments of each of the atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "the switching function that it used in the construction of the contact matrix", "multiple": 0, "actionlink": "LESS_THAN"},
       "MASK" : { "type": "optional", "description": "the label for a vector that is used to determine which rows of the matrix are computed", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "FUNCTION" : { "type": "compulsory", "description": "the function of the bond vectors that you would like to evaluate", "multiple": 0, "actionlink": "none"},
       "PHI" : { "type": "compulsory", "description": " The Euler rotational angle phi", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "THETA" : { "type": "compulsory", "description": " The Euler rotational angle theta", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "PSI" : { "type": "compulsory", "description": " The Euler rotational angle psi", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "ALPHA" : { "type": "compulsory", "description": " The alpha parameter of the angular function that is used for FCCUBIC", "multiple": 0, "actionlink": "none", "default": "3.0"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the symmetry function for each of the specified atoms"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "GROUP", "FCCUBIC_FUNC", "ONES", "MATRIX_VECTOR_PRODUCT"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - the list of atoms for which the symmetry function is being \n                          calculated and the atoms that can be in the environments \n               SPECIESA - the list of atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESB, \n                          which specifies the atoms that are in the environment. \n               SPECIESB - the list of atoms that can be in the environments of each \n                          of the atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESA, \n                          which specifies the atoms for which the symmetry function is \n                          being calculated. \n\nThe following arguments are compulsory: \n\n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n               FUNCTION - the function of the bond vectors that you would like to \n                          evaluate \n                    PHI - ( default=0.0 ) The Euler rotational angle phi \n                  THETA - ( default=0.0 ) The Euler rotational angle theta \n                    PSI - ( default=0.0 ) The Euler rotational angle psi \n                  ALPHA - ( default=3.0 ) The alpha parameter of the angular function \n                          that is used for FCCUBIC \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                 SWITCH - the switching function that it used in the construction of \n                          the contact matrix \n                   MASK - the label for a vector that is used to determine which rows \n                          of the matrix are computed \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "COORDINATION_SHELL_FUNCTION": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/COORDINATION_SHELL_FUNCTION",
    "description" : "Calculate an arbitrary function of all the bond vectors in the first coordination sphere of an atom",
    "module" : "symfunc",
    "displayname" : "COORDINATION_SHELL_FUNCTION",
     "dois" : ["10.1021/ct500320c", "10.1103/PhysRevB.81.125416", "10.1103/PhysRevB.92.180102", "10.1063/1.4997180", "10.1063/1.5134461"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated and the atoms that can be in the environments", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "the list of atoms that can be in the environments of each of the atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "the switching function that it used in the construction of the contact matrix", "multiple": 0, "actionlink": "LESS_THAN"},
       "MASK" : { "type": "optional", "description": "the label for a vector that is used to determine which rows of the matrix are computed", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "FUNCTION" : { "type": "compulsory", "description": "the function of the bond vectors that you would like to evaluate", "multiple": 0, "actionlink": "none"},
       "PHI" : { "type": "compulsory", "description": " The Euler rotational angle phi", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "THETA" : { "type": "compulsory", "description": " The Euler rotational angle theta", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "PSI" : { "type": "compulsory", "description": " The Euler rotational angle psi", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "ALPHA" : { "type": "compulsory", "description": " The alpha parameter of the angular function that is used for FCCUBIC", "multiple": 0, "actionlink": "none", "default": "3.0"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the symmetry function for each of the specified atoms"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "GROUP", "FCCUBIC_FUNC", "ONES", "MATRIX_VECTOR_PRODUCT"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - the list of atoms for which the symmetry function is being \n                          calculated and the atoms that can be in the environments \n               SPECIESA - the list of atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESB, \n                          which specifies the atoms that are in the environment. \n               SPECIESB - the list of atoms that can be in the environments of each \n                          of the atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESA, \n                          which specifies the atoms for which the symmetry function is \n                          being calculated. \n\nThe following arguments are compulsory: \n\n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n               FUNCTION - the function of the bond vectors that you would like to \n                          evaluate \n                    PHI - ( default=0.0 ) The Euler rotational angle phi \n                  THETA - ( default=0.0 ) The Euler rotational angle theta \n                    PSI - ( default=0.0 ) The Euler rotational angle psi \n                  ALPHA - ( default=3.0 ) The alpha parameter of the angular function \n                          that is used for FCCUBIC \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                 SWITCH - the switching function that it used in the construction of \n                          the contact matrix \n                   MASK - the label for a vector that is used to determine which rows \n                          of the matrix are computed \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "COORD_ANGLES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/COORD_ANGLES",
    "description" : "Calculate functions of the distribution of angles between bonds in the first coordination spheres of a set of atoms",
    "module" : "multicolvar",
    "displayname" : "COORD_ANGLES",
    "replacement" : "MATRIX_PRODUCT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "CATOMS" : { "type": "atoms", "description": "all the angles between the bonds that radiate out from these central atom are computed", "multiple": 1, "actionlink": "none"},
       "GROUP" : { "type": "atoms", "description": "a list of angls between pairs of bonds connecting one of the atoms specified using the CATOM command and two of the atoms specified here are computed", "multiple": 1, "actionlink": "none"},
       "SWITCH" : { "type": "compulsory", "description": "the switching function specifies that only those bonds that have a length that is less than a certain threshold are considered", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "DISTANCE", "COMBINE", "VSTACK", "TRANSPOSE", "OUTER_PRODUCT", "MATRIX_PRODUCT"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                 CATOMS - all the angles between the bonds that radiate out from \n                          these central atom are computed. For more information on how to \n                          specify lists of atoms see \ref Group \n                  GROUP - a list of angls between pairs of bonds connecting one of \n                          the atoms specified using the CATOM command and two of the \n                          atoms specified here are computed. For more information on how to \n                          specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                 SWITCH - the switching function specifies that only those bonds that \n                          have a length that is less than a certain threshold are \n                          considered \n\nIn addition you may use the following options: \n\n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "COVARIANCE_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/COVARIANCE_MATRIX",
    "description" : "Calculate a covariance matix",
    "module" : "matrixtools",
    "displayname" : "COVARIANCE_MATRIX",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the vectors of data from which we are calculating the covariance", "multiple": 1, "actionlink": "none"},
       "WEIGHTS" : { "type": "compulsory", "description": "this keyword takes the label of an action that calculates a vector of values", "multiple": 0, "actionlink": "none"},
       "UNORMALIZED" : { "type": "flag", "description": " do not divide by the sum of the weights", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "the covariance matrix"
         }
       }
    },
    "needs" : ["SUM", "CUSTOM", "VSTACK", "TRANSPOSE", "ONES", "OUTER_PRODUCT", "MATRIX_PRODUCT"],
    "help" : "\nThe following arguments are compulsory: \n\n                WEIGHTS - this keyword takes the label of an action that calculates a \n                          vector of values. The elements of this vector are used as weights \n                          for the input data points. \n\nIn addition you may use the following options: \n\n            UNORMALIZED - ( default=off ) do not divide by the sum of the weights \n                    ARG - the vectors of data from which we are calculating the \n                          covariance. You can use multiple instances of this keyword i.e. ARG1, \n                          ARG2, ARG3... \n\n"
  },
  "CREATE_MASK": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CREATE_MASK",
    "description" : "Create a mask vector to use for landmark selection",
    "module" : "generic",
    "displayname" : "CREATE_MASK",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the label of the vector that you would like to construct a mask for", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "TYPE" : { "type": "compulsory", "description": "the way the zeros are supposed to be set", "multiple": 0, "actionlink": "none"},
       "NZEROS" : { "type": "compulsory", "description": "the number of zeros that you want to put in the mask", "multiple": 0, "actionlink": "none"},
       "SEED" : { "type": "optional", "description": "the seed to use for the random number generator", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "a vector of zeros and ones that is used that can be used to mask some of the elements in a time series"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label of the vector that you would like to construct a \n                          mask for \n                   TYPE - the way the zeros are supposed to be set \n                 NZEROS - the number of zeros that you want to put in the mask \n                   SEED - the seed to use for the random number generator \n\n"
  },
  "CS2BACKBONE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CS2BACKBONE",
    "description" : "Calculates the backbone chemical shifts for a protein.",
    "module" : "isdb",
    "displayname" : "CS2BACKBONE",
     "dois" : ["10.1021/ja903772t", "10.1073/pnas.1218350110", "10.1016/j.str.2010.04.016", "10.1021/ja210951z", "10.1021/jp3106666"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "DOSCORE" : { "type": "flag", "description": " activate metainference", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOENSEMBLE" : { "type": "flag", "description": " don't perform any replica-averaging", "multiple": 0, "actionlink": "none", "default": "off"},
       "REWEIGHT" : { "type": "flag", "description": " simple REWEIGHT using the ARG as energy", "multiple": 0, "actionlink": "none", "default": "off"},
       "AVERAGING" : { "type": "optional", "description": "Stride for calculation of averaged weights and sigma_mean", "multiple": 0, "actionlink": "none"},
       "NOISETYPE" : { "type": "compulsory", "description": " functional form of the noise (GAUSS,MGAUSS,OUTLIERS,MOUTLIERS,GENERIC)", "multiple": 0, "actionlink": "none", "default": "MGAUSS"},
       "LIKELIHOOD" : { "type": "compulsory", "description": " the likelihood for the GENERIC metainference model, GAUSS or LOGN", "multiple": 0, "actionlink": "none", "default": "GAUSS"},
       "DFTILDE" : { "type": "compulsory", "description": " fraction of sigma_mean used to evolve ftilde", "multiple": 0, "actionlink": "none", "default": "0.1"},
       "SCALEDATA" : { "type": "flag", "description": " Set to TRUE if you want to sample a scaling factor common to all values and replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALE0" : { "type": "compulsory", "description": " initial value of the scaling factor", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SCALE_PRIOR" : { "type": "compulsory", "description": " either FLAT or GAUSSIAN", "multiple": 0, "actionlink": "none", "default": "FLAT"},
       "SCALE_MIN" : { "type": "optional", "description": "minimum value of the scaling factor", "multiple": 0, "actionlink": "none"},
       "SCALE_MAX" : { "type": "optional", "description": "maximum value of the scaling factor", "multiple": 0, "actionlink": "none"},
       "DSCALE" : { "type": "optional", "description": "maximum MC move of the scaling factor", "multiple": 0, "actionlink": "none"},
       "ADDOFFSET" : { "type": "flag", "description": " Set to TRUE if you want to sample an offset common to all values and replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "OFFSET0" : { "type": "compulsory", "description": " initial value of the offset", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "OFFSET_PRIOR" : { "type": "compulsory", "description": " either FLAT or GAUSSIAN", "multiple": 0, "actionlink": "none", "default": "FLAT"},
       "OFFSET_MIN" : { "type": "optional", "description": "minimum value of the offset", "multiple": 0, "actionlink": "none"},
       "OFFSET_MAX" : { "type": "optional", "description": "maximum value of the offset", "multiple": 0, "actionlink": "none"},
       "DOFFSET" : { "type": "optional", "description": "maximum MC move of the offset", "multiple": 0, "actionlink": "none"},
       "REGRES_ZERO" : { "type": "optional", "description": "stride for regression with zero offset", "multiple": 0, "actionlink": "none"},
       "SIGMA0" : { "type": "compulsory", "description": " initial value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SIGMA_MIN" : { "type": "compulsory", "description": " minimum value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "SIGMA_MAX" : { "type": "compulsory", "description": " maximum value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "10."},
       "DSIGMA" : { "type": "optional", "description": "maximum MC move of the uncertainty parameter", "multiple": 0, "actionlink": "none"},
       "OPTSIGMAMEAN" : { "type": "compulsory", "description": " Set to NONE/SEM to manually set sigma mean, or to estimate it on the fly", "multiple": 0, "actionlink": "none", "default": "NONE"},
       "SIGMA_MEAN0" : { "type": "optional", "description": "starting value for the uncertainty in the mean estimate", "multiple": 0, "actionlink": "none"},
       "SIGMA_MAX_STEPS" : { "type": "optional", "description": "Number of steps used to optimise SIGMA_MAX, before that the SIGMA_MAX value is used", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "the system temperature - this is only needed if code doesn't pass the temperature to plumed", "multiple": 0, "actionlink": "none"},
       "MC_STEPS" : { "type": "optional", "description": "number of MC steps", "multiple": 0, "actionlink": "none"},
       "MC_CHUNKSIZE" : { "type": "optional", "description": "MC chunksize", "multiple": 0, "actionlink": "none"},
       "STATUS_FILE" : { "type": "optional", "description": "write a file with all the data useful for restart/continuation of Metainference", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "optional", "description": "specify format for HILLS files (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "WRITE_STRIDE" : { "type": "compulsory", "description": " write the status to a file every N steps, this can be used for restart/continuation", "multiple": 0, "actionlink": "none", "default": "10000"},
       "SELECTOR" : { "type": "optional", "description": "name of selector", "multiple": 0, "actionlink": "none"},
       "NSELECT" : { "type": "optional", "description": "range of values for selector [0, N-1]", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "SERIAL" : { "type": "flag", "description": " Perform the calculation in serial - for debug purpose", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "The atoms to be included in the calculation, e", "multiple": 1, "actionlink": "none"},
       "DATADIR" : { "type": "compulsory", "description": " The folder with the experimental chemical shifts", "multiple": 0, "actionlink": "none", "default": "data/"},
       "TEMPLATE" : { "type": "compulsory", "description": " A PDB file of the protein system", "multiple": 0, "actionlink": "none", "default": "template.pdb"},
       "NEIGH_FREQ" : { "type": "compulsory", "description": " Period in step for neighbor list update", "multiple": 0, "actionlink": "none", "default": "20"},
       "CAMSHIFT" : { "type": "flag", "description": " Set to TRUE if you to calculate a single CamShift score", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOEXP" : { "type": "flag", "description": " Set to TRUE if you don't want to have fixed components with the experimental values", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "score" : {
           "flag": "default",
           "type": "scalar",
           "description": "the Metainference score"
         },
         "sigma" : {
           "flag": "default",
           "type": "scalar",
           "description": "uncertainty parameter"
         },
         "sigmaMean" : {
           "flag": "default",
           "type": "scalar",
           "description": "uncertainty in the mean estimate"
         },
         "neff" : {
           "flag": "default",
           "type": "scalar",
           "description": "effective number of replicas"
         },
         "acceptSigma" : {
           "flag": "default",
           "type": "scalar",
           "description": "MC acceptance for sigma values"
         },
         "acceptScale" : {
           "flag": "SCALEDATA",
           "type": "scalar",
           "description": "MC acceptance for scale value"
         },
         "acceptFT" : {
           "flag": "GENERIC",
           "type": "scalar",
           "description": "MC acceptance for general metainference f tilde value"
         },
         "weight" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "weights of the weighted average"
         },
         "biasDer" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "derivatives with respect to the bias"
         },
         "scale" : {
           "flag": "SCALEDATA",
           "type": "scalar",
           "description": "scale parameter"
         },
         "offset" : {
           "flag": "ADDOFFSET",
           "type": "scalar",
           "description": "offset parameter"
         },
         "ftilde" : {
           "flag": "GENERIC",
           "type": "scalar",
           "description": "ensemble average estimator"
         },
         "ha" : {
           "flag": "default",
           "type": "scalar",
           "description": "the calculated Ha hydrogen chemical shifts"
         },
         "hn" : {
           "flag": "default",
           "type": "scalar",
           "description": "the calculated H hydrogen chemical shifts"
         },
         "nh" : {
           "flag": "default",
           "type": "scalar",
           "description": "the calculated N nitrogen chemical shifts"
         },
         "ca" : {
           "flag": "default",
           "type": "scalar",
           "description": "the calculated Ca carbon chemical shifts"
         },
         "cb" : {
           "flag": "default",
           "type": "scalar",
           "description": "the calculated Cb carbon chemical shifts"
         },
         "co" : {
           "flag": "default",
           "type": "scalar",
           "description": "the calculated C' carbon chemical shifts"
         },
         "expha" : {
           "flag": "default",
           "type": "scalar",
           "description": "the experimental Ha hydrogen chemical shifts"
         },
         "exphn" : {
           "flag": "default",
           "type": "scalar",
           "description": "the experimental H hydrogen chemical shifts"
         },
         "expnh" : {
           "flag": "default",
           "type": "scalar",
           "description": "the experimental N nitrogen chemical shifts"
         },
         "expca" : {
           "flag": "default",
           "type": "scalar",
           "description": "the experimental Ca carbon chemical shifts"
         },
         "expcb" : {
           "flag": "default",
           "type": "scalar",
           "description": "the experimental Cb carbon chemical shifts"
         },
         "expco" : {
           "flag": "default",
           "type": "scalar",
           "description": "the experimental C' carbon chemical shifts"
         },
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the backbone chemical shifts"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - The atoms to be included in the calculation, e.g. the whole \n                          protein.. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following arguments are compulsory: \n\n              NOISETYPE - ( default=MGAUSS ) functional form of the noise \n                          (GAUSS,MGAUSS,OUTLIERS,MOUTLIERS,GENERIC) \n             LIKELIHOOD - ( default=GAUSS ) the likelihood for the GENERIC \n                          metainference model, GAUSS or LOGN \n                DFTILDE - ( default=0.1 ) fraction of sigma_mean used to evolve \n                          ftilde \n                 SCALE0 - ( default=1.0 ) initial value of the scaling factor \n            SCALE_PRIOR - ( default=FLAT ) either FLAT or GAUSSIAN \n                OFFSET0 - ( default=0.0 ) initial value of the offset \n           OFFSET_PRIOR - ( default=FLAT ) either FLAT or GAUSSIAN \n                 SIGMA0 - ( default=1.0 ) initial value of the uncertainty parameter \n              SIGMA_MIN - ( default=0.0 ) minimum value of the uncertainty parameter \n              SIGMA_MAX - ( default=10. ) maximum value of the uncertainty parameter \n           OPTSIGMAMEAN - ( default=NONE ) Set to NONE/SEM to manually set sigma \n                          mean, or to estimate it on the fly \n           WRITE_STRIDE - ( default=10000 ) write the status to a file every N steps, \n                          this can be used for restart/continuation \n                DATADIR - ( default=data/ ) The folder with the experimental chemical \n                          shifts. \n               TEMPLATE - ( default=template.pdb ) A PDB file of the protein system. \n             NEIGH_FREQ - ( default=20 ) Period in step for neighbor list update. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                DOSCORE - ( default=off ) activate metainference \n             NOENSEMBLE - ( default=off ) don't perform any replica-averaging \n               REWEIGHT - ( default=off ) simple REWEIGHT using the ARG as energy \n              SCALEDATA - ( default=off ) Set to TRUE if you want to sample a scaling \n                          factor common to all values and replicas \n              ADDOFFSET - ( default=off ) Set to TRUE if you want to sample an offset \n                          common to all values and replicas \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 SERIAL - ( default=off ) Perform the calculation in serial - for \n                          debug purpose \n               CAMSHIFT - ( default=off ) Set to TRUE if you to calculate a single \n                          CamShift score. \n                  NOEXP - ( default=off ) Set to TRUE if you don't want to have fixed \n                          components with the experimental values. \n                    ARG - the labels of the values from which the function is \n                          calculated \n              AVERAGING - Stride for calculation of averaged weights and sigma_mean \n              SCALE_MIN - minimum value of the scaling factor \n              SCALE_MAX - maximum value of the scaling factor \n                 DSCALE - maximum MC move of the scaling factor \n             OFFSET_MIN - minimum value of the offset \n             OFFSET_MAX - maximum value of the offset \n                DOFFSET - maximum MC move of the offset \n            REGRES_ZERO - stride for regression with zero offset \n                 DSIGMA - maximum MC move of the uncertainty parameter \n            SIGMA_MEAN0 - starting value for the uncertainty in the mean estimate \n        SIGMA_MAX_STEPS - Number of steps used to optimise SIGMA_MAX, before that the \n                          SIGMA_MAX value is used \n                   TEMP - the system temperature - this is only needed if code \n                          doesn't pass the temperature to plumed \n               MC_STEPS - number of MC steps \n           MC_CHUNKSIZE - MC chunksize \n            STATUS_FILE - write a file with all the data useful for \n                          restart/continuation of Metainference \n                    FMT - specify format for HILLS files (useful for decrease the \n                          number of digits in regtests) \n               SELECTOR - name of selector \n                NSELECT - range of values for selector [0, N-1] \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n\n"
  },
  "CUSTOM": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CUSTOM",
    "description" : "Calculate a combination of variables using a custom expression.",
    "module" : "function",
    "displayname" : "CUSTOM",
     "dois" : ["10.1093/nar/gkv872"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "PERIODIC" : { "type": "compulsory", "description": "if the output of your function is periodic then you should specify the periodicity of the function", "multiple": 0, "actionlink": "none"},
       "FUNC" : { "type": "compulsory", "description": "the function you wish to evaluate", "multiple": 0, "actionlink": "none"},
       "VAR" : { "type": "optional", "description": "the names to give each of the arguments in the function", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs ", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the values input to this function", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix/grid"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector/matrix that should be used to determine which elements of the vector/matrix should be computed", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector/matrix/grid",
           "description": "an arbitrary function"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n               PERIODIC - if the output of your function is periodic then you should \n                          specify the periodicity of the function. If the output is not \n                          periodic you must state this using PERIODIC=NO \n                   FUNC - the function you wish to evaluate \n                    ARG - the values input to this function \n                    VAR - the names to give each of the arguments in the function. If \n                          you have up to three arguments in your function you can use x, \n                          y and z to refer to them. Otherwise you must use this flag to \n                          give your variables names. \n                   MASK - the label for a sparse vector/matrix that should be used to \n                          determine which elements of the vector/matrix should be computed \n\n"
  },
  "CUSTOM_GRID": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CUSTOM_GRID",
    "description" : "",
    "module" : "gridtools",
    "displayname" : "CUSTOM",
     "dois" : ["10.1093/nar/gkv872"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "PERIODIC" : { "type": "compulsory", "description": "if the output of your function is periodic then you should specify the periodicity of the function", "multiple": 0, "actionlink": "none"},
       "FUNC" : { "type": "compulsory", "description": "the function you wish to evaluate", "multiple": 0, "actionlink": "none"},
       "VAR" : { "type": "optional", "description": "the names to give each of the arguments in the function", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs ", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars and functions on a grid that we are using to compute the required function", "multiple": 0, "actionlink": "none", "argtype": "scalar/grid"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "grid",
           "description": "the grid obtained by doing an element-wise application of an arbitrary function to the input grid"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n               PERIODIC - if the output of your function is periodic then you should \n                          specify the periodicity of the function. If the output is not \n                          periodic you must state this using PERIODIC=NO \n                   FUNC - the function you wish to evaluate \n                    ARG - the labels of the scalars and functions on a grid that we \n                          are using to compute the required function \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                    VAR - the names to give each of the arguments in the function. If \n                          you have up to three arguments in your function you can use x, \n                          y and z to refer to them. Otherwise you must use this flag to \n                          give your variables names. \n\n"
  },
  "CUSTOM_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CUSTOM_MATRIX",
    "description" : "",
    "module" : "function",
    "displayname" : "CUSTOM",
     "dois" : ["10.1093/nar/gkv872"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and matrices that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/matrix"},
       "MASK" : { "type": "optional", "description": "a matrix that is used to used to determine which elements of the output matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "PERIODIC" : { "type": "compulsory", "description": "if the output of your function is periodic then you should specify the periodicity of the function", "multiple": 0, "actionlink": "none"},
       "FUNC" : { "type": "compulsory", "description": "the function you wish to evaluate", "multiple": 0, "actionlink": "none"},
       "VAR" : { "type": "optional", "description": "the names to give each of the arguments in the function", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs ", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "the matrix obtained by doing an element-wise application of an arbitrary function to the input matrix"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and matrices that on which the \n                          function is being calculated elementwise \n               PERIODIC - if the output of your function is periodic then you should \n                          specify the periodicity of the function. If the output is not \n                          periodic you must state this using PERIODIC=NO \n                   FUNC - the function you wish to evaluate \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a matrix that is used to used to determine which elements \n                          of the output matrix to compute \n                    VAR - the names to give each of the arguments in the function. If \n                          you have up to three arguments in your function you can use x, \n                          y and z to refer to them. Otherwise you must use this flag to \n                          give your variables names. \n\n"
  },
  "CUSTOM_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CUSTOM_SCALAR",
    "description" : "",
    "module" : "function",
    "displayname" : "CUSTOM",
     "dois" : ["10.1093/nar/gkv872"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "PERIODIC" : { "type": "compulsory", "description": "if the output of your function is periodic then you should specify the periodicity of the function", "multiple": 0, "actionlink": "none"},
       "FUNC" : { "type": "compulsory", "description": "the function you wish to evaluate", "multiple": 0, "actionlink": "none"},
       "VAR" : { "type": "optional", "description": "the names to give each of the arguments in the function", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs ", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector/matrix/grid",
           "description": "an arbitrary function"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n               PERIODIC - if the output of your function is periodic then you should \n                          specify the periodicity of the function. If the output is not \n                          periodic you must state this using PERIODIC=NO \n                   FUNC - the function you wish to evaluate \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                    VAR - the names to give each of the arguments in the function. If \n                          you have up to three arguments in your function you can use x, \n                          y and z to refer to them. Otherwise you must use this flag to \n                          give your variables names. \n\n"
  },
  "CUSTOM_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CUSTOM_VECTOR",
    "description" : "",
    "module" : "function",
    "displayname" : "CUSTOM",
     "dois" : ["10.1093/nar/gkv872"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and vector that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "PERIODIC" : { "type": "compulsory", "description": "if the output of your function is periodic then you should specify the periodicity of the function", "multiple": 0, "actionlink": "none"},
       "FUNC" : { "type": "compulsory", "description": "the function you wish to evaluate", "multiple": 0, "actionlink": "none"},
       "VAR" : { "type": "optional", "description": "the names to give each of the arguments in the function", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs ", "multiple": 0, "actionlink": "none"},
       "MASK" : { "type": "optional", "description": "the label for a sparse matrix that should be used to determine which elements of the matrix should be computed", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the vector obtained by doing an element-wise application of an arbitrary function to the input vectors"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and vector that on which the \n                          function is being calculated elementwise \n               PERIODIC - if the output of your function is periodic then you should \n                          specify the periodicity of the function. If the output is not \n                          periodic you must state this using PERIODIC=NO \n                   FUNC - the function you wish to evaluate \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                    VAR - the names to give each of the arguments in the function. If \n                          you have up to three arguments in your function you can use x, \n                          y and z to refer to them. Otherwise you must use this flag to \n                          give your variables names. \n                   MASK - the label for a sparse matrix that should be used to \n                          determine which elements of the matrix should be computed \n\n"
  },
  "CYLINDRICAL_HARMONIC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CYLINDRICAL_HARMONIC",
    "description" : "Calculate the cylindrical harmonic function",
    "module" : "symfunc",
    "displayname" : "CYLINDRICAL_HARMONIC",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "DEGREE" : { "type": "compulsory", "description": "the value of the n parameter in the equation above", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the values input to this function", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "output" : {
         "rm" : {
           "flag": "default",
           "type": "matrix",
           "description": "the real part of the cylindrical harmonic"
         },
         "im" : {
           "flag": "default",
           "type": "matrix",
           "description": "the imaginary part of the cylindrical harmonic"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                 DEGREE - the value of the n parameter in the equation above \n                    ARG - the values input to this function \n"
  },
  "CYLINDRICAL_HARMONIC_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/CYLINDRICAL_HARMONIC_MATRIX",
    "description" : "",
    "module" : "symfunc",
    "displayname" : "CYLINDRICAL_HARMONIC",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and matrices that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/matrix"},
       "MASK" : { "type": "optional", "description": "a matrix that is used to used to determine which elements of the output matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "DEGREE" : { "type": "compulsory", "description": "the value of the n parameter in the equation above", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "rm" : {
           "flag": "default",
           "type": "matrix",
           "description": "the real part of the cylindrical harmonic"
         },
         "im" : {
           "flag": "default",
           "type": "matrix",
           "description": "the imaginary part of the cylindrical harmonic"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and matrices that on which the \n                          function is being calculated elementwise \n                 DEGREE - the value of the n parameter in the equation above \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a matrix that is used to used to determine which elements \n                          of the output matrix to compute \n\n"
  },
  "DEBUG": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DEBUG",
    "description" : "Set some debug options.",
    "module" : "generic",
    "displayname" : "DEBUG",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which this action is to be performed", "multiple": 0, "actionlink": "none", "default": "1"},
       "logActivity" : { "type": "flag", "description": " write in the log which actions are inactive and which are inactive", "multiple": 0, "actionlink": "none", "default": "off"},
       "logRequestedAtoms" : { "type": "flag", "description": " write in the log which atoms have been requested at a given time", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOVIRIAL" : { "type": "flag", "description": " switch off the virial contribution for the entirety of the simulation", "multiple": 0, "actionlink": "none", "default": "off"},
       "DETAILED_TIMERS" : { "type": "flag", "description": " switch on detailed timers", "multiple": 0, "actionlink": "none", "default": "off"},
       "FILE" : { "type": "optional", "description": "the name of the file on which to output these quantities", "multiple": 0, "actionlink": "none"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                 STRIDE - ( default=1 ) the frequency with which this action is to be \n                          performed \n\nIn addition you may use the following options: \n\n            logActivity - ( default=off ) write in the log which actions are inactive \n                          and which are inactive \n      logRequestedAtoms - ( default=off ) write in the log which atoms have been \n                          requested at a given time \n               NOVIRIAL - ( default=off ) switch off the virial contribution for the \n                          entirety of the simulation \n        DETAILED_TIMERS - ( default=off ) switch on detailed timers \n                   FILE - the name of the file on which to output these quantities \n\n"
  },
  "DENSITY": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DENSITY",
    "description" : "Depreciated command that is bascially equivalant to GROUP.",
    "module" : "volumes",
    "displayname" : "DENSITY",
    "replacement" : "GROUP",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "compulsory", "description": "the atoms in the group", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "atoms",
           "description": "indices for the specified group of atoms"
         }
       }
    },
    "needs" : ["ONES", "GROUP"],
    "help" : "\nThe following arguments are compulsory: \n\n                SPECIES - the atoms in the group \n"
  },
  "DETERMINANT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DETERMINANT",
    "description" : "Calculate the determinant of a matrix",
    "module" : "matrixtools",
    "displayname" : "DETERMINANT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "The matrix that we are calculating the determinant for", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the determinant of the matrix"
         }
       }
    },
    "needs" : ["DIAGONALIZE", "PRODUCT"],
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - The matrix that we are calculating the determinant for \n"
  },
  "DFSCLUSTERING": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DFSCLUSTERING",
    "description" : "Find the connected components of the matrix using the depth first search clustering algorithm.",
    "module" : "clusters",
    "displayname" : "DFSCLUSTERING",
     "dois" : ["10.1021/acs.jctc.6b01073"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the input matrix", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "MATRIX" : { "type": "deprecated", "description": "You should use ARG instead of this keyword which was used in older versions of PLUMED and is provided for back compatibility only", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs ", "multiple": 0, "actionlink": "none"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "vector with length that is equal to the number of rows in the input matrix"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the input matrix \n"
  },
  "DHENERGY": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DHENERGY",
    "description" : "Calculate Debye-Huckel interaction energy between the atoms in GROUPA and GROUPB.",
    "module" : "colvar",
    "displayname" : "DHENERGY",
     "dois" : ["10.1021/ct3009914"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "SERIAL" : { "type": "flag", "description": " Perform the calculation in serial - for debug purpose", "multiple": 0, "actionlink": "none", "default": "off"},
       "PAIR" : { "type": "flag", "description": " Pair only 1st element of the 1st group with 1st element in the second, etc", "multiple": 0, "actionlink": "none", "default": "off"},
       "NLIST" : { "type": "flag", "description": " Use a neighbor list to speed up the calculation", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "optional", "description": "The cutoff for the neighbor list", "multiple": 0, "actionlink": "none"},
       "NL_STRIDE" : { "type": "optional", "description": "The frequency with which we are updating the atoms in the neighbor list", "multiple": 0, "actionlink": "none"},
       "GROUPA" : { "type": "atoms", "description": "First list of atoms", "multiple": 1, "actionlink": "none"},
       "GROUPB" : { "type": "atoms", "description": "Second list of atoms (if empty, N*(N-1)/2 pairs in GROUPA are counted)", "multiple": 1, "actionlink": "none"},
       "I" : { "type": "compulsory", "description": " Ionic strength (M)", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "TEMP" : { "type": "compulsory", "description": " Simulation temperature (K)", "multiple": 0, "actionlink": "none", "default": "300.0"},
       "EPSILON" : { "type": "compulsory", "description": " Dielectric constant of solvent", "multiple": 0, "actionlink": "none", "default": "80.0"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the value of the DHENERGY"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                 GROUPA - First list of atoms. For more information on how to specify \n                          lists of atoms see \ref Group \n                 GROUPB - Second list of atoms (if empty, N*(N-1)/2 pairs in GROUPA \n                          are counted). For more information on how to specify lists of \n                          atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                      I - ( default=1.0 ) Ionic strength (M) \n                   TEMP - ( default=300.0 ) Simulation temperature (K) \n                EPSILON - ( default=80.0 ) Dielectric constant of solvent \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 SERIAL - ( default=off ) Perform the calculation in serial - for \n                          debug purpose \n                   PAIR - ( default=off ) Pair only 1st element of the 1st group with \n                          1st element in the second, etc \n                  NLIST - ( default=off ) Use a neighbor list to speed up the \n                          calculation \n              NL_CUTOFF - The cutoff for the neighbor list \n              NL_STRIDE - The frequency with which we are updating the atoms in the \n                          neighbor list \n\n"
  },
  "DIAGONALIZE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DIAGONALIZE",
    "description" : "Calculate the eigenvalues and eigenvectors of a square matrix",
    "module" : "matrixtools",
    "displayname" : "DIAGONALIZE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the input matrix", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "MATRIX" : { "type": "deprecated", "description": "You should use ARG instead of this keyword which was used in older versions of PLUMED and is provided for back compatibility only", "multiple": 0, "actionlink": "none"},
       "VECTORS" : { "type": "compulsory", "description": " the eigenvalues and vectors that you would like to calculate", "multiple": 0, "actionlink": "none", "default": "all"},
       "output" : {
         "vals" : {
           "flag": "default",
           "type": "scalar",
           "description": "the eigevalues of the input matrix"
         },
         "vecs" : {
           "flag": "default",
           "type": "vector",
           "description": "the eigenvectors of the input matrix"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the input matrix \n                VECTORS - ( default=all ) the eigenvalues and vectors that you would \n                          like to calculate. 1=largest, 2=second largest and so on \n"
  },
  "DIFFERENCE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DIFFERENCE",
    "description" : "Calculate the differences between two scalars or vectors",
    "module" : "refdist",
    "displayname" : "DIFFERENCE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the values input to this function", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector/matrix that should be used to determine which elements of the vector/matrix should be computed", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "a function that measures the difference"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the values input to this function \n                   MASK - the label for a sparse vector/matrix that should be used to \n                          determine which elements of the vector/matrix should be computed \n\n"
  },
  "DIFFERENCE_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DIFFERENCE_SCALAR",
    "description" : "",
    "module" : "refdist",
    "displayname" : "DIFFERENCE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "a function that measures the difference"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n"
  },
  "DIFFERENCE_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DIFFERENCE_VECTOR",
    "description" : "",
    "module" : "refdist",
    "displayname" : "DIFFERENCE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and vector that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "MASK" : { "type": "optional", "description": "the label for a sparse matrix that should be used to determine which elements of the matrix should be computed", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the vector obtained by doing an element-wise application of a function that measures the difference to the input vectors"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and vector that on which the \n                          function is being calculated elementwise \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - the label for a sparse matrix that should be used to \n                          determine which elements of the matrix should be computed \n\n"
  },
  "DIHCOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DIHCOR",
    "description" : "Measures the degree of similarity between dihedral angles.",
    "module" : "multicolvar",
    "displayname" : "DIHCOR",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the set of 8 atoms that are being used each of the dihedral correlation values", "multiple": 1, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the sum of all the dihedral correlations"
         }
       }
    },
    "needs" : ["DIHEDRAL_CORRELATION", "SUM"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the set of 8 atoms that are being used each of the dihedral \n                          correlation values. For more information on how to specify lists of \n                          atoms see \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n"
  },
  "DIHEDRAL_CORRELATION": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DIHEDRAL_CORRELATION",
    "description" : "Measure the correlation between a pair of dihedral angles",
    "module" : "colvar",
    "displayname" : "DIHEDRAL_CORRELATION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the set of 8 atoms that are being used to calculate this quantity", "multiple": 1, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the DIHEDRAL_CORRELATION for these atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the set of 8 atoms that are being used to calculate this \n                          quantity. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n"
  },
  "DIHEDRAL_CORRELATION_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DIHEDRAL_CORRELATION_SCALAR",
    "description" : "",
    "module" : "colvar",
    "displayname" : "DIHEDRAL_CORRELATION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the set of 8 atoms that are being used to calculate this quantity", "multiple": 1, "actionlink": "none"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the DIHEDRAL_CORRELATION for these atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the set of 8 atoms that are being used to calculate this \n                          quantity. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n"
  },
  "DIHEDRAL_CORRELATION_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DIHEDRAL_CORRELATION_VECTOR",
    "description" : "",
    "module" : "colvar",
    "displayname" : "DIHEDRAL_CORRELATION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the set of 8 atoms that are being used to calculate this quantity", "multiple": 1, "actionlink": "none"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector that should be used to determine which elements of the vector should be computed", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the DIHEDRAL_CORRELATION for each set of specified atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the set of 8 atoms that are being used to calculate this \n                          quantity. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - the label for a sparse vector that should be used to \n                          determine which elements of the vector should be computed \n\n"
  },
  "DIMER": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DIMER",
    "description" : "This CV computes the dimer interaction energy for a collection of dimers.",
    "module" : "colvar",
    "displayname" : "DIMER",
     "dois" : ["10.1021/acs.jctc.6b00691"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "DSIGMA" : { "type": "compulsory", "description": "The interaction strength of the dimer bond", "multiple": 0, "actionlink": "none"},
       "Q" : { "type": "compulsory", "description": "The exponent of the dimer potential", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "compulsory", "description": "The temperature (in Kelvin) of the simulation", "multiple": 0, "actionlink": "none"},
       "ATOMS1" : { "type": "atoms", "description": "The list of atoms representing the first bead of each Dimer being considered by this CV", "multiple": 1, "actionlink": "none"},
       "ATOMS2" : { "type": "atoms", "description": "The list of atoms representing the second bead of each Dimer being considered by this CV", "multiple": 1, "actionlink": "none"},
       "ALLATOMS" : { "type": "flag", "description": " Use EVERY atom of the system", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOVSITES" : { "type": "flag", "description": " If present the configuration is without virtual sites at the centroid positions", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the dimer interaction energy"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                 ATOMS1 - The list of atoms representing the first bead of each Dimer \n                          being considered by this CV. Used if ALLATOMS flag is missing. \n                          For more information on how to specify lists of atoms see \ref \n                          Group \n                 ATOMS2 - The list of atoms representing the second bead of each \n                          Dimer being considered by this CV. Used if ALLATOMS flag is \n                          missing. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following arguments are compulsory: \n\n                 DSIGMA - The interaction strength of the dimer bond. \n                      Q - The exponent of the dimer potential. \n                   TEMP - The temperature (in Kelvin) of the simulation. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n               ALLATOMS - ( default=off ) Use EVERY atom of the system. Overrides \n                          ATOMS keyword. \n               NOVSITES - ( default=off ) If present the configuration is without \n                          virtual sites at the centroid positions. \n"
  },
  "DIPOLE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DIPOLE",
    "description" : "Calculate the dipole moment for a group of atoms.",
    "module" : "colvar",
    "displayname" : "DIPOLE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "GROUP" : { "type": "atoms", "description": "the group of atoms we are calculating the dipole moment for", "multiple": 1, "actionlink": "none"},
       "COMPONENTS" : { "type": "flag", "description": " calculate the x, y and z components of the dipole separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "x" : {
           "flag": "COMPONENTS",
           "type": "scalar/vector",
           "description": "the x-component of the dipole"
         },
         "y" : {
           "flag": "COMPONENTS",
           "type": "scalar/vector",
           "description": "the y-component of the dipole"
         },
         "z" : {
           "flag": "COMPONENTS",
           "type": "scalar/vector",
           "description": "the z-component of the dipole"
         },
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the DIPOLE for these atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - the group of atoms we are calculating the dipole moment \n                          for. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n             COMPONENTS - ( default=off ) calculate the x, y and z components of the \n                          dipole separately and store them as label.x, label.y and label.z \n"
  },
  "DIPOLE_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DIPOLE_SCALAR",
    "description" : "",
    "module" : "colvar",
    "displayname" : "DIPOLE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "GROUP" : { "type": "atoms", "description": "the group of atoms we are calculating the dipole moment for", "multiple": 1, "actionlink": "none"},
       "COMPONENTS" : { "type": "flag", "description": " calculate the x, y and z components of the dipole separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "output" : {
         "x" : {
           "flag": "COMPONENTS",
           "type": "scalar/vector",
           "description": "the x-component of the dipole"
         },
         "y" : {
           "flag": "COMPONENTS",
           "type": "scalar/vector",
           "description": "the y-component of the dipole"
         },
         "z" : {
           "flag": "COMPONENTS",
           "type": "scalar/vector",
           "description": "the z-component of the dipole"
         },
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the DIPOLE for these atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - the group of atoms we are calculating the dipole moment \n                          for. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n             COMPONENTS - ( default=off ) calculate the x, y and z components of the \n                          dipole separately and store them as label.x, label.y and label.z \n"
  },
  "DIPOLE_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DIPOLE_VECTOR",
    "description" : "",
    "module" : "colvar",
    "displayname" : "DIPOLE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "GROUP" : { "type": "atoms", "description": "the group of atoms we are calculating the dipole moment for", "multiple": 1, "actionlink": "none"},
       "COMPONENTS" : { "type": "flag", "description": " calculate the x, y and z components of the dipole separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector that should be used to determine which elements of the vector should be computed", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "output" : {
         "x" : {
           "flag": "COMPONENTS",
           "type": "scalar/vector",
           "description": "the x-component of the dipole"
         },
         "y" : {
           "flag": "COMPONENTS",
           "type": "scalar/vector",
           "description": "the y-component of the dipole"
         },
         "z" : {
           "flag": "COMPONENTS",
           "type": "scalar/vector",
           "description": "the z-component of the dipole"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the DIPOLE for each set of specified atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - the group of atoms we are calculating the dipole moment \n                          for. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n             COMPONENTS - ( default=off ) calculate the x, y and z components of the \n                          dipole separately and store them as label.x, label.y and label.z \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - the label for a sparse vector that should be used to \n                          determine which elements of the vector should be computed \n\n"
  },
  "DISPLACEMENT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DISPLACEMENT",
    "description" : "Calculate the displacement vector between the pair of input vectors",
    "module" : "refdist",
    "displayname" : "DISPLACEMENT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG1" : { "type": "compulsory", "description": "The point that we are calculating the distance from", "multiple": 0, "actionlink": "none"},
       "ARG2" : { "type": "compulsory", "description": "The point that we are calculating the distance to", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector/matrix",
           "description": "the differences between the input arguments"
         }
       }
    },
    "needs" : ["DIFFERENCE", "TRANSPOSE", "VSTACK"],
    "help" : "\nThe following arguments are compulsory: \n\n                   ARG1 - The point that we are calculating the distance from \n                   ARG2 - The point that we are calculating the distance to \n"
  },
  "DISSIMILARITIES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DISSIMILARITIES",
    "description" : "Calculate the matrix of dissimilarities between a trajectory of atomic configurations.",
    "module" : "matrixtools",
    "displayname" : "DISSIMILARITIES",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "a matrix that is used to used to determine which elements of the output matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "ARG" : { "type": "compulsory", "description": "the label of the two matrices from which the product is calculated", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "ELEMENTS_ON_DIAGONAL_ARE_ZERO" : { "type": "flag", "description": " set all diagonal elements to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "SQUARED" : { "type": "flag", "description": " calculate the squares of the dissimilarities (this option cannot be used with MATRIX_PRODUCT)", "multiple": 0, "actionlink": "none", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "the dissimilarity matrix"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label of the two matrices from which the product is \n                          calculated \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \nELEMENTS_ON_DIAGONAL_ARE_ZERO - ( default=off ) set all diagonal elements to zero \n                SQUARED - ( default=off ) calculate the squares of the \n                          dissimilarities (this option cannot be used with MATRIX_PRODUCT) \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a matrix that is used to used to determine which elements \n                          of the output matrix to compute \n\n"
  },
  "DISTANCE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DISTANCE",
    "description" : "Calculate the distance/s between pairs of atoms.",
    "module" : "colvar",
    "displayname" : "DISTANCE",
     "dois" : ["10.1007/978-1-4939-9608-7_21"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the pair of atom that we are calculating the distance between", "multiple": 1, "actionlink": "none"},
       "COMPONENTS" : { "type": "flag", "description": " calculate the x, y and z components of the distance separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALED_COMPONENTS" : { "type": "flag", "description": " calculate the a, b and c scaled components of the distance separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "x" : {
           "flag": "COMPONENTS",
           "type": "scalar/vector",
           "description": "the x-component of the vector connecting the two atoms"
         },
         "y" : {
           "flag": "COMPONENTS",
           "type": "scalar/vector",
           "description": "the y-component of the vector connecting the two atoms"
         },
         "z" : {
           "flag": "COMPONENTS",
           "type": "scalar/vector",
           "description": "the z-component of the vector connecting the two atoms"
         },
         "a" : {
           "flag": "SCALED_COMPONENTS",
           "type": "scalar/vector",
           "description": "the normalized projection on the first lattice vector of the vector connecting the two atoms"
         },
         "b" : {
           "flag": "SCALED_COMPONENTS",
           "type": "scalar/vector",
           "description": "the normalized projection on the second lattice vector of the vector connecting the two atoms"
         },
         "c" : {
           "flag": "SCALED_COMPONENTS",
           "type": "scalar/vector",
           "description": "the normalized projection on the third lattice vector of the vector connecting the two atoms"
         },
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the DISTANCE between this pair of atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the pair of atom that we are calculating the distance \n                          between. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n             COMPONENTS - ( default=off ) calculate the x, y and z components of the \n                          distance separately and store them as label.x, label.y and label.z \n      SCALED_COMPONENTS - ( default=off ) calculate the a, b and c scaled components \n                          of the distance separately and store them as label.a, label.b \n                          and label.c \n"
  },
  "DISTANCES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DISTANCES",
    "description" : "Calculate the distances between multiple piars of atoms",
    "module" : "multicolvar",
    "displayname" : "DISTANCES",
    "replacement" : "DISTANCE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "GROUP" : { "type": "atoms", "description": "Calculate the distance between each distinct pair of atoms in the group", "multiple": 1, "actionlink": "none"},
       "GROUPA" : { "type": "atoms", "description": "Calculate the distances between all the atoms in GROUPA and all the atoms in GROUPB", "multiple": 1, "actionlink": "none"},
       "GROUPB" : { "type": "atoms", "description": "Calculate the distances between all the atoms in GROUPA and all the atoms in GROUPB", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the pairs of atoms that you would like to calculate the angles for", "multiple": 1, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "COMPONENTS" : { "type": "flag", "description": " calculate the x, y and z components of the distance separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALED_COMPONENTS" : { "type": "flag", "description": " calculate the a, b and c scaled components of the distance separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "ORIGIN" : { "type": "atoms", "description": "calculate the distance of all the atoms specified using the ATOMS keyword from this point", "multiple": 1, "actionlink": "none"},
       "LOCATION" : { "type": "atoms", "description": "the location at which the CV is assumed to be in space", "multiple": 1, "actionlink": "none"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the DISTANCES between the each pair of atoms that were specified"
         },
         "x" : {
           "flag": "COMPONENTS",
           "type": "vector",
           "description": "the x-components of the distance vectors"
         },
         "y" : {
           "flag": "COMPONENTS",
           "type": "vector",
           "description": "the y-components of the distance vectors"
         },
         "z" : {
           "flag": "COMPONENTS",
           "type": "vector",
           "description": "the z-components of the distance vectors"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "GROUP", "DISTANCE", "CENTER"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - Calculate the distance between each distinct pair of atoms \n                          in the group \n                 GROUPA - Calculate the distances between all the atoms in GROUPA and \n                          all the atoms in GROUPB. This must be used in conjunction with \n                          GROUPB. \n                 GROUPB - Calculate the distances between all the atoms in GROUPA and \n                          all the atoms in GROUPB. This must be used in conjunction with \n                          GROUPA. \n                  ATOMS - the pairs of atoms that you would like to calculate the \n                          angles for. You can use multiple instances of this keyword i.e. \n                          ATOMS1, ATOMS2, ATOMS3... \n                 ORIGIN - calculate the distance of all the atoms specified using the \n                          ATOMS keyword from this point. For more information on how to \n                          specify lists of atoms see \ref Group \n               LOCATION - the location at which the CV is assumed to be in space. You \n                          can use multiple instances of this keyword i.e. LOCATION1, \n                          LOCATION2, LOCATION3... \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n             COMPONENTS - ( default=off ) calculate the x, y and z components of the \n                          distance separately and store them as label.x, label.y and label.z \n      SCALED_COMPONENTS - ( default=off ) calculate the a, b and c scaled components \n                          of the distance separately and store them as label.a, label.b \n                          and label.c \n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "DISTANCE_FROM_CONTOUR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DISTANCE_FROM_CONTOUR",
    "description" : "Calculate the perpendicular distance from a Willard-Chandler dividing surface.",
    "module" : "contour",
    "displayname" : "DISTANCE_FROM_CONTOUR",
     "dois" : ["10.1021/acs.jpcb.8b03661"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the label of the weights to use when constructing the density", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "POSITIONS" : { "type": "atoms", "description": "the positions of the atoms that we are calculating the contour from", "multiple": 1, "actionlink": "none"},
       "ATOM" : { "type": "atoms", "description": "The atom whose perpendicular distance we are calculating from the contour", "multiple": 1, "actionlink": "none"},
       "BANDWIDTH" : { "type": "compulsory", "description": "the bandwidths for kernel density esimtation", "multiple": 0, "actionlink": "none"},
       "KERNEL" : { "type": "compulsory", "description": " the kernel function you are using", "multiple": 0, "actionlink": "none", "default": "GAUSSIAN"},
       "CUTOFF" : { "type": "compulsory", "description": " the cutoff at which to stop evaluating the kernel functions is set equal to sqrt(2*x)*bandwidth in each direction where x is this number", "multiple": 0, "actionlink": "none", "default": "6.25"},
       "CONTOUR" : { "type": "compulsory", "description": "the value we would like for the contour", "multiple": 0, "actionlink": "none"},
       "DIR" : { "type": "compulsory", "description": "the direction perpendicular to the contour that you are looking for", "multiple": 0, "actionlink": "none"},
       "TOLERANCE" : { "type": "compulsory", "description": " this parameter is used to manage periodic boundary conditions", "multiple": 0, "actionlink": "none", "default": "0.1"},
       "output" : {
         "dist1" : {
           "flag": "default",
           "type": "scalar",
           "description": "the distance between the reference atom and the nearest contour"
         },
         "dist2" : {
           "flag": "default",
           "type": "scalar",
           "description": "the distance between the reference atom and the other contour"
         },
         "qdist" : {
           "flag": "default",
           "type": "scalar",
           "description": "the differentiable (squared) distance between the two contours (see above)"
         },
         "thickness" : {
           "flag": "default",
           "type": "scalar",
           "description": "the distance between the two contours on the line from the reference atom"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n              POSITIONS - the positions of the atoms that we are calculating the \n                          contour from. For more information on how to specify lists of atoms \n                          see \ref Group \n                   ATOM - The atom whose perpendicular distance we are calculating \n                          from the contour. For more information on how to specify lists \n                          of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n              BANDWIDTH - the bandwidths for kernel density esimtation \n                 KERNEL - ( default=GAUSSIAN ) the kernel function you are using. \n                          More details on the kernels available in plumed plumed can be \n                          found in \ref kernelfunctions. \n                 CUTOFF - ( default=6.25 ) the cutoff at which to stop evaluating the \n                          kernel functions is set equal to sqrt(2*x)*bandwidth in each \n                          direction where x is this number \n                CONTOUR - the value we would like for the contour \n                    DIR - the direction perpendicular to the contour that you are \n                          looking for \n              TOLERANCE - ( default=0.1 ) this parameter is used to manage periodic \n                          boundary conditions. The problem here is that we can be between \n                          contours even when we are not within the membrane because of \n                          periodic boundary conditions. When we are in the contour, however, \n                          we should have it so that the sums of the absolute values of \n                          the distances to the two contours is approximately the distance \n                          between the two contours. There can be numerical errors in these \n                          calculations, however, so we specify a small tolerance here \n                    ARG - the label of the weights to use when constructing the \n                          density. If this keyword is not here the weights are assumed to be \n                          one. \n\n"
  },
  "DISTANCE_FROM_SPHERICAL_CONTOUR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DISTANCE_FROM_SPHERICAL_CONTOUR",
    "description" : "Calculate the perpendicular distance from a Willard-Chandler dividing surface.",
    "module" : "contour",
    "displayname" : "DISTANCE_FROM_SPHERICAL_CONTOUR",
     "dois" : ["10.1021/acs.jpcb.8b03661"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the label of the weights to use when constructing the density", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "POSITIONS" : { "type": "atoms", "description": "the positions of the atoms that we are calculating the contour from", "multiple": 1, "actionlink": "none"},
       "ATOM" : { "type": "atoms", "description": "The atom whose perpendicular distance we are calculating from the contour", "multiple": 1, "actionlink": "none"},
       "BANDWIDTH" : { "type": "compulsory", "description": "the bandwidths for kernel density esimtation", "multiple": 0, "actionlink": "none"},
       "KERNEL" : { "type": "compulsory", "description": " the kernel function you are using", "multiple": 0, "actionlink": "none", "default": "GAUSSIAN"},
       "CUTOFF" : { "type": "compulsory", "description": " the cutoff at which to stop evaluating the kernel functions is set equal to sqrt(2*x)*bandwidth in each direction where x is this number", "multiple": 0, "actionlink": "none", "default": "6.25"},
       "CONTOUR" : { "type": "compulsory", "description": "the value we would like for the contour", "multiple": 0, "actionlink": "none"},
       "ORIGIN" : { "type": "atoms", "description": "The position of the center of the region that the contour encloses", "multiple": 1, "actionlink": "none"},
       "output" : {
         "dist" : {
           "flag": "default",
           "type": "scalar",
           "description": "the distance between the reference atom and the nearest contour"
         },
         "radius" : {
           "flag": "default",
           "type": "scalar",
           "description": "the radial distance from the center of the contour to the edge"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n              POSITIONS - the positions of the atoms that we are calculating the \n                          contour from. For more information on how to specify lists of atoms \n                          see \ref Group \n                   ATOM - The atom whose perpendicular distance we are calculating \n                          from the contour. For more information on how to specify lists \n                          of atoms see \ref Group \n                 ORIGIN - The position of the center of the region that the contour \n                          encloses. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following arguments are compulsory: \n\n              BANDWIDTH - the bandwidths for kernel density esimtation \n                 KERNEL - ( default=GAUSSIAN ) the kernel function you are using. \n                          More details on the kernels available in plumed plumed can be \n                          found in \ref kernelfunctions. \n                 CUTOFF - ( default=6.25 ) the cutoff at which to stop evaluating the \n                          kernel functions is set equal to sqrt(2*x)*bandwidth in each \n                          direction where x is this number \n                CONTOUR - the value we would like for the contour \n                    ARG - the label of the weights to use when constructing the \n                          density. If this keyword is not here the weights are assumed to be \n                          one. \n\n"
  },
  "DISTANCE_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DISTANCE_MATRIX",
    "description" : "Calculate a matrix of distances between atoms.",
    "module" : "adjmat",
    "displayname" : "DISTANCE_MATRIX",
     "dois" : ["10.1021/acs.jctc.6b01073"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "a vector that is used to used to determine which rows of the adjancency matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "GROUP" : { "type": "atoms", "description": "the atoms for which you would like to calculate the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "GROUPA" : { "type": "atoms", "description": "when you are calculating the adjacency matrix between two sets of atoms this keyword is used to specify the atoms along with the keyword GROUPB", "multiple": 1, "actionlink": "none"},
       "GROUPB" : { "type": "atoms", "description": "when you are calculating the adjacency matrix between two sets of atoms this keyword is used to specify the atoms along with the keyword GROUPA", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the atoms for which you would like to calculate the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "COMPONENTS" : { "type": "flag", "description": " also calculate the components of the vector connecting the atoms in the contact matrix", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOPBC" : { "type": "flag", "description": " don't use pbc", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "compulsory", "description": " The cutoff for the neighbor list", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "NL_STRIDE" : { "type": "compulsory", "description": " The frequency with which we are updating the atoms in the neighbor list", "multiple": 0, "actionlink": "none", "default": "1"},
       "CUTOFF" : { "type": "compulsory", "description": " ignore distances that have a value larger than this cutoff", "multiple": 0, "actionlink": "none", "default": "-1"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "w" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "a matrix containing the weights for the bonds between each pair of atoms"
         },
         "x" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the x axis"
         },
         "y" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the y axis"
         },
         "z" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the z axis"
         },
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "a matrix containing the weights for the bonds between each pair of atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - the atoms for which you would like to calculate the \n                          adjacency matrix. For more information on how to specify lists of \n                          atoms see \ref Group \n                 GROUPA - when you are calculating the adjacency matrix between two \n                          sets of atoms this keyword is used to specify the atoms along \n                          with the keyword GROUPB. For more information on how to specify \n                          lists of atoms see \ref Group \n                 GROUPB - when you are calculating the adjacency matrix between two \n                          sets of atoms this keyword is used to specify the atoms along \n                          with the keyword GROUPA. For more information on how to specify \n                          lists of atoms see \ref Group \n                  ATOMS - the atoms for which you would like to calculate the \n                          adjacency matrix. This is a depracated syntax that is equivalent to \n                          GROUP. You are strongly recommened to use GROUP instead of ATOMS. \n\nThe following arguments are compulsory: \n\n              NL_CUTOFF - ( default=0.0 ) The cutoff for the neighbor list. A value \n                          of 0 means we are not using a neighbor list \n              NL_STRIDE - ( default=1 ) The frequency with which we are updating the \n                          atoms in the neighbor list \n                 CUTOFF - ( default=-1 ) ignore distances that have a value larger \n                          than this cutoff \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n             COMPONENTS - ( default=off ) also calculate the components of the vector \n                          connecting the atoms in the contact matrix \n                  NOPBC - ( default=off ) don't use pbc \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a vector that is used to used to determine which rows of \n                          the adjancency matrix to compute \n\n"
  },
  "DISTANCE_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DISTANCE_SCALAR",
    "description" : "",
    "module" : "colvar",
    "displayname" : "DISTANCE",
     "dois" : ["10.1007/978-1-4939-9608-7_21"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the pair of atom that we are calculating the distance between", "multiple": 1, "actionlink": "none"},
       "COMPONENTS" : { "type": "flag", "description": " calculate the x, y and z components of the distance separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALED_COMPONENTS" : { "type": "flag", "description": " calculate the a, b and c scaled components of the distance separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "output" : {
         "x" : {
           "flag": "COMPONENTS",
           "type": "scalar/vector",
           "description": "the x-component of the vector connecting the two atoms"
         },
         "y" : {
           "flag": "COMPONENTS",
           "type": "scalar/vector",
           "description": "the y-component of the vector connecting the two atoms"
         },
         "z" : {
           "flag": "COMPONENTS",
           "type": "scalar/vector",
           "description": "the z-component of the vector connecting the two atoms"
         },
         "a" : {
           "flag": "SCALED_COMPONENTS",
           "type": "scalar/vector",
           "description": "the normalized projection on the first lattice vector of the vector connecting the two atoms"
         },
         "b" : {
           "flag": "SCALED_COMPONENTS",
           "type": "scalar/vector",
           "description": "the normalized projection on the second lattice vector of the vector connecting the two atoms"
         },
         "c" : {
           "flag": "SCALED_COMPONENTS",
           "type": "scalar/vector",
           "description": "the normalized projection on the third lattice vector of the vector connecting the two atoms"
         },
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the DISTANCE between this pair of atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the pair of atom that we are calculating the distance \n                          between. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n             COMPONENTS - ( default=off ) calculate the x, y and z components of the \n                          distance separately and store them as label.x, label.y and label.z \n      SCALED_COMPONENTS - ( default=off ) calculate the a, b and c scaled components \n                          of the distance separately and store them as label.a, label.b \n                          and label.c \n"
  },
  "DISTANCE_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DISTANCE_VECTOR",
    "description" : "",
    "module" : "colvar",
    "displayname" : "DISTANCE",
     "dois" : ["10.1007/978-1-4939-9608-7_21"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the pair of atom that we are calculating the distance between", "multiple": 1, "actionlink": "none"},
       "COMPONENTS" : { "type": "flag", "description": " calculate the x, y and z components of the distance separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALED_COMPONENTS" : { "type": "flag", "description": " calculate the a, b and c scaled components of the distance separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector that should be used to determine which elements of the vector should be computed", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "output" : {
         "x" : {
           "flag": "COMPONENTS",
           "type": "scalar/vector",
           "description": "the x-component of the vector connecting the two atoms"
         },
         "y" : {
           "flag": "COMPONENTS",
           "type": "scalar/vector",
           "description": "the y-component of the vector connecting the two atoms"
         },
         "z" : {
           "flag": "COMPONENTS",
           "type": "scalar/vector",
           "description": "the z-component of the vector connecting the two atoms"
         },
         "a" : {
           "flag": "SCALED_COMPONENTS",
           "type": "scalar/vector",
           "description": "the normalized projection on the first lattice vector of the vector connecting the two atoms"
         },
         "b" : {
           "flag": "SCALED_COMPONENTS",
           "type": "scalar/vector",
           "description": "the normalized projection on the second lattice vector of the vector connecting the two atoms"
         },
         "c" : {
           "flag": "SCALED_COMPONENTS",
           "type": "scalar/vector",
           "description": "the normalized projection on the third lattice vector of the vector connecting the two atoms"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the DISTANCE for each set of specified atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the pair of atom that we are calculating the distance \n                          between. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n             COMPONENTS - ( default=off ) calculate the x, y and z components of the \n                          distance separately and store them as label.x, label.y and label.z \n      SCALED_COMPONENTS - ( default=off ) calculate the a, b and c scaled components \n                          of the distance separately and store them as label.a, label.b \n                          and label.c \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - the label for a sparse vector that should be used to \n                          determine which elements of the vector should be computed \n\n"
  },
  "DOMAIN_DECOMPOSITION": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DOMAIN_DECOMPOSITION",
    "description" : "Pass domain decomposed properties of atoms to PLUMED",
    "module" : "core",
    "displayname" : "DOMAIN_DECOMPOSITION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "NATOMS" : { "type": "compulsory", "description": "the number of atoms across all the domains", "multiple": 0, "actionlink": "none"},
       "VALUE" : { "type": "optional", "description": "value to create for the domain decomposition", "multiple": 1, "actionlink": "none"},
       "UNIT" : { "type": "optional", "description": "unit of the ith value that is being passed through the domain decomposition", "multiple": 1, "actionlink": "none"},
       "CONSTANT" : { "type": "optional", "description": "is the ith value that is being passed through the domain decomposition constant", "multiple": 1, "actionlink": "none"},
       "PERIODIC" : { "type": "optional", "description": "if the value being passed to plumed is periodic then you should specify the periodicity of the function", "multiple": 1, "actionlink": "none"},
       "ROLE" : { "type": "optional", "description": "Get the role this value plays in the code can be x/y/z/m/q to signify that this is x, y, z positions of atoms or masses or charges of atoms", "multiple": 1, "actionlink": "none"},
       "PBCLABEL" : { "type": "compulsory", "description": " the label to use for the PBC action that will be created", "multiple": 0, "actionlink": "none", "default": "Box"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the domain that each atom is within"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                 NATOMS - the number of atoms across all the domains \n               PBCLABEL - ( default=Box ) the label to use for the PBC action that \n                          will be created \n                  VALUE - value to create for the domain decomposition. You can use \n                          multiple instances of this keyword i.e. VALUE1, VALUE2, VALUE3... \n                   UNIT - unit of the ith value that is being passed through the \n                          domain decomposition. You can use multiple instances of this \n                          keyword i.e. UNIT1, UNIT2, UNIT3... \n               CONSTANT - is the ith value that is being passed through the domain \n                          decomposition constant. You can use multiple instances of this keyword \n                          i.e. CONSTANT1, CONSTANT2, CONSTANT3... \n               PERIODIC - if the value being passed to plumed is periodic then you \n                          should specify the periodicity of the function. If the value is \n                          not periodic you must state this using PERIODIC=NO. Positions \n                          are passed with PERIODIC=NO even though special methods are \n                          used to deal with pbc. You can use multiple instances of this \n                          keyword i.e. PERIODIC1, PERIODIC2, PERIODIC3... \n                   ROLE - Get the role this value plays in the code can be x/y/z/m/q \n                          to signify that this is x, y, z positions of atoms or masses \n                          or charges of atoms. You can use multiple instances of this \n                          keyword i.e. ROLE1, ROLE2, ROLE3... \n\n"
  },
  "DOPS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DOPS",
    "description" : "Calculate DOPS order parameter for molecules.",
    "module" : "crystdistrib",
    "displayname" : "DOPS",
     "dois" : ["10.1063/1.3548889"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "this keyword is used for colvars such as coordination number", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "this keyword is used for colvars such as the coordination number", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "this keyword is used for colvars such as the coordination number", "multiple": 1, "actionlink": "none"},
       "KERNELFILE" : { "type": "compulsory", "description": "the file containing the list of kernel parameters", "multiple": 0, "actionlink": "none"},
       "CUTOFF" : { "type": "compulsory", "description": " to make the calculation faster we calculate a cutoff value on the distances", "multiple": 0, "actionlink": "none", "default": "6.25"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the values of the DOPS order parameters"
         }
       }
    },
    "needs" : ["DISTANCE_MATRIX", "CUSTOM", "ONES", "MATRIX_VECTOR_PRODUCT"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - this keyword is used for colvars such as coordination \n                          number. In that context it specifies that plumed should calculate \n                          one coordination number for each of the atoms specified. Each \n                          of these coordination numbers specifies how many of the other \n                          specified atoms are within a certain cutoff of the central atom. You \n                          can specify the atoms here as another multicolvar action or \n                          using a MultiColvarFilter or ActionVolume action. When you do so \n                          the quantity is calculated for those atoms specified in the \n                          previous multicolvar. This is useful if you would like to calculate \n                          the Steinhardt parameter for those atoms that have a \n                          coordination number more than four for example. For more information on \n                          how to specify lists of atoms see \ref Group \n               SPECIESA - this keyword is used for colvars such as the coordination \n                          number. In that context it species that plumed should calculate one \n                          coordination number for each of the atoms specified in SPECIESA. Each of \n                          these cooordination numbers specifies how many of the atoms \n                          specifies using SPECIESB is within the specified cutoff. As with the \n                          species keyword the input can also be specified using the label of \n                          another multicolvar \n               SPECIESB - this keyword is used for colvars such as the coordination \n                          number. It must appear with SPECIESA. For a full explanation see \n                          the documentation for that keyword \n\nThe following arguments are compulsory: \n\n             KERNELFILE - the file containing the list of kernel parameters. We \n                          expect h, mu and sigma parameters for a 1D Gaussian kernel of the \n                          form h*exp(-(x-mu)^2/2sigma^2) \n                 CUTOFF - ( default=6.25 ) to make the calculation faster we \n                          calculate a cutoff value on the distances. The input to this keyword \n                          determines x in this expreession max(mu + sqrt(2*x)/sigma) \n"
  },
  "DRMSD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DRMSD",
    "description" : "Calculate the distance RMSD with respect to a reference structure.",
    "module" : "colvar",
    "displayname" : "DRMSD",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "compulsory", "description": "a file in pdb format containing the reference structure and the atoms involved in the CV", "multiple": 0, "actionlink": "none"},
       "LOWER_CUTOFF" : { "type": "optional", "description": "only pairs of atoms further than LOWER_CUTOFF are considered in the calculation", "multiple": 0, "actionlink": "none"},
       "UPPER_CUTOFF" : { "type": "optional", "description": "only pairs of atoms closer than UPPER_CUTOFF are considered in the calculation", "multiple": 0, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " what kind of DRMSD would you like to calculate", "multiple": 0, "actionlink": "none", "default": "DRMSD"},
       "SQUARED" : { "type": "flag", "description": " This should be setted if you want MSD instead of RMSD ", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "NUMERICAL_DERIVATIVES" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the DRMSD distance between the instantaneous structure and the reference structure"
         }
       }
    },
    "needs" : ["SUM", "DISTANCE", "CONSTANT", "EUCLIDEAN_DISTANCE", "CUSTOM"],
    "help" : "\nThe following arguments are compulsory: \n\n              REFERENCE - a file in pdb format containing the reference structure and \n                          the atoms involved in the CV. \n                   TYPE - ( default=DRMSD ) what kind of DRMSD would you like to \n                          calculate. You can use either the normal DRMSD involving all the \n                          distances between the atoms in your molecule. Alternatively, if you \n                          have multiple molecules you can use the type INTER-DRMSD to \n                          compute DRMSD values involving only those distances between the \n                          atoms at least two molecules or the type INTRA-DRMSD to compute \n                          DRMSD values involving only those distances between atoms in the \n                          same molecule \n\nIn addition you may use the following options: \n\n                SQUARED - ( default=off ) This should be setted if you want MSD \n                          instead of RMSD \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n           LOWER_CUTOFF - only pairs of atoms further than LOWER_CUTOFF are \n                          considered in the calculation. \n           UPPER_CUTOFF - only pairs of atoms closer than UPPER_CUTOFF are considered \n                          in the calculation. \n\n"
  },
  "DRR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DRR",
    "description" : "Used to performed extended-system adaptive biasing force (eABF)",
    "module" : "drr",
    "displayname" : "DRR",
     "dois" : ["10.1063/1.2711185", "10.1021/ct200726v", "10.1021/acs.jcim.8b00115", "10.1021/acs.jpcb.6b10055", "10.1021/acs.jctc.6b00447", "10.1021/acs.jctc.7b00032"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "KAPPA" : { "type": "optional", "description": "specifies that the restraint is harmonic and what the values of the force constants on each of the variables are (default to k_BT/(GRID_SPACING)^2)", "multiple": 0, "actionlink": "none"},
       "TAU" : { "type": "compulsory", "description": " specifies relaxation time on each of variables are, similar to extended Time Constant in Colvars", "multiple": 0, "actionlink": "none", "default": "0.5"},
       "FRICTION" : { "type": "compulsory", "description": " add a friction to the variable, similar to extended Langevin Damping in Colvars", "multiple": 0, "actionlink": "none", "default": "8.0"},
       "GRID_MIN" : { "type": "compulsory", "description": "the lower bounds for the grid (GRID_BIN or GRID_SPACING should be specified)", "multiple": 0, "actionlink": "none"},
       "GRID_MAX" : { "type": "compulsory", "description": "the upper bounds for the grid (GRID_BIN or GRID_SPACING should be specified)", "multiple": 0, "actionlink": "none"},
       "REFLECTINGWALL" : { "type": "compulsory", "description": " whether add reflecting walls for each CV at GRID_MIN and GRID_MAX", "multiple": 0, "actionlink": "none", "default": "0"},
       "GRID_BIN" : { "type": "optional", "description": "the number of bins for the grid", "multiple": 0, "actionlink": "none"},
       "GRID_SPACING" : { "type": "optional", "description": "the approximate grid spacing (to be used as an alternative or together with GRID_BIN)", "multiple": 0, "actionlink": "none"},
       "ZGRID_MIN" : { "type": "optional", "description": "the lower bounds for the grid (ZGRID_BIN or ZGRID_SPACING should be specified)", "multiple": 0, "actionlink": "none"},
       "ZGRID_MAX" : { "type": "optional", "description": "the upper bounds for the grid (ZGRID_BIN or ZGRID_SPACING should be specified)", "multiple": 0, "actionlink": "none"},
       "ZGRID_BIN" : { "type": "optional", "description": "the number of bins for the grid", "multiple": 0, "actionlink": "none"},
       "ZGRID_SPACING" : { "type": "optional", "description": "the approximate grid spacing (to be used as an alternative or together with ZGRID_BIN)", "multiple": 0, "actionlink": "none"},
       "EXTERNAL_FORCE" : { "type": "optional", "description": "use forces from other action instead of internal spring force, this disable the extended system!", "multiple": 0, "actionlink": "none"},
       "EXTERNAL_FICT" : { "type": "optional", "description": "position of external fictitious particles, useful for UIESTIMATOR", "multiple": 0, "actionlink": "none"},
       "FULLSAMPLES" : { "type": "compulsory", "description": " number of samples in a bin prior to application of the ABF", "multiple": 0, "actionlink": "none", "default": "500"},
       "MAXFACTOR" : { "type": "compulsory", "description": " maximum scaling factor of biasing force", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "OUTPUTFREQ" : { "type": "compulsory", "description": "write results to a file every N steps", "multiple": 0, "actionlink": "none"},
       "HISTORYFREQ" : { "type": "optional", "description": "save history to a file every N steps", "multiple": 0, "actionlink": "none"},
       "NOCZAR" : { "type": "flag", "description": " disable the CZAR estimator", "multiple": 0, "actionlink": "none", "default": "off"},
       "UI" : { "type": "flag", "description": " enable the umbrella integration estimator", "multiple": 0, "actionlink": "none", "default": "off"},
       "UIRESTARTPREFIX" : { "type": "optional", "description": "specify the restart files for umbrella integration", "multiple": 0, "actionlink": "none"},
       "OUTPUTPREFIX" : { "type": "optional", "description": "specify the output prefix (default to the label name)", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "the system temperature - needed when FRICTION is present", "multiple": 0, "actionlink": "none"},
       "EXTTEMP" : { "type": "optional", "description": "the temperature of extended variables (default to system temperature)", "multiple": 0, "actionlink": "none"},
       "DRR_RFILE" : { "type": "optional", "description": "specifies the restart file (", "multiple": 0, "actionlink": "none"},
       "NOBIAS" : { "type": "flag", "description": " DO NOT apply bias forces", "multiple": 0, "actionlink": "none", "default": "off"},
       "TEXTOUTPUT" : { "type": "flag", "description": " use text output for grad and count files instead of boost::serialization binary output", "multiple": 0, "actionlink": "none", "default": "off"},
       "MERGEHISTORYFILES" : { "type": "flag", "description": " output all historic results to a single file rather than multiple ", "multiple": 0, "actionlink": "none", "default": "off"},
       "FMT" : { "type": "optional", "description": "specify format for outfiles files (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "_fict" : {
           "flag": "default",
           "type": "scalar",
           "description": "one or multiple instances of this quantity can be referenced elsewhere in the input file"
         },
         "_vfict" : {
           "flag": "default",
           "type": "scalar",
           "description": "one or multiple instances of this quantity can be referenced elsewhere in the input file"
         },
         "_biasforce" : {
           "flag": "default",
           "type": "scalar",
           "description": "The bias force from eABF/DRR of the fictitious particle"
         },
         "_springforce" : {
           "flag": "default",
           "type": "scalar",
           "description": "Spring force between real CVs and extended CVs"
         },
         "_fictNoPBC" : {
           "flag": "default",
           "type": "scalar",
           "description": "the positions of fictitious particles (without PBC)"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n                    TAU - ( default=0.5 ) specifies relaxation time on each of \n                          variables are, similar to extended Time Constant in Colvars \n               FRICTION - ( default=8.0 ) add a friction to the variable, similar to \n                          extended Langevin Damping in Colvars \n               GRID_MIN - the lower bounds for the grid (GRID_BIN or GRID_SPACING \n                          should be specified) \n               GRID_MAX - the upper bounds for the grid (GRID_BIN or GRID_SPACING \n                          should be specified) \n         REFLECTINGWALL - ( default=0 ) whether add reflecting walls for each CV at \n                          GRID_MIN and GRID_MAX. Setting non-zero values will enable this \n                          feature \n            FULLSAMPLES - ( default=500 ) number of samples in a bin prior to \n                          application of the ABF \n              MAXFACTOR - ( default=1.0 ) maximum scaling factor of biasing force \n             OUTPUTFREQ - write results to a file every N steps \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                 NOCZAR - ( default=off ) disable the CZAR estimator \n                     UI - ( default=off ) enable the umbrella integration estimator \n                 NOBIAS - ( default=off ) DO NOT apply bias forces. \n             TEXTOUTPUT - ( default=off ) use text output for grad and count files \n                          instead of boost::serialization binary output \n      MERGEHISTORYFILES - ( default=off ) output all historic results to a single \n                          file rather than multiple .drrstate files. This option is \n                          effective only when textOutput is on. \n                  KAPPA - specifies that the restraint is harmonic and what the \n                          values of the force constants on each of the variables are \n                          (default to k_BT/(GRID_SPACING)^2) \n               GRID_BIN - the number of bins for the grid \n           GRID_SPACING - the approximate grid spacing (to be used as an alternative \n                          or together with GRID_BIN) \n              ZGRID_MIN - the lower bounds for the grid (ZGRID_BIN or ZGRID_SPACING \n                          should be specified) \n              ZGRID_MAX - the upper bounds for the grid (ZGRID_BIN or ZGRID_SPACING \n                          should be specified) \n              ZGRID_BIN - the number of bins for the grid \n          ZGRID_SPACING - the approximate grid spacing (to be used as an alternative \n                          or together with ZGRID_BIN) \n         EXTERNAL_FORCE - use forces from other action instead of internal spring \n                          force, this disable the extended system! \n          EXTERNAL_FICT - position of external fictitious particles, useful for \n                          UIESTIMATOR \n            HISTORYFREQ - save history to a file every N steps \n        UIRESTARTPREFIX - specify the restart files for umbrella integration \n           OUTPUTPREFIX - specify the output prefix (default to the label name) \n                   TEMP - the system temperature - needed when FRICTION is present. \n                          If not provided will be taken from MD code (if available) \n                EXTTEMP - the temperature of extended variables (default to system \n                          temperature) \n              DRR_RFILE - specifies the restart file (.drrstate file) \n                    FMT - specify format for outfiles files (useful for decrease the \n                          number of digits in regtests) \n\n"
  },
  "DUMPATOMS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DUMPATOMS",
    "description" : "Dump selected atoms on a file.",
    "module" : "generic",
    "displayname" : "DUMPATOMS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the labels of vectors that should be output in the xyz file", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the atoms should be output", "multiple": 0, "actionlink": "none", "default": "1"},
       "ATOMS" : { "type": "atoms", "description": "the atom indices whose positions you would like to print out", "multiple": 1, "actionlink": "none"},
       "FILE" : { "type": "compulsory", "description": "file on which to output coordinates; extension is automatically detected", "multiple": 0, "actionlink": "none"},
       "UNITS" : { "type": "compulsory", "description": " the units in which to print out the coordinates", "multiple": 0, "actionlink": "none", "default": "PLUMED"},
       "PRECISION" : { "type": "optional", "description": "The number of digits in trajectory file", "multiple": 0, "actionlink": "none"},
       "TYPE" : { "type": "optional", "description": "file type, either xyz, gro, xtc, or trr, can override an automatically detected file extension", "multiple": 0, "actionlink": "none"},
       "LESS_THAN_OR_EQUAL" : { "type": "optional", "description": "when printing with arguments that are vectors only print components of vectors have a value less than or equal to this value", "multiple": 0, "actionlink": "none"},
       "GREATER_THAN_OR_EQUAL" : { "type": "optional", "description": "when printing with arguments that are vectors only print components of vectors have a value greater than or equal to this value", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"}
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the atom indices whose positions you would like to print \n                          out. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following arguments are compulsory: \n\n                 STRIDE - ( default=1 ) the frequency with which the atoms should be \n                          output \n                   FILE - file on which to output coordinates; extension is \n                          automatically detected \n                  UNITS - ( default=PLUMED ) the units in which to print out the \n                          coordinates. PLUMED means internal PLUMED units \n                    ARG - the labels of vectors that should be output in the xyz \n                          file. The number of elements in the vector should equal the \n                          number of atoms output \n              PRECISION - The number of digits in trajectory file \n                   TYPE - file type, either xyz, gro, xtc, or trr, can override an \n                          automatically detected file extension \n     LESS_THAN_OR_EQUAL - when printing with arguments that are vectors only print \n                          components of vectors have a value less than or equal to this value \n  GREATER_THAN_OR_EQUAL - when printing with arguments that are vectors only print \n                          components of vectors have a value greater than or equal to this value \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \n\n"
  },
  "DUMPCONTOUR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DUMPCONTOUR",
    "description" : "Print the contour",
    "module" : "contour",
    "displayname" : "DUMPCONTOUR",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the FIND_CONTOUR action that you would like to output", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the grid should be output to the file", "multiple": 0, "actionlink": "none", "default": "1"},
       "FILE" : { "type": "compulsory", "description": " the file on which to write the grid", "multiple": 0, "actionlink": "none", "default": "density"},
       "FMT" : { "type": "compulsory", "description": " the format that should be used to output real numbers", "multiple": 0, "actionlink": "none", "default": "%f"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the FIND_CONTOUR action that you would like \n                          to output \n                 STRIDE - ( default=1 ) the frequency with which the grid should be \n                          output to the file. \n                   FILE - ( default=density ) the file on which to write the grid. \n                    FMT - ( default=%f ) the format that should be used to output \n                          real numbers \n"
  },
  "DUMPCUBE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DUMPCUBE",
    "description" : "Output a three dimensional grid using the Gaussian cube file format.",
    "module" : "gridtools",
    "displayname" : "DUMPCUBE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the label for the grid that you would like to output", "multiple": 0, "actionlink": "none", "argtype": "grid"},
       "GRID" : { "type": "optional", "description": "the grid you would like to print (can also use ARG for specifying what is being printed)", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the grid should be output to the file", "multiple": 0, "actionlink": "none", "default": "0"},
       "FILE" : { "type": "compulsory", "description": " the file on which to write the grid", "multiple": 0, "actionlink": "none", "default": "density"},
       "FMT" : { "type": "optional", "description": "the format that should be used to output real numbers", "multiple": 0, "actionlink": "none"},
       "PRINT_XYZ" : { "type": "flag", "description": " output coordinates on fibonacci grid to xyz file", "multiple": 0, "actionlink": "none", "default": "off"},
       "PRINT_ONE_FILE" : { "type": "flag", "description": " output grids one after the other in a single file", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label for the grid that you would like to output \n                 STRIDE - ( default=0 ) the frequency with which the grid should be \n                          output to the file. Default of zero means dump at end of \n                          calculation \n                   FILE - ( default=density ) the file on which to write the grid. \n\nIn addition you may use the following options: \n\n              PRINT_XYZ - ( default=off ) output coordinates on fibonacci grid to xyz \n                          file \n         PRINT_ONE_FILE - ( default=off ) output grids one after the other in a \n                          single file \n                   GRID - the grid you would like to print (can also use ARG for \n                          specifying what is being printed) \n                    FMT - the format that should be used to output real numbers \n\n"
  },
  "DUMPDERIVATIVES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DUMPDERIVATIVES",
    "description" : "Dump the derivatives with respect to the input parameters for scalar values (generally CVs, functions or biases).",
    "module" : "generic",
    "displayname" : "DUMPDERIVATIVES",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values whose derivatives should be output", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the derivatives should be output", "multiple": 0, "actionlink": "none", "default": "1"},
       "FILE" : { "type": "compulsory", "description": "the name of the file on which to output the derivatives", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "compulsory", "description": " the format with which the derivatives should be output", "multiple": 0, "actionlink": "none", "default": "%15.10f"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values whose derivatives should be output \n                 STRIDE - ( default=1 ) the frequency with which the derivatives \n                          should be output \n                   FILE - the name of the file on which to output the derivatives \n                    FMT - ( default=%15.10f ) the format with which the derivatives \n                          should be output \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \n\n"
  },
  "DUMPFORCES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DUMPFORCES",
    "description" : "Dump the force acting on one of a values in a file.",
    "module" : "generic",
    "displayname" : "DUMPFORCES",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values whose forces should be output", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix/grid"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the forces should be output", "multiple": 0, "actionlink": "none", "default": "1"},
       "FILE" : { "type": "compulsory", "description": "the name of the file on which to output the forces", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "compulsory", "description": " the format with which the derivatives should be output", "multiple": 0, "actionlink": "none", "default": "%15.10f"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values whose forces should be output \n                 STRIDE - ( default=1 ) the frequency with which the forces should be \n                          output \n                   FILE - the name of the file on which to output the forces \n                    FMT - ( default=%15.10f ) the format with which the derivatives \n                          should be output \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \n\n"
  },
  "DUMPGRID": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DUMPGRID",
    "description" : "Output the function on the grid to a file with the PLUMED grid format.",
    "module" : "gridtools",
    "displayname" : "DUMPGRID",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the label for the grid that you would like to output", "multiple": 0, "actionlink": "none", "argtype": "grid"},
       "GRID" : { "type": "optional", "description": "the grid you would like to print (can also use ARG for specifying what is being printed)", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the grid should be output to the file", "multiple": 0, "actionlink": "none", "default": "0"},
       "FILE" : { "type": "compulsory", "description": " the file on which to write the grid", "multiple": 0, "actionlink": "none", "default": "density"},
       "FMT" : { "type": "optional", "description": "the format that should be used to output real numbers", "multiple": 0, "actionlink": "none"},
       "PRINT_XYZ" : { "type": "flag", "description": " output coordinates on fibonacci grid to xyz file", "multiple": 0, "actionlink": "none", "default": "off"},
       "PRINT_ONE_FILE" : { "type": "flag", "description": " output grids one after the other in a single file", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label for the grid that you would like to output \n                 STRIDE - ( default=0 ) the frequency with which the grid should be \n                          output to the file. Default of zero means dump at end of \n                          calculation \n                   FILE - ( default=density ) the file on which to write the grid. \n\nIn addition you may use the following options: \n\n              PRINT_XYZ - ( default=off ) output coordinates on fibonacci grid to xyz \n                          file \n         PRINT_ONE_FILE - ( default=off ) output grids one after the other in a \n                          single file \n                   GRID - the grid you would like to print (can also use ARG for \n                          specifying what is being printed) \n                    FMT - the format that should be used to output real numbers \n\n"
  },
  "DUMPMASSCHARGE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DUMPMASSCHARGE",
    "description" : "Dump masses and charges on a selected file.",
    "module" : "generic",
    "displayname" : "DUMPMASSCHARGE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the atoms should be output", "multiple": 0, "actionlink": "none", "default": "1"},
       "ATOMS" : { "type": "atoms", "description": "the atom indices whose charges and masses you would like to print out", "multiple": 1, "actionlink": "none"},
       "FILE" : { "type": "compulsory", "description": "file on which to output charges and masses", "multiple": 0, "actionlink": "none"},
       "ONLY_MASSES" : { "type": "flag", "description": " Only output masses to file", "multiple": 0, "actionlink": "none", "default": "off"},
       "ONLY_CHARGES" : { "type": "flag", "description": " Only output charges to file", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the atom indices whose charges and masses you would like to \n                          print out. For more information on how to specify lists of atoms \n                          see \ref Group \n\nThe following arguments are compulsory: \n\n                 STRIDE - ( default=1 ) the frequency with which the atoms should be \n                          output \n                   FILE - file on which to output charges and masses. \n\nIn addition you may use the following options: \n\n            ONLY_MASSES - ( default=off ) Only output masses to file \n           ONLY_CHARGES - ( default=off ) Only output charges to file \n"
  },
  "DUMPMULTICOLVAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DUMPMULTICOLVAR",
    "description" : "Dump atom positions and a vector of values to a file.",
    "module" : "multicolvar",
    "displayname" : "DUMPMULTICOLVAR",
    "replacement" : "DUMPATOMS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "DATA" : { "type": "compulsory", "description": "the vector you wish to transform", "multiple": 0, "actionlink": "none"},
       "FILE" : { "type": "compulsory", "description": "the file that you would like to output the data to", "multiple": 0, "actionlink": "none"}
    },
    "needs" : ["DUMPATOMS"],
    "help" : "\nThe following arguments are compulsory: \n\n                   DATA - the vector you wish to transform \n                   FILE - the file that you would like to output the data to \n"
  },
  "DUMPPDB": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DUMPPDB",
    "description" : "Output PDB file.",
    "module" : "generic",
    "displayname" : "DUMPPDB",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the values that are being output in the PDB file", "multiple": 0, "actionlink": "none", "argtype": "vector/matrix"},
       "ATOMS" : { "type": "optional", "description": "value containing positions of atoms that should be output", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the atoms should be output", "multiple": 0, "actionlink": "none", "default": "0"},
       "FILE" : { "type": "compulsory", "description": "the name of the file on which to output these quantities", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "compulsory", "description": " the format that should be used to output real numbers", "multiple": 0, "actionlink": "none", "default": "%f"},
       "OCCUPANCY" : { "type": "compulsory", "description": " vector of values to output in the occupancy column of the pdb file", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "BETA" : { "type": "compulsory", "description": " vector of values to output in the beta column of the pdb file", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "DESCRIPTION" : { "type": "optional", "description": "the title to use for your PDB output", "multiple": 0, "actionlink": "none"},
       "ATOM_INDICES" : { "type": "optional", "description": "the indices of the atoms in your PDB output", "multiple": 0, "actionlink": "none"},
       "RESIDUE_INDICES" : { "type": "optional", "description": "the indices of the residues in your PDB output", "multiple": 0, "actionlink": "none"},
       "ARG_NAMES" : { "type": "optional", "description": "the names of the arguments that are being output", "multiple": 0, "actionlink": "none"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                 STRIDE - ( default=0 ) the frequency with which the atoms should be \n                          output \n                   FILE - the name of the file on which to output these quantities \n                    FMT - ( default=%f ) the format that should be used to output \n                          real numbers \n              OCCUPANCY - ( default=1.0 ) vector of values to output in the occupancy \n                          column of the pdb file \n                   BETA - ( default=1.0 ) vector of values to output in the beta \n                          column of the pdb file \n                    ARG - the values that are being output in the PDB file \n                  ATOMS - value containing positions of atoms that should be output \n            DESCRIPTION - the title to use for your PDB output \n           ATOM_INDICES - the indices of the atoms in your PDB output \n        RESIDUE_INDICES - the indices of the residues in your PDB output \n              ARG_NAMES - the names of the arguments that are being output \n\n"
  },
  "DUMPPROJECTIONS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DUMPPROJECTIONS",
    "description" : "Dump the derivatives with respect to the input parameters for one or more objects (generally CVs, functions or biases).",
    "module" : "generic",
    "displayname" : "DUMPPROJECTIONS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values whose gradients should be outpu", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the derivatives should be output", "multiple": 0, "actionlink": "none", "default": "1"},
       "FILE" : { "type": "compulsory", "description": "the name of the file on which to output the derivatives", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "compulsory", "description": " the format with which the derivatives should be output", "multiple": 0, "actionlink": "none", "default": "%15.10f"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values whose gradients should be outpu \n                 STRIDE - ( default=1 ) the frequency with which the derivatives \n                          should be output \n                   FILE - the name of the file on which to output the derivatives \n                    FMT - ( default=%15.10f ) the format with which the derivatives \n                          should be output \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \n\n"
  },
  "DUMPVECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/DUMPVECTOR",
    "description" : "Print a vector to a file",
    "module" : "generic",
    "displayname" : "DUMPVECTOR",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of vectors/matrices that should be output in the file", "multiple": 0, "actionlink": "none", "argtype": "vector/matrix"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the grid should be output to the file", "multiple": 0, "actionlink": "none", "default": "0"},
       "FILE" : { "type": "compulsory", "description": " the file on which to write the vetors", "multiple": 0, "actionlink": "none", "default": "density"},
       "FMT" : { "type": "optional", "description": "the format that should be used to output real numbers", "multiple": 0, "actionlink": "none"},
       "PRINT_ONE_FILE" : { "type": "flag", "description": " output vectors one after the other in a single file", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of vectors/matrices that should be output in the \n                          file \n                 STRIDE - ( default=0 ) the frequency with which the grid should be \n                          output to the file. \n                   FILE - ( default=density ) the file on which to write the vetors \n\nIn addition you may use the following options: \n\n         PRINT_ONE_FILE - ( default=off ) output vectors one after the other in a \n                          single file \n                    FMT - the format that should be used to output real numbers \n\n"
  },
  "ECV_CUSTOM": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ECV_CUSTOM",
    "description" : "Use some given CVs as a set of expansion collective variables (ECVs).",
    "module" : "opes",
    "displayname" : "ECV_CUSTOM",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "compulsory", "description": " temperature", "multiple": 0, "actionlink": "none", "default": "-1"},
       "ARG" : { "type": "compulsory", "description": "the labels of the single ECVs", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "ADD_P0" : { "type": "flag", "description": " add the unbiased Boltzmann distribution to the target distribution, to make sure to sample it", "multiple": 0, "actionlink": "none", "default": "off"},
       "DIMENSIONLESS" : { "type": "flag", "description": " consider ARG as dimensionless rather than an energy, thus do not multiply it by beta", "multiple": 0, "actionlink": "none", "default": "off"},
       "BARRIER" : { "type": "optional", "description": "a guess of the free energy barrier to be overcome (better to stay higher than lower)", "multiple": 0, "actionlink": "none"},
       "output" : {
         ".#!custom" : {
           "flag": "default",
           "type": "scalar",
           "description": "the names of the output components for this action depend on the actions input file see the example inputs below for details"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                   TEMP - ( default=-1 ) temperature. If not specified tries to get \n                          it from MD engine \n                    ARG - the labels of the single ECVs. Delta U_i, in energy units \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                 ADD_P0 - ( default=off ) add the unbiased Boltzmann distribution to \n                          the target distribution, to make sure to sample it \n          DIMENSIONLESS - ( default=off ) consider ARG as dimensionless rather than \n                          an energy, thus do not multiply it by beta \n                BARRIER - a guess of the free energy barrier to be overcome (better \n                          to stay higher than lower) \n\n"
  },
  "ECV_LINEAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ECV_LINEAR",
    "description" : "Linear expansion, according to a parameter lambda.",
    "module" : "opes",
    "displayname" : "ECV_LINEAR",
     "dois" : ["10.1103/PhysRevX.10.041034"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "compulsory", "description": " temperature", "multiple": 0, "actionlink": "none", "default": "-1"},
       "ARG" : { "type": "compulsory", "description": "the label of the Hamiltonian difference", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "LAMBDA" : { "type": "compulsory", "description": " the lambda at which the underlying simulation runs", "multiple": 0, "actionlink": "none", "default": "0"},
       "LAMBDA_MIN" : { "type": "optional", "description": " the minimum of the lambda range", "multiple": 0, "actionlink": "none", "default": "0"},
       "LAMBDA_MAX" : { "type": "optional", "description": " the maximum of the lambda range", "multiple": 0, "actionlink": "none", "default": "1"},
       "LAMBDA_STEPS" : { "type": "optional", "description": "uniformly place the lambda values, for a total of LAMBDA_STEPS", "multiple": 0, "actionlink": "none"},
       "LAMBDA_SET_ALL" : { "type": "optional", "description": "manually set all the lamdbas", "multiple": 0, "actionlink": "none"},
       "DIMENSIONLESS" : { "type": "flag", "description": " ARG is considered dimensionless rather than an energy, thus is not multiplied by beta", "multiple": 0, "actionlink": "none", "default": "off"},
       "GEOM_SPACING" : { "type": "flag", "description": " use geometrical spacing in lambda instead of linear spacing", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         ".#!custom" : {
           "flag": "default",
           "type": "scalar",
           "description": "the names of the output components for this action depend on the actions input file see the example inputs below for details"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                   TEMP - ( default=-1 ) temperature. If not specified tries to get \n                          it from MD engine \n                    ARG - the label of the Hamiltonian difference. Delta U \n                 LAMBDA - ( default=0 ) the lambda at which the underlying simulation \n                          runs \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n          DIMENSIONLESS - ( default=off ) ARG is considered dimensionless rather than \n                          an energy, thus is not multiplied by beta \n           GEOM_SPACING - ( default=off ) use geometrical spacing in lambda instead \n                          of linear spacing \n             LAMBDA_MIN - ( default=0 ) the minimum of the lambda range \n             LAMBDA_MAX - ( default=1 ) the maximum of the lambda range \n           LAMBDA_STEPS - uniformly place the lambda values, for a total of \n                          LAMBDA_STEPS \n         LAMBDA_SET_ALL - manually set all the lamdbas \n\n"
  },
  "ECV_MULTITHERMAL": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ECV_MULTITHERMAL",
    "description" : "Expand a simulation to sample multiple temperatures simultaneously.",
    "module" : "opes",
    "displayname" : "ECV_MULTITHERMAL",
     "dois" : ["10.1103/PhysRevX.10.041034"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "compulsory", "description": " temperature", "multiple": 0, "actionlink": "none", "default": "-1"},
       "ARG" : { "type": "compulsory", "description": "the label of the internal energy of the system", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "TEMP_MIN" : { "type": "optional", "description": "the minimum of the temperature range", "multiple": 0, "actionlink": "none"},
       "TEMP_MAX" : { "type": "optional", "description": "the maximum of the temperature range", "multiple": 0, "actionlink": "none"},
       "TEMP_STEPS" : { "type": "optional", "description": "the number of steps in temperature", "multiple": 0, "actionlink": "none"},
       "TEMP_SET_ALL" : { "type": "optional", "description": "manually set all the temperatures", "multiple": 0, "actionlink": "none"},
       "NO_GEOM_SPACING" : { "type": "flag", "description": " do not use geometrical spacing in temperature, but instead linear spacing in inverse temperature", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         ".#!custom" : {
           "flag": "default",
           "type": "scalar",
           "description": "the names of the output components for this action depend on the actions input file see the example inputs below for details"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                   TEMP - ( default=-1 ) temperature. If not specified tries to get \n                          it from MD engine \n                    ARG - the label of the internal energy of the system. If volume \n                          is fixed it is calculated by the ENERGY colvar \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n        NO_GEOM_SPACING - ( default=off ) do not use geometrical spacing in \n                          temperature, but instead linear spacing in inverse temperature \n               TEMP_MIN - the minimum of the temperature range \n               TEMP_MAX - the maximum of the temperature range \n             TEMP_STEPS - the number of steps in temperature \n           TEMP_SET_ALL - manually set all the temperatures \n\n"
  },
  "ECV_MULTITHERMAL_MULTIBARIC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ECV_MULTITHERMAL_MULTIBARIC",
    "description" : "Expand a simulation to sample multiple temperatures and pressures.",
    "module" : "opes",
    "displayname" : "ECV_MULTITHERMAL_MULTIBARIC",
     "dois" : ["10.1103/PhysRevX.10.041034"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "compulsory", "description": " temperature", "multiple": 0, "actionlink": "none", "default": "-1"},
       "ARG" : { "type": "compulsory", "description": "the labels of the potential energy and of the volume of the system", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "TEMP_MIN" : { "type": "optional", "description": "the minimum of the temperature range", "multiple": 0, "actionlink": "none"},
       "TEMP_MAX" : { "type": "optional", "description": "the maximum of the temperature range", "multiple": 0, "actionlink": "none"},
       "TEMP_STEPS" : { "type": "optional", "description": "the number of steps in temperature", "multiple": 0, "actionlink": "none"},
       "TEMP_SET_ALL" : { "type": "optional", "description": "manually set all the temperatures", "multiple": 0, "actionlink": "none"},
       "NO_GEOM_SPACING" : { "type": "flag", "description": " do not use geometrical spacing in temperature, but instead linear spacing in inverse temperature", "multiple": 0, "actionlink": "none", "default": "off"},
       "PRESSURE" : { "type": "compulsory", "description": "pressure", "multiple": 0, "actionlink": "none"},
       "PRESSURE_MIN" : { "type": "optional", "description": "the minimum of the pressure range", "multiple": 0, "actionlink": "none"},
       "PRESSURE_MAX" : { "type": "optional", "description": "the maximum of the pressure range", "multiple": 0, "actionlink": "none"},
       "PRESSURE_STEPS" : { "type": "optional", "description": "the number of steps in pressure", "multiple": 0, "actionlink": "none"},
       "PRESSURE_SET_ALL" : { "type": "optional", "description": "manually set all the pressures", "multiple": 0, "actionlink": "none"},
       "SET_ALL_TEMP_PRESSURE" : { "type": "optional", "description": "manually set all the target temperature_pressure pairs", "multiple": 0, "actionlink": "none"},
       "CUT_CORNER" : { "type": "optional", "description": "avoid region of high temperature and low pressure", "multiple": 0, "actionlink": "none"},
       "output" : {
         ".#!custom" : {
           "flag": "default",
           "type": "scalar",
           "description": "the names of the output components for this action depend on the actions input file see the example inputs below for details"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                   TEMP - ( default=-1 ) temperature. If not specified tries to get \n                          it from MD engine \n                    ARG - the labels of the potential energy and of the volume of the \n                          system. You can calculate them with ENERGY and VOLUME respectively \n               PRESSURE - pressure. Use the proper units \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n        NO_GEOM_SPACING - ( default=off ) do not use geometrical spacing in \n                          temperature, but instead linear spacing in inverse temperature \n               TEMP_MIN - the minimum of the temperature range \n               TEMP_MAX - the maximum of the temperature range \n             TEMP_STEPS - the number of steps in temperature \n           TEMP_SET_ALL - manually set all the temperatures \n           PRESSURE_MIN - the minimum of the pressure range \n           PRESSURE_MAX - the maximum of the pressure range \n         PRESSURE_STEPS - the number of steps in pressure \n       PRESSURE_SET_ALL - manually set all the pressures \n  SET_ALL_TEMP_PRESSURE - manually set all the target temperature_pressure pairs. An \n                          underscore separates temperature and pressure, while different points \n                          are comma-separated, e.g.: temp1_pres1,temp1_pres2,... \n             CUT_CORNER - avoid region of high temperature and low pressure. \n\n"
  },
  "ECV_UMBRELLAS_FILE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ECV_UMBRELLAS_FILE",
    "description" : "Target a multiumbrella ensemble, by combining systems each with a parabolic bias potential at a different location.",
    "module" : "opes",
    "displayname" : "ECV_UMBRELLAS_FILE",
     "dois" : ["10.1103/PhysRevX.10.041034"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "compulsory", "description": " temperature", "multiple": 0, "actionlink": "none", "default": "-1"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar values that are input to this action", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "FILE" : { "type": "compulsory", "description": "the name of the file containing the umbrellas", "multiple": 0, "actionlink": "none"},
       "BARRIER" : { "type": "optional", "description": "a guess of the free energy barrier to be overcome (better to stay higher than lower)", "multiple": 0, "actionlink": "none"},
       "ADD_P0" : { "type": "flag", "description": " add the unbiased Boltzmann distribution to the target distribution, to make sure to sample it", "multiple": 0, "actionlink": "none", "default": "off"},
       "LOWER_HALF_ONLY" : { "type": "flag", "description": " use only the lower half of each umbrella potentials", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         ".#!custom" : {
           "flag": "default",
           "type": "scalar",
           "description": "the names of the output components for this action depend on the actions input file see the example inputs below for details"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                   TEMP - ( default=-1 ) temperature. If not specified tries to get \n                          it from MD engine \n                    ARG - the labels of the scalar values that are input to this \n                          action \n                   FILE - the name of the file containing the umbrellas \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                 ADD_P0 - ( default=off ) add the unbiased Boltzmann distribution to \n                          the target distribution, to make sure to sample it \n        LOWER_HALF_ONLY - ( default=off ) use only the lower half of each umbrella \n                          potentials \n                BARRIER - a guess of the free energy barrier to be overcome (better \n                          to stay higher than lower) \n\n"
  },
  "ECV_UMBRELLAS_LINE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ECV_UMBRELLAS_LINE",
    "description" : "Target a multiumbrella ensemble, by combining systems each with a parabolic bias potential at a different location.",
    "module" : "opes",
    "displayname" : "ECV_UMBRELLAS_LINE",
     "dois" : ["10.1103/PhysRevX.10.041034"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "compulsory", "description": " temperature", "multiple": 0, "actionlink": "none", "default": "-1"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar values that are input to this action", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "CV_MIN" : { "type": "compulsory", "description": "the minimum of the CV range to be explored", "multiple": 0, "actionlink": "none"},
       "CV_MAX" : { "type": "compulsory", "description": "the maximum of the CV range to be explored", "multiple": 0, "actionlink": "none"},
       "SIGMA" : { "type": "compulsory", "description": "sigma of the umbrella Gaussians", "multiple": 0, "actionlink": "none"},
       "SPACING" : { "type": "compulsory", "description": " the distance between umbrellas, in units of SIGMA", "multiple": 0, "actionlink": "none", "default": "1"},
       "BARRIER" : { "type": "optional", "description": "a guess of the free energy barrier to be overcome (better to stay higher than lower)", "multiple": 0, "actionlink": "none"},
       "ADD_P0" : { "type": "flag", "description": " add the unbiased Boltzmann distribution to the target distribution, to make sure to sample it", "multiple": 0, "actionlink": "none", "default": "off"},
       "LOWER_HALF_ONLY" : { "type": "flag", "description": " use only the lower half of each umbrella potentials", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         ".#!custom" : {
           "flag": "default",
           "type": "scalar",
           "description": "the names of the output components for this action depend on the actions input file see the example inputs below for details"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                   TEMP - ( default=-1 ) temperature. If not specified tries to get \n                          it from MD engine \n                    ARG - the labels of the scalar values that are input to this \n                          action \n                 CV_MIN - the minimum of the CV range to be explored \n                 CV_MAX - the maximum of the CV range to be explored \n                  SIGMA - sigma of the umbrella Gaussians \n                SPACING - ( default=1 ) the distance between umbrellas, in units of \n                          SIGMA \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                 ADD_P0 - ( default=off ) add the unbiased Boltzmann distribution to \n                          the target distribution, to make sure to sample it \n        LOWER_HALF_ONLY - ( default=off ) use only the lower half of each umbrella \n                          potentials \n                BARRIER - a guess of the free energy barrier to be overcome (better \n                          to stay higher than lower) \n\n"
  },
  "EDS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/EDS",
    "description" : "Add a linear bias on a set of observables.",
    "module" : "eds",
    "displayname" : "EDS",
     "dois" : ["10.1021/ct500320c", "10.1021/acs.jctc.7b00690", "10.1080/08927022.2019.1608988"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "CENTER" : { "type": "optional", "description": "The desired centers (equilibrium values) which will be sought during the adaptive linear biasing", "multiple": 0, "actionlink": "none"},
       "CENTER_ARG" : { "type": "optional", "description": "The desired centers (equilibrium values) which will be sought during the adaptive linear biasing", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "PERIOD" : { "type": "optional", "description": "Steps over which to adjust bias for adaptive or ramping", "multiple": 0, "actionlink": "none"},
       "RANGE" : { "type": "compulsory", "description": " The (starting) maximum increase in coupling constant per PERIOD (in k_B T/[BIAS_SCALE unit]) for each CV biased", "multiple": 0, "actionlink": "none", "default": "25.0"},
       "SEED" : { "type": "compulsory", "description": " Seed for random order of changing bias", "multiple": 0, "actionlink": "none", "default": "0"},
       "INIT" : { "type": "compulsory", "description": " Starting value for coupling constant", "multiple": 0, "actionlink": "none", "default": "0"},
       "FIXED" : { "type": "compulsory", "description": " Fixed target values for coupling constant", "multiple": 0, "actionlink": "none", "default": "0"},
       "BIAS_SCALE" : { "type": "optional", "description": "A divisor to set the units of the bias", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "The system temperature", "multiple": 0, "actionlink": "none"},
       "MULTI_PROP" : { "type": "optional", "description": "What proportion of dimensions to update at each step", "multiple": 0, "actionlink": "none"},
       "VIRIAL" : { "type": "optional", "description": "Add an update penalty for having non-zero virial contributions", "multiple": 0, "actionlink": "none"},
       "LOGWEIGHTS" : { "type": "optional", "description": "Add weights to use for computing statistics", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "LM" : { "type": "flag", "description": " Use Levenberg-Marquadt algorithm along with simultaneous keyword", "multiple": 0, "actionlink": "none", "default": "off"},
       "LM_MIXING" : { "type": "compulsory", "description": " Initial mixing parameter when using Levenberg-Marquadt minimization", "multiple": 0, "actionlink": "none", "default": "1"},
       "RESTART_FMT" : { "type": "optional", "description": "the format that should be used to output real numbers in EDS restarts", "multiple": 0, "actionlink": "none"},
       "OUT_RESTART" : { "type": "optional", "description": "Output file for all information needed to continue EDS simulation", "multiple": 0, "actionlink": "none"},
       "IN_RESTART" : { "type": "optional", "description": "Read this file to continue an EDS simulation", "multiple": 0, "actionlink": "none"},
       "RAMP" : { "type": "flag", "description": " Slowly increase bias constant to a fixed value", "multiple": 0, "actionlink": "none", "default": "off"},
       "COVAR" : { "type": "flag", "description": " Utilize the covariance matrix when updating the bias", "multiple": 0, "actionlink": "none", "default": "off"},
       "FREEZE" : { "type": "flag", "description": " Fix bias at current level (only used for restarting)", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " Instead of using final bias level from restart, use average", "multiple": 0, "actionlink": "none", "default": "off"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "force2" : {
           "flag": "default",
           "type": "scalar",
           "description": "squared value of force from the bias"
         },
         "pressure" : {
           "flag": "default",
           "type": "scalar",
           "description": "If using virial keyword, this is the current sum of virial terms"
         },
         "_coupling" : {
           "flag": "default",
           "type": "scalar",
           "description": "For each named CV biased, there will be a corresponding output CV_coupling storing the current linear bias prefactor"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n                  RANGE - ( default=25.0 ) The (starting) maximum increase in \n                          coupling constant per PERIOD (in k_B T/[BIAS_SCALE unit]) for each \n                          CV biased \n                   SEED - ( default=0 ) Seed for random order of changing bias \n                   INIT - ( default=0 ) Starting value for coupling constant \n                  FIXED - ( default=0 ) Fixed target values for coupling constant. \n                          Non-adaptive. \n              LM_MIXING - ( default=1 ) Initial mixing parameter when using \n                          Levenberg-Marquadt minimization. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                     LM - ( default=off ) Use Levenberg-Marquadt algorithm along with \n                          simultaneous keyword. Otherwise use gradient descent. \n                   RAMP - ( default=off ) Slowly increase bias constant to a fixed \n                          value \n                  COVAR - ( default=off ) Utilize the covariance matrix when updating \n                          the bias. Default Off, but may be enabled due to other options \n                 FREEZE - ( default=off ) Fix bias at current level (only used for \n                          restarting). \n                   MEAN - ( default=off ) Instead of using final bias level from \n                          restart, use average. Can only be used in conjunction with FREEZE \n                 CENTER - The desired centers (equilibrium values) which will be \n                          sought during the adaptive linear biasing. This is for fixed \n                          centers \n             CENTER_ARG - The desired centers (equilibrium values) which will be \n                          sought during the adaptive linear biasing. CENTER_ARG is for \n                          calculated centers, e.g. from a CV or analysis. \n                 PERIOD - Steps over which to adjust bias for adaptive or ramping \n             BIAS_SCALE - A divisor to set the units of the bias. If not set, this \n                          will be the CENTER value by default (as is done in White and \n                          Voth 2014). \n                   TEMP - The system temperature. If not provided will be taken from \n                          MD code (if available) \n             MULTI_PROP - What proportion of dimensions to update at each step. Must \n                          be in interval [1,0), where 1 indicates all and any other \n                          indicates a stochastic update. If not set, default is 1 / N, where N \n                          is the number of CVs. \n                 VIRIAL - Add an update penalty for having non-zero virial \n                          contributions. Only makes sense with multiple correlated CVs. \n             LOGWEIGHTS - Add weights to use for computing statistics. For example, \n                          if biasing with metadynamics. \n            RESTART_FMT - the format that should be used to output real numbers in \n                          EDS restarts \n            OUT_RESTART - Output file for all information needed to continue EDS \n                          simulation. If you have the RESTART directive set (global or for EDS), \n                          this file will be appended to. Note that the header will be \n                          printed again if appending. \n             IN_RESTART - Read this file to continue an EDS simulation. If same as \n                          OUT_RESTART and you have not set the RESTART directive, the file will \n                          be backed-up and overwritten with new output. If you do have \n                          the RESTART flag set and it is the same name as OUT_RESTART, \n                          this file will be appended. \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n\n"
  },
  "EEFSOLV": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/EEFSOLV",
    "description" : "Calculates EEF1 solvation free energy for a group of atoms.",
    "module" : "colvar",
    "displayname" : "EEFSOLV",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "The atoms to be included in the calculation, e", "multiple": 1, "actionlink": "none"},
       "NL_BUFFER" : { "type": "compulsory", "description": " The buffer to the intrinsic cutoff used when calculating pairwise interactions", "multiple": 0, "actionlink": "none", "default": "0.1"},
       "NL_STRIDE" : { "type": "compulsory", "description": " The frequency with which the neighbor list is updated", "multiple": 0, "actionlink": "none", "default": "40"},
       "SERIAL" : { "type": "flag", "description": " Perform the calculation in serial - for debug purpose", "multiple": 0, "actionlink": "none", "default": "off"},
       "TEMP_CORRECTION" : { "type": "flag", "description": " Correct free energy of solvation constants for temperatures different from 298", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the EEF1 solvation free energy for the input atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - The atoms to be included in the calculation, e.g. the whole \n                          protein.. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following arguments are compulsory: \n\n              NL_BUFFER - ( default=0.1 ) The buffer to the intrinsic cutoff used \n                          when calculating pairwise interactions. \n              NL_STRIDE - ( default=40 ) The frequency with which the neighbor list \n                          is updated. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 SERIAL - ( default=off ) Perform the calculation in serial - for \n                          debug purpose \n        TEMP_CORRECTION - ( default=off ) Correct free energy of solvation constants \n                          for temperatures different from 298.15 K \n"
  },
  "EFFECTIVE_ENERGY_DRIFT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/EFFECTIVE_ENERGY_DRIFT",
    "description" : "Print the effective energy drift",
    "module" : "generic",
    "displayname" : "EFFECTIVE_ENERGY_DRIFT",
     "dois" : ["10.1021/ct5007086"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " should be set to 1", "multiple": 0, "actionlink": "none", "default": "1"},
       "FILE" : { "type": "compulsory", "description": "file on which to output the effective energy drift", "multiple": 0, "actionlink": "none"},
       "PRINT_STRIDE" : { "type": "compulsory", "description": "frequency to which output the effective energy drift on FILE", "multiple": 0, "actionlink": "none"},
       "ENSEMBLE" : { "type": "flag", "description": " Set to TRUE if you want to average over multiple replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "FMT" : { "type": "optional", "description": "the format that should be used to output real numbers", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                 STRIDE - ( default=1 ) should be set to 1. Effective energy drift \n                          computation has to be active at each step. \n                   FILE - file on which to output the effective energy drift. \n           PRINT_STRIDE - frequency to which output the effective energy drift on \n                          FILE \n\nIn addition you may use the following options: \n\n               ENSEMBLE - ( default=off ) Set to TRUE if you want to average over \n                          multiple replicas. \n                    FMT - the format that should be used to output real numbers \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \n\n"
  },
  "EMMI": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/EMMI",
    "description" : "Calculate the fit of a structure or ensemble of structures with a cryo-EM density map.",
    "module" : "isdb",
    "displayname" : "EMMI",
     "dois" : ["10.1101/113951", "10.1126/sciadv.1501177"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "ATOMS" : { "type": "atoms", "description": "atoms for which we calculate the density map, typically all heavy atoms", "multiple": 1, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "GMM_FILE" : { "type": "compulsory", "description": "file with the parameters of the GMM components", "multiple": 0, "actionlink": "none"},
       "NL_CUTOFF" : { "type": "compulsory", "description": "The cutoff in overlap for the neighbor list", "multiple": 0, "actionlink": "none"},
       "NL_STRIDE" : { "type": "compulsory", "description": "The frequency with which we are updating the neighbor list", "multiple": 0, "actionlink": "none"},
       "SIGMA_MIN" : { "type": "compulsory", "description": "minimum uncertainty", "multiple": 0, "actionlink": "none"},
       "RESOLUTION" : { "type": "compulsory", "description": "Cryo-EM map resolution", "multiple": 0, "actionlink": "none"},
       "NOISETYPE" : { "type": "compulsory", "description": "functional form of the noise (GAUSS, OUTLIERS, MARGINAL)", "multiple": 0, "actionlink": "none"},
       "SIGMA0" : { "type": "optional", "description": "initial value of the uncertainty", "multiple": 0, "actionlink": "none"},
       "DSIGMA" : { "type": "optional", "description": "MC step for uncertainties", "multiple": 0, "actionlink": "none"},
       "MC_STRIDE" : { "type": "optional", "description": "Monte Carlo stride", "multiple": 0, "actionlink": "none"},
       "ERR_FILE" : { "type": "optional", "description": "file with experimental or GMM fit errors", "multiple": 0, "actionlink": "none"},
       "OV_FILE" : { "type": "optional", "description": "file with experimental overlaps", "multiple": 0, "actionlink": "none"},
       "NORM_DENSITY" : { "type": "optional", "description": "integral of the experimental density", "multiple": 0, "actionlink": "none"},
       "STATUS_FILE" : { "type": "optional", "description": "write a file with all the data useful for restart", "multiple": 0, "actionlink": "none"},
       "WRITE_STRIDE" : { "type": "optional", "description": "write the status to a file every N steps, this can be used for restart", "multiple": 0, "actionlink": "none"},
       "REGRESSION" : { "type": "optional", "description": "regression stride", "multiple": 0, "actionlink": "none"},
       "REG_SCALE_MIN" : { "type": "optional", "description": "regression minimum scale", "multiple": 0, "actionlink": "none"},
       "REG_SCALE_MAX" : { "type": "optional", "description": "regression maximum scale", "multiple": 0, "actionlink": "none"},
       "REG_DSCALE" : { "type": "optional", "description": "regression maximum scale MC move", "multiple": 0, "actionlink": "none"},
       "SCALE" : { "type": "optional", "description": "scale factor", "multiple": 0, "actionlink": "none"},
       "ANNEAL" : { "type": "optional", "description": "Length of annealing cycle", "multiple": 0, "actionlink": "none"},
       "ANNEAL_FACT" : { "type": "optional", "description": "Annealing temperature factor", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "temperature", "multiple": 0, "actionlink": "none"},
       "PRIOR" : { "type": "optional", "description": "exponent of uncertainty prior", "multiple": 0, "actionlink": "none"},
       "WRITE_OV_STRIDE" : { "type": "optional", "description": "write model overlaps every N steps", "multiple": 0, "actionlink": "none"},
       "WRITE_OV" : { "type": "optional", "description": "write a file with model overlaps", "multiple": 0, "actionlink": "none"},
       "AVERAGING" : { "type": "optional", "description": "Averaging window for weights", "multiple": 0, "actionlink": "none"},
       "NO_AVER" : { "type": "flag", "description": " don't do ensemble averaging in multi-replica mode", "multiple": 0, "actionlink": "none", "default": "off"},
       "REWEIGHT" : { "type": "flag", "description": " simple REWEIGHT using the ARG as energy", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "scoreb" : {
           "flag": "default",
           "type": "scalar",
           "description": "Bayesian score"
         },
         "acc" : {
           "flag": "NOISETYPE",
           "type": "scalar",
           "description": "MC acceptance for uncertainty"
         },
         "scale" : {
           "flag": "REGRESSION",
           "type": "scalar",
           "description": "scale factor"
         },
         "accscale" : {
           "flag": "REGRESSION",
           "type": "scalar",
           "description": "MC acceptance for scale regression"
         },
         "enescale" : {
           "flag": "REGRESSION",
           "type": "scalar",
           "description": "MC energy for scale regression"
         },
         "anneal" : {
           "flag": "ANNEAL",
           "type": "scalar",
           "description": "annealing factor"
         },
         "weight" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "weights of the weighted average"
         },
         "biasDer" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "derivatives with respect to the bias"
         },
         "sigma" : {
           "flag": "NOISETYPE",
           "type": "scalar",
           "description": "uncertainty in the forward models and experiment"
         },
         "neff" : {
           "flag": "default",
           "type": "scalar",
           "description": "effective number of replicas"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - atoms for which we calculate the density map, typically all \n                          heavy atoms. For more information on how to specify lists of \n                          atoms see \ref Group \n\nThe following arguments are compulsory: \n\n               GMM_FILE - file with the parameters of the GMM components \n              NL_CUTOFF - The cutoff in overlap for the neighbor list \n              NL_STRIDE - The frequency with which we are updating the neighbor list \n              SIGMA_MIN - minimum uncertainty \n             RESOLUTION - Cryo-EM map resolution \n              NOISETYPE - functional form of the noise (GAUSS, OUTLIERS, MARGINAL) \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                NO_AVER - ( default=off ) don't do ensemble averaging in \n                          multi-replica mode \n               REWEIGHT - ( default=off ) simple REWEIGHT using the ARG as energy \n                    ARG - the labels of the values from which the function is \n                          calculated \n                 SIGMA0 - initial value of the uncertainty \n                 DSIGMA - MC step for uncertainties \n              MC_STRIDE - Monte Carlo stride \n               ERR_FILE - file with experimental or GMM fit errors \n                OV_FILE - file with experimental overlaps \n           NORM_DENSITY - integral of the experimental density \n            STATUS_FILE - write a file with all the data useful for restart \n           WRITE_STRIDE - write the status to a file every N steps, this can be used \n                          for restart \n             REGRESSION - regression stride \n          REG_SCALE_MIN - regression minimum scale \n          REG_SCALE_MAX - regression maximum scale \n             REG_DSCALE - regression maximum scale MC move \n                  SCALE - scale factor \n                 ANNEAL - Length of annealing cycle \n            ANNEAL_FACT - Annealing temperature factor \n                   TEMP - temperature \n                  PRIOR - exponent of uncertainty prior \n        WRITE_OV_STRIDE - write model overlaps every N steps \n               WRITE_OV - write a file with model overlaps \n              AVERAGING - Averaging window for weights \n\n"
  },
  "EMMIVOX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/EMMIVOX",
    "description" : "Bayesian single-structure and ensemble refinement with cryo-EM maps.",
    "module" : "isdb",
    "displayname" : "EMMIVOX",
     "dois" : ["10.1126/sciadv.1501177"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "atoms used in the calculation of the density map, typically all heavy atoms", "multiple": 1, "actionlink": "none"},
       "DATA_FILE" : { "type": "compulsory", "description": "file with cryo-EM map", "multiple": 0, "actionlink": "none"},
       "RESOLUTION" : { "type": "compulsory", "description": "cryo-EM map resolution", "multiple": 0, "actionlink": "none"},
       "NORM_DENSITY" : { "type": "compulsory", "description": "integral of experimental density", "multiple": 0, "actionlink": "none"},
       "WRITE_STRIDE" : { "type": "compulsory", "description": "stride for writing status file", "multiple": 0, "actionlink": "none"},
       "NL_DIST_CUTOFF" : { "type": "optional", "description": "neighbor list distance cutoff", "multiple": 0, "actionlink": "none"},
       "NL_GAUSS_CUTOFF" : { "type": "optional", "description": "neighbor list Gaussian sigma cutoff", "multiple": 0, "actionlink": "none"},
       "NL_STRIDE" : { "type": "optional", "description": "neighbor list update frequency", "multiple": 0, "actionlink": "none"},
       "SIGMA_MIN" : { "type": "optional", "description": "minimum density error", "multiple": 0, "actionlink": "none"},
       "DBFACT" : { "type": "optional", "description": "Bfactor MC step", "multiple": 0, "actionlink": "none"},
       "BFACT_MAX" : { "type": "optional", "description": "Bfactor maximum value", "multiple": 0, "actionlink": "none"},
       "MCBFACT_STRIDE" : { "type": "optional", "description": "Bfactor MC stride", "multiple": 0, "actionlink": "none"},
       "BFACT_SIGMA" : { "type": "optional", "description": "Bfactor sigma prior", "multiple": 0, "actionlink": "none"},
       "STATUS_FILE" : { "type": "optional", "description": "write a file with all the data useful for restart", "multiple": 0, "actionlink": "none"},
       "SCALE" : { "type": "optional", "description": "scale factor", "multiple": 0, "actionlink": "none"},
       "OFFSET" : { "type": "optional", "description": "offset", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "temperature", "multiple": 0, "actionlink": "none"},
       "WRITE_MAP" : { "type": "optional", "description": "file with model density", "multiple": 0, "actionlink": "none"},
       "WRITE_MAP_STRIDE" : { "type": "optional", "description": "stride for writing model density to file", "multiple": 0, "actionlink": "none"},
       "NO_AVER" : { "type": "flag", "description": " no ensemble averaging in multi-replica mode", "multiple": 0, "actionlink": "none", "default": "off"},
       "CORRELATION" : { "type": "flag", "description": " calculate correlation coefficient", "multiple": 0, "actionlink": "none", "default": "off"},
       "GPU" : { "type": "flag", "description": " calculate EMMIVOX on GPU with Libtorch", "multiple": 0, "actionlink": "none", "default": "off"},
       "BFACT_NOCHAIN" : { "type": "flag", "description": " Do not use chain ID for Bfactor MC", "multiple": 0, "actionlink": "none", "default": "off"},
       "BFACT_READ" : { "type": "flag", "description": " Read Bfactor on RESTART (automatic with DBFACT>0)", "multiple": 0, "actionlink": "none", "default": "off"},
       "BFACT_MINIMIZE" : { "type": "flag", "description": " Accept only moves that decrease energy", "multiple": 0, "actionlink": "none", "default": "off"},
       "MARTINI" : { "type": "flag", "description": " Use Martini scattering factors", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "scoreb" : {
           "flag": "default",
           "type": "scalar",
           "description": "Bayesian score"
         },
         "scale" : {
           "flag": "default",
           "type": "scalar",
           "description": "scale factor"
         },
         "offset" : {
           "flag": "default",
           "type": "scalar",
           "description": "offset"
         },
         "accB" : {
           "flag": "default",
           "type": "scalar",
           "description": "Bfactor MC acceptance"
         },
         "kbt" : {
           "flag": "default",
           "type": "scalar",
           "description": "temperature in energy unit"
         },
         "corr" : {
           "flag": "CORRELATION",
           "type": "scalar",
           "description": "correlation coefficient"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - atoms used in the calculation of the density map, typically \n                          all heavy atoms. For more information on how to specify lists \n                          of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n              DATA_FILE - file with cryo-EM map \n             RESOLUTION - cryo-EM map resolution \n           NORM_DENSITY - integral of experimental density \n           WRITE_STRIDE - stride for writing status file \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                NO_AVER - ( default=off ) no ensemble averaging in multi-replica mode \n            CORRELATION - ( default=off ) calculate correlation coefficient \n                    GPU - ( default=off ) calculate EMMIVOX on GPU with Libtorch \n          BFACT_NOCHAIN - ( default=off ) Do not use chain ID for Bfactor MC \n             BFACT_READ - ( default=off ) Read Bfactor on RESTART (automatic with \n                          DBFACT>0) \n         BFACT_MINIMIZE - ( default=off ) Accept only moves that decrease energy \n                MARTINI - ( default=off ) Use Martini scattering factors \n         NL_DIST_CUTOFF - neighbor list distance cutoff \n        NL_GAUSS_CUTOFF - neighbor list Gaussian sigma cutoff \n              NL_STRIDE - neighbor list update frequency \n              SIGMA_MIN - minimum density error \n                 DBFACT - Bfactor MC step \n              BFACT_MAX - Bfactor maximum value \n         MCBFACT_STRIDE - Bfactor MC stride \n            BFACT_SIGMA - Bfactor sigma prior \n            STATUS_FILE - write a file with all the data useful for restart \n                  SCALE - scale factor \n                 OFFSET - offset \n                   TEMP - temperature \n              WRITE_MAP - file with model density \n       WRITE_MAP_STRIDE - stride for writing model density to file \n\n"
  },
  "ENDPLUMED": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ENDPLUMED",
    "description" : "Terminate plumed input.",
    "module" : "generic",
    "displayname" : "ENDPLUMED",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"}
    },
    "help" : ""
  },
  "ENERGY": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ENERGY",
    "description" : "Calculate the total potential energy of the simulation box.",
    "module" : "colvar",
    "displayname" : "ENERGY",
     "dois" : ["10.1021/jp972280j", "10.1103/PhysRevLett.104.190601"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"}
    },
    "help" : ""
  },
  "ENSEMBLE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ENSEMBLE",
    "description" : "Calculates the replica averaging of a collective variable over multiple replicas.",
    "module" : "function",
    "displayname" : "ENSEMBLE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "REWEIGHT" : { "type": "flag", "description": " simple REWEIGHT using the latest ARG as energy", "multiple": 0, "actionlink": "none", "default": "off"},
       "CENTRAL" : { "type": "flag", "description": " calculate a central moment instead of a standard moment", "multiple": 0, "actionlink": "none", "default": "off"},
       "TEMP" : { "type": "optional", "description": "the system temperature - this is only needed if you are reweighting", "multiple": 0, "actionlink": "none"},
       "MOMENT" : { "type": "optional", "description": "the moment you want to calculate in alternative to the mean or the variance", "multiple": 0, "actionlink": "none"},
       "POWER" : { "type": "optional", "description": "the power of the mean (and moment)", "multiple": 0, "actionlink": "none"},
       "output" : {
         ".#!custom" : {
           "flag": "default",
           "type": "scalar",
           "description": "the names of the output components for this action depend on the actions input file see the example inputs below for details"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n               REWEIGHT - ( default=off ) simple REWEIGHT using the latest ARG as \n                          energy \n                CENTRAL - ( default=off ) calculate a central moment instead of a \n                          standard moment \n                   TEMP - the system temperature - this is only needed if you are \n                          reweighting \n                 MOMENT - the moment you want to calculate in alternative to the mean \n                          or the variance \n                  POWER - the power of the mean (and moment) \n\n"
  },
  "ENVIRONMENTSIMILARITY": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ENVIRONMENTSIMILARITY",
    "description" : "Measure how similar the environment around atoms is to that found in some reference crystal structure.",
    "module" : "envsim",
    "displayname" : "ENVIRONMENTSIMILARITY",
     "dois" : ["10.1063/1.5102104"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "this keyword is used for colvars such as coordination number", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "this keyword is used for colvars such as the coordination number", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "this keyword is used for colvars such as the coordination number", "multiple": 1, "actionlink": "none"},
       "CRYSTAL_STRUCTURE" : { "type": "compulsory", "description": " Targeted crystal structure", "multiple": 0, "actionlink": "none", "default": "FCC"},
       "LATTICE_CONSTANTS" : { "type": "compulsory", "description": "Lattice constants", "multiple": 0, "actionlink": "none"},
       "SIGMA" : { "type": "compulsory", "description": " the width to use for the gaussian kernels", "multiple": 0, "actionlink": "none", "default": "0.1"},
       "LCUTOFF" : { "type": "compulsory", "description": " any atoms separated by less than this tolerance should be ignored", "multiple": 0, "actionlink": "none", "default": "0.0001"},
       "REFERENCE" : { "type": "optional", "description": "PDB files with relative distances from central atom", "multiple": 0, "actionlink": "none"},
       "REFERENCE_" : { "type": "optional", "description": "PDB files with relative distances from central atom", "multiple": 1, "actionlink": "none"},
       "LAMBDA" : { "type": "compulsory", "description": " Lambda parameter", "multiple": 0, "actionlink": "none", "default": "100"},
       "CUTOFF" : { "type": "compulsory", "description": " how many multiples of sigma would you like to consider beyond the maximum distance in the environment", "multiple": 0, "actionlink": "none", "default": "3"},
       "ATOM_NAMES_FILE" : { "type": "optional", "description": "PDB file with atom names for all atoms in SPECIES", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the environmental similar parameter for each of the input atoms"
         },
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "GROUP", "DISTANCE_MATRIX", "ONES", "CONSTANT", "MATRIX_VECTOR_PRODUCT", "COMBINE"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - this keyword is used for colvars such as coordination \n                          number. In that context it specifies that plumed should calculate \n                          one coordination number for each of the atoms specified. Each \n                          of these coordination numbers specifies how many of the other \n                          specified atoms are within a certain cutoff of the central atom. You \n                          can specify the atoms here as another multicolvar action or \n                          using a MultiColvarFilter or ActionVolume action. When you do so \n                          the quantity is calculated for those atoms specified in the \n                          previous multicolvar. This is useful if you would like to calculate \n                          the Steinhardt parameter for those atoms that have a \n                          coordination number more than four for example \n               SPECIESA - this keyword is used for colvars such as the coordination \n                          number. In that context it species that plumed should calculate one \n                          coordination number for each of the atoms specified in SPECIESA. Each of \n                          these cooordination numbers specifies how many of the atoms \n                          specifies using SPECIESB is within the specified cutoff. As with the \n                          species keyword the input can also be specified using the label of \n                          another multicolvar \n               SPECIESB - this keyword is used for colvars such as the coordination \n                          number. It must appear with SPECIESA. For a full explanation see \n                          the documentation for that keyword \n\nThe following arguments are compulsory: \n\n      CRYSTAL_STRUCTURE - ( default=FCC ) Targeted crystal structure. Options are: \n                          SC: simple cubic, BCC: body center cubic, FCC: face centered \n                          cubic, HCP: hexagonal closed pack, DIAMOND: cubic diamond, CUSTOM: \n                          user defined \n      LATTICE_CONSTANTS - Lattice constants. Two comma separated values for HCP, one \n                          value for all other CRYSTAL_STRUCTURES. \n                  SIGMA - ( default=0.1 ) the width to use for the gaussian kernels \n                LCUTOFF - ( default=0.0001 ) any atoms separated by less than this \n                          tolerance should be ignored \n                 LAMBDA - ( default=100 ) Lambda parameter. This is only used if you \n                          have more than one reference environment \n                 CUTOFF - ( default=3 ) how many multiples of sigma would you like to \n                          consider beyond the maximum distance in the environment \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n              REFERENCE - PDB files with relative distances from central atom. Use \n                          this keyword if you are targeting a single reference \n                          environment. \n             REFERENCE_ - PDB files with relative distances from central atom. Each \n                          file corresponds to one template. Use these keywords if you are \n                          targeting more than one reference environment.. You can use multiple \n                          instances of this keyword i.e. REFERENCE_1, REFERENCE_2, \n                          REFERENCE_3... \n        ATOM_NAMES_FILE - PDB file with atom names for all atoms in SPECIES. Atoms in \n                          reference environments will be compared only if atom names match. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "ERMSD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ERMSD",
    "description" : "Calculate eRMSD with respect to a reference structure.",
    "module" : "colvar",
    "displayname" : "ERMSD",
     "dois" : ["10.1093/nar/gku972"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "REFERENCE" : { "type": "compulsory", "description": "a file in pdb format containing the reference structure and the atoms involved in the CV", "multiple": 0, "actionlink": "none"},
       "CUTOFF" : { "type": "compulsory", "description": " only pairs of atoms closer than CUTOFF are considered in the calculation", "multiple": 0, "actionlink": "none", "default": "2.4"},
       "ATOMS" : { "type": "atoms", "description": "the list of atoms (use lcs)", "multiple": 1, "actionlink": "none"},
       "PAIRS" : { "type": "optional", "description": "List of pairs considered", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the eRMSD between the instantaneous structure and the reference structure that was input"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the list of atoms (use lcs). For more information on how to \n                          specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n              REFERENCE - a file in pdb format containing the reference structure and \n                          the atoms involved in the CV. \n                 CUTOFF - ( default=2.4 ) only pairs of atoms closer than CUTOFF are \n                          considered in the calculation. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                  PAIRS - List of pairs considered. All pairs are considered if this \n                          value is not specified. \n\n"
  },
  "EUCLIDEAN_DISTANCE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/EUCLIDEAN_DISTANCE",
    "description" : "Calculate the euclidean distance between two vectors of arguments",
    "module" : "refdist",
    "displayname" : "EUCLIDEAN_DISTANCE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG1" : { "type": "compulsory", "description": "The poin that we are calculating the distance from", "multiple": 0, "actionlink": "none"},
       "ARG2" : { "type": "compulsory", "description": "The point that we are calculating the distance to", "multiple": 0, "actionlink": "none"},
       "SQUARED" : { "type": "flag", "description": " The squared distance should be calculated", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the euclidean distances between the input vectors"
         }
       }
    },
    "needs" : ["DISPLACEMENT", "CUSTOM", "TRANSPOSE", "MATRIX_PRODUCT_DIAGONAL"],
    "help" : "\nThe following arguments are compulsory: \n\n                   ARG1 - The poin that we are calculating the distance from \n                   ARG2 - The point that we are calculating the distance to \n\nIn addition you may use the following options: \n\n                SQUARED - ( default=off ) The squared distance should be calculated \n"
  },
  "EVALUATE_FUNCTION_FROM_GRID": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/EVALUATE_FUNCTION_FROM_GRID",
    "description" : "Calculate the function stored on the input grid at an arbitrary point",
    "module" : "gridtools",
    "displayname" : "EVALUATE_FUNCTION_FROM_GRID",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "GRID" : { "type": "compulsory", "description": "the name of the grid that we are using to evaluate the function", "multiple": 0, "actionlink": "none", "argtype": "grid"},
       "ARG" : { "type": "optional", "description": "the arguments that you would like to use when evaluating the function", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "INTERPOLATION_TYPE" : { "type": "compulsory", "description": " the method to use for interpolation", "multiple": 0, "actionlink": "none", "default": "spline"},
       "ZERO_OUTSIDE_GRID_RANGE" : { "type": "flag", "description": " if we are asked to evaluate the function for a number that is outside the range of the grid set it to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "interpolation of the input grid to get the value of the function at the input arguments"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                   GRID - the name of the grid that we are using to evaluate the \n                          function \n     INTERPOLATION_TYPE - ( default=spline ) the method to use for interpolation. Can \n                          be spline, linear, ceiling or floor. \n\nIn addition you may use the following options: \n\nZERO_OUTSIDE_GRID_RANGE - ( default=off ) if we are asked to evaluate the function \n                          for a number that is outside the range of the grid set it to \n                          zero \n                    ARG - the arguments that you would like to use when evaluating \n                          the function. If not specified these are determined from the \n                          names of the grid dimensions \n\n"
  },
  "EVALUATE_FUNCTION_FROM_GRID_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/EVALUATE_FUNCTION_FROM_GRID_SCALAR",
    "description" : "",
    "module" : "gridtools",
    "displayname" : "EVALUATE_FUNCTION_FROM_GRID",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "INTERPOLATION_TYPE" : { "type": "compulsory", "description": " the method to use for interpolation", "multiple": 0, "actionlink": "none", "default": "spline"},
       "ZERO_OUTSIDE_GRID_RANGE" : { "type": "flag", "description": " if we are asked to evaluate the function for a number that is outside the range of the grid set it to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "", "multiple": 0, "actionlink": "none", "argtype": "scalar/grid"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "interpolation of the input grid to get the value of the function at the input arguments"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n     INTERPOLATION_TYPE - ( default=spline ) the method to use for interpolation. Can \n                          be spline, linear, ceiling or floor. \n                    ARG - \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \nZERO_OUTSIDE_GRID_RANGE - ( default=off ) if we are asked to evaluate the function \n                          for a number that is outside the range of the grid set it to \n                          zero \n"
  },
  "EVALUATE_FUNCTION_FROM_GRID_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/EVALUATE_FUNCTION_FROM_GRID_VECTOR",
    "description" : "",
    "module" : "gridtools",
    "displayname" : "EVALUATE_FUNCTION_FROM_GRID",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and vector that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "INTERPOLATION_TYPE" : { "type": "compulsory", "description": " the method to use for interpolation", "multiple": 0, "actionlink": "none", "default": "spline"},
       "ZERO_OUTSIDE_GRID_RANGE" : { "type": "flag", "description": " if we are asked to evaluate the function for a number that is outside the range of the grid set it to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "MASK" : { "type": "optional", "description": "the label for a sparse matrix that should be used to determine which elements of the matrix should be computed", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the vector obtained by doing an element-wise application of interpolation of the input grid to get the value of the function at the input arguments to the input vectors"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and vector that on which the \n                          function is being calculated elementwise \n     INTERPOLATION_TYPE - ( default=spline ) the method to use for interpolation. Can \n                          be spline, linear, ceiling or floor. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \nZERO_OUTSIDE_GRID_RANGE - ( default=off ) if we are asked to evaluate the function \n                          for a number that is outside the range of the grid set it to \n                          zero \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - the label for a sparse matrix that should be used to \n                          determine which elements of the matrix should be computed \n\n"
  },
  "EXTENDED_LAGRANGIAN": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/EXTENDED_LAGRANGIAN",
    "description" : "Add extended Lagrangian.",
    "module" : "bias",
    "displayname" : "EXTENDED_LAGRANGIAN",
     "dois" : ["10.1103/PhysRevLett.90.238302", "10.1016/j.cplett.2006.05.062", "10.1021/jp805039u"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "KAPPA" : { "type": "compulsory", "description": "specifies that the restraint is harmonic and what the values of the force constants on each of the variables are", "multiple": 0, "actionlink": "none"},
       "TAU" : { "type": "compulsory", "description": "specifies that the restraint is harmonic and what the values of the force constants on each of the variables are", "multiple": 0, "actionlink": "none"},
       "FRICTION" : { "type": "compulsory", "description": " add a friction to the variable", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "TEMP" : { "type": "optional", "description": "the system temperature - needed when FRICTION is present", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "_fict" : {
           "flag": "default",
           "type": "scalar",
           "description": "one or multiple instances of this quantity can be referenced elsewhere in the input file"
         },
         "_vfict" : {
           "flag": "default",
           "type": "scalar",
           "description": "one or multiple instances of this quantity can be referenced elsewhere in the input file"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n                  KAPPA - specifies that the restraint is harmonic and what the \n                          values of the force constants on each of the variables are \n                    TAU - specifies that the restraint is harmonic and what the \n                          values of the force constants on each of the variables are \n               FRICTION - ( default=0.0 ) add a friction to the variable \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                   TEMP - the system temperature - needed when FRICTION is present. \n                          If not provided will be taken from MD code (if available) \n\n"
  },
  "EXTERNAL": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/EXTERNAL",
    "description" : "Calculate a restraint that is defined on a grid that is read during start up",
    "module" : "bias",
    "displayname" : "EXTERNAL",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "FILE" : { "type": "compulsory", "description": "the name of the file containing the external potential", "multiple": 0, "actionlink": "none"},
       "NOSPLINE" : { "type": "flag", "description": " specifies that no spline interpolation is to be used when calculating the energy and forces due to the external potential", "multiple": 0, "actionlink": "none", "default": "off"},
       "SPARSE" : { "type": "flag", "description": " specifies that the external potential uses a sparse grid", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALE" : { "type": "compulsory", "description": " a factor that multiplies the external potential, useful to invert free energies", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n                   FILE - the name of the file containing the external potential. \n                  SCALE - ( default=1.0 ) a factor that multiplies the external \n                          potential, useful to invert free energies \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n               NOSPLINE - ( default=off ) specifies that no spline interpolation is \n                          to be used when calculating the energy and forces due to the \n                          external potential \n                 SPARSE - ( default=off ) specifies that the external potential uses \n                          a sparse grid \n"
  },
  "EXTRACV": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/EXTRACV",
    "description" : "Allow PLUMED to use collective variables computed in the MD engine.",
    "module" : "colvar",
    "displayname" : "EXTRACV",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NAME" : { "type": "compulsory", "description": "name of the CV as computed by the MD engine", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the value of the CV that was passed from the MD code to PLUMED"
         }
       }
    },
    "needs" : ["PUT", "COMBINE"],
    "help" : "\nThe following arguments are compulsory: \n\n                   NAME - name of the CV as computed by the MD engine \n"
  },
  "FAKE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FAKE",
    "description" : "This is a fake colvar container that is used by cltools or various other actions that supports input and period definitions",
    "module" : "colvar",
    "displayname" : "FAKE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the fake atom index, a number is enough", "multiple": 1, "actionlink": "none"},
       "PERIODIC" : { "type": "compulsory", "description": "if the output of your function is periodic then you should specify the periodicity of the function", "multiple": 0, "actionlink": "none"},
       "COMPONENTS" : { "type": "optional", "description": "additional components that this variable is supposed to have", "multiple": 0, "actionlink": "none"},
       "output" : {
         ".#!custom" : {
           "flag": "default",
           "type": "scalar",
           "description": "the names of the output components for this action depend on the actions input file see the example inputs below for details"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the fake atom index, a number is enough. For more \n                          information on how to specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n               PERIODIC - if the output of your function is periodic then you should \n                          specify the periodicity of the function. If the output is not \n                          periodic you must state this using PERIODIC=NO,NO (one for the lower \n                          and the other for the upper boundary). For multicomponents then \n                          it is PERIODIC=mincomp1,maxcomp1,mincomp2,maxcomp2 etc \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n             COMPONENTS - additional components that this variable is supposed to \n                          have. Periodicity is ruled by PERIODIC keyword \n\n"
  },
  "FARTHEST_POINT_SAMPLING": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FARTHEST_POINT_SAMPLING",
    "description" : "Select a set of landmarks using farthest point sampling.",
    "module" : "landmarks",
    "displayname" : "FARTHEST_POINT_SAMPLING",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the input matrix", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "MATRIX" : { "type": "deprecated", "description": "You should use ARG instead of this keyword which was used in older versions of PLUMED and is provided for back compatibility only", "multiple": 0, "actionlink": "none"},
       "NZEROS" : { "type": "compulsory", "description": "the number of landmark points that you want to select", "multiple": 0, "actionlink": "none"},
       "SEED" : { "type": "compulsory", "description": " a random number seed", "multiple": 0, "actionlink": "none", "default": "1234"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "a vector which has as many elements as there are rows in the input matrix of dissimilarities"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the input matrix \n                 NZEROS - the number of landmark points that you want to select \n                   SEED - ( default=1234 ) a random number seed \n"
  },
  "FCCUBIC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FCCUBIC",
    "description" : "Measure how similar the environment around atoms is to that found in a FCC structure.",
    "module" : "symfunc",
    "displayname" : "FCCUBIC",
     "dois" : ["10.1021/ct500320c", "10.1103/PhysRevB.81.125416", "10.1103/PhysRevB.92.180102", "10.1063/1.4997180", "10.1063/1.5134461"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated and the atoms that can be in the environments", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "the list of atoms that can be in the environments of each of the atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "the switching function that it used in the construction of the contact matrix", "multiple": 0, "actionlink": "LESS_THAN"},
       "MASK" : { "type": "optional", "description": "the label for a vector that is used to determine which rows of the matrix are computed", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "FUNCTION" : { "type": "compulsory", "description": "the function of the bond vectors that you would like to evaluate", "multiple": 0, "actionlink": "none"},
       "PHI" : { "type": "compulsory", "description": " The Euler rotational angle phi", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "THETA" : { "type": "compulsory", "description": " The Euler rotational angle theta", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "PSI" : { "type": "compulsory", "description": " The Euler rotational angle psi", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "ALPHA" : { "type": "compulsory", "description": " The alpha parameter of the angular function that is used for FCCUBIC", "multiple": 0, "actionlink": "none", "default": "3.0"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the symmetry function for each of the specified atoms"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "GROUP", "FCCUBIC_FUNC", "ONES", "MATRIX_VECTOR_PRODUCT"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - the list of atoms for which the symmetry function is being \n                          calculated and the atoms that can be in the environments \n               SPECIESA - the list of atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESB, \n                          which specifies the atoms that are in the environment. \n               SPECIESB - the list of atoms that can be in the environments of each \n                          of the atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESA, \n                          which specifies the atoms for which the symmetry function is \n                          being calculated. \n\nThe following arguments are compulsory: \n\n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n               FUNCTION - the function of the bond vectors that you would like to \n                          evaluate \n                    PHI - ( default=0.0 ) The Euler rotational angle phi \n                  THETA - ( default=0.0 ) The Euler rotational angle theta \n                    PSI - ( default=0.0 ) The Euler rotational angle psi \n                  ALPHA - ( default=3.0 ) The alpha parameter of the angular function \n                          that is used for FCCUBIC \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                 SWITCH - the switching function that it used in the construction of \n                          the contact matrix \n                   MASK - the label for a vector that is used to determine which rows \n                          of the matrix are computed \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "FCCUBIC_FUNC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FCCUBIC_FUNC",
    "description" : "Measure how similar the environment around atoms is to that found in a FCC structure.",
    "module" : "symfunc",
    "displayname" : "FCCUBIC_FUNC",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ALPHA" : { "type": "compulsory", "description": " The alpha parameter of the angular function", "multiple": 0, "actionlink": "none", "default": "3.0"},
       "ARG" : { "type": "compulsory", "description": "the values input to this function", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector/matrix that should be used to determine which elements of the vector/matrix should be computed", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "a function that measures the similarity with an fcc environment"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                  ALPHA - ( default=3.0 ) The alpha parameter of the angular function \n                    ARG - the values input to this function \n                   MASK - the label for a sparse vector/matrix that should be used to \n                          determine which elements of the vector/matrix should be computed \n\n"
  },
  "FCCUBIC_FUNC_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FCCUBIC_FUNC_MATRIX",
    "description" : "",
    "module" : "symfunc",
    "displayname" : "FCCUBIC_FUNC",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and matrices that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/matrix"},
       "MASK" : { "type": "optional", "description": "a matrix that is used to used to determine which elements of the output matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "ALPHA" : { "type": "compulsory", "description": " The alpha parameter of the angular function", "multiple": 0, "actionlink": "none", "default": "3.0"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "the matrix obtained by doing an element-wise application of a function that measures the similarity with an fcc environment to the input matrix"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and matrices that on which the \n                          function is being calculated elementwise \n                  ALPHA - ( default=3.0 ) The alpha parameter of the angular function \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a matrix that is used to used to determine which elements \n                          of the output matrix to compute \n\n"
  },
  "FERRONEMATIC_ORDER": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FERRONEMATIC_ORDER",
    "description" : "Calculate the ferronematic order parameter.",
    "module" : "liquid_crystal",
    "displayname" : "FERRONEMATIC_ORDER",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "MOLECULE_STARTS" : { "type": "atoms", "description": "The atoms where the molecular axis starts", "multiple": 1, "actionlink": "none"},
       "MOLECULE_ENDS" : { "type": "atoms", "description": "The atoms where the molecular axis ends", "multiple": 1, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the modulus of the average vector"
         }
       }
    },
    "needs" : ["DISTANCE", "CUSTOM", "MEAN"],
    "help" : "The input trajectory can be in any of the following formats: \n\n        MOLECULE_STARTS - The atoms where the molecular axis starts.. For more \n                          information on how to specify lists of atoms see \ref Group \n          MOLECULE_ENDS - The atoms where the molecular axis ends.. For more \n                          information on how to specify lists of atoms see \ref Group \n"
  },
  "FIND_CONTOUR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FIND_CONTOUR",
    "description" : "Find an isocontour in a smooth function.",
    "module" : "contour",
    "displayname" : "FIND_CONTOUR",
     "dois" : ["10.1039/B805786A", "10.1021/jp909219k", "10.1088/1361-648X/aa893d", "10.1063/1.5134461"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the labels of the grid in which the contour will be found", "multiple": 0, "actionlink": "none", "argtype": "grid"},
       "CONTOUR" : { "type": "compulsory", "description": "the value we would like to draw the contour at in the space", "multiple": 0, "actionlink": "none"},
       "INTERPOLATION_TYPE" : { "type": "compulsory", "description": " the method to use for interpolation", "multiple": 0, "actionlink": "none", "default": "spline"},
       "ZERO_OUTSIDE_GRID_RANGE" : { "type": "flag", "description": " if we are asked to evaluate the function for a number that is outside the range of the grid set it to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "BUFFER" : { "type": "compulsory", "description": " number of buffer grid points around location where grid was found on last step", "multiple": 0, "actionlink": "none", "default": "0"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "interpolation of the input grid to get the value of the function at the input arguments"
         },
         ".#!custom" : {
           "flag": "default",
           "type": "scalar",
           "description": "the names of the output components for this action depend on the actions input file see the example inputs below for details"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the grid in which the contour will be found \n                CONTOUR - the value we would like to draw the contour at in the space \n     INTERPOLATION_TYPE - ( default=spline ) the method to use for interpolation. Can \n                          be spline, linear, ceiling or floor. \n                 BUFFER - ( default=0 ) number of buffer grid points around location \n                          where grid was found on last step. If this is zero the full grid \n                          is calculated on each step \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \nZERO_OUTSIDE_GRID_RANGE - ( default=off ) if we are asked to evaluate the function \n                          for a number that is outside the range of the grid set it to \n                          zero \n"
  },
  "FIND_CONTOUR_SURFACE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FIND_CONTOUR_SURFACE",
    "description" : "Find an isocontour by searching along either the x, y or z direction.",
    "module" : "contour",
    "displayname" : "FIND_CONTOUR_SURFACE",
     "dois" : ["10.1088/1361-648X/aa893d"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the labels of the grid in which the contour will be found", "multiple": 0, "actionlink": "none", "argtype": "grid"},
       "CONTOUR" : { "type": "compulsory", "description": "the value we would like to draw the contour at in the space", "multiple": 0, "actionlink": "none"},
       "INTERPOLATION_TYPE" : { "type": "compulsory", "description": " the method to use for interpolation", "multiple": 0, "actionlink": "none", "default": "spline"},
       "ZERO_OUTSIDE_GRID_RANGE" : { "type": "flag", "description": " if we are asked to evaluate the function for a number that is outside the range of the grid set it to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "SEARCHDIR" : { "type": "compulsory", "description": "In which directions do you wish to search for the contour", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "grid",
           "description": "a grid containing the location of the points in the Willard-Chandler surface along the chosen direction"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the grid in which the contour will be found \n                CONTOUR - the value we would like to draw the contour at in the space \n     INTERPOLATION_TYPE - ( default=spline ) the method to use for interpolation. Can \n                          be spline, linear, ceiling or floor. \n              SEARCHDIR - In which directions do you wish to search for the contour. \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \nZERO_OUTSIDE_GRID_RANGE - ( default=off ) if we are asked to evaluate the function \n                          for a number that is outside the range of the grid set it to \n                          zero \n"
  },
  "FIND_GRID_MAXIMUM": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FIND_GRID_MAXIMUM",
    "description" : "Find the point with the highest value of the function on the grid",
    "module" : "gridtools",
    "displayname" : "FIND_GRID_MAXIMUM",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the label for the function on the grid that you would like to find the optimum in", "multiple": 0, "actionlink": "none", "argtype": "grid"},
       "NOINTERPOL" : { "type": "flag", "description": " do not interpolate the function when finding the optimum", "multiple": 0, "actionlink": "none", "default": "off"},
       "CGTOL" : { "type": "compulsory", "description": " the tolerance for the conjugate gradient optimization", "multiple": 0, "actionlink": "none", "default": "1E-4"},
       "output" : {
         "optval" : {
           "flag": "default",
           "type": "scalar",
           "description": "the value of the function at the optimum"
         },
         "_opt" : {
           "flag": "default",
           "type": "scalar",
           "description": "the values of the arguments of the function at the optimum can be referenced elsewhere in the input file by using the names of the arguments followed by the string _opt"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label for the function on the grid that you would like \n                          to find the optimum in \n                  CGTOL - ( default=1E-4 ) the tolerance for the conjugate gradient \n                          optimization \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n             NOINTERPOL - ( default=off ) do not interpolate the function when \n                          finding the optimum \n"
  },
  "FIND_GRID_MINIMUM": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FIND_GRID_MINIMUM",
    "description" : "Find the point with the lowest value of the function on the grid",
    "module" : "gridtools",
    "displayname" : "FIND_GRID_MINIMUM",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the label for the function on the grid that you would like to find the optimum in", "multiple": 0, "actionlink": "none", "argtype": "grid"},
       "NOINTERPOL" : { "type": "flag", "description": " do not interpolate the function when finding the optimum", "multiple": 0, "actionlink": "none", "default": "off"},
       "CGTOL" : { "type": "compulsory", "description": " the tolerance for the conjugate gradient optimization", "multiple": 0, "actionlink": "none", "default": "1E-4"},
       "output" : {
         "optval" : {
           "flag": "default",
           "type": "scalar",
           "description": "the value of the function at the optimum"
         },
         "_opt" : {
           "flag": "default",
           "type": "scalar",
           "description": "the values of the arguments of the function at the optimum can be referenced elsewhere in the input file by using the names of the arguments followed by the string _opt"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label for the function on the grid that you would like \n                          to find the optimum in \n                  CGTOL - ( default=1E-4 ) the tolerance for the conjugate gradient \n                          optimization \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n             NOINTERPOL - ( default=off ) do not interpolate the function when \n                          finding the optimum \n"
  },
  "FIND_SPHERICAL_CONTOUR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FIND_SPHERICAL_CONTOUR",
    "description" : "Find an isocontour in a three dimensional grid by searching over a Fibonacci sphere.",
    "module" : "contour",
    "displayname" : "FIND_SPHERICAL_CONTOUR",
     "dois" : ["10.1063/1.5134461"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the labels of the grid in which the contour will be found", "multiple": 0, "actionlink": "none", "argtype": "grid"},
       "CONTOUR" : { "type": "compulsory", "description": "the value we would like to draw the contour at in the space", "multiple": 0, "actionlink": "none"},
       "INTERPOLATION_TYPE" : { "type": "compulsory", "description": " the method to use for interpolation", "multiple": 0, "actionlink": "none", "default": "spline"},
       "ZERO_OUTSIDE_GRID_RANGE" : { "type": "flag", "description": " if we are asked to evaluate the function for a number that is outside the range of the grid set it to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "NPOINTS" : { "type": "compulsory", "description": "the number of points for which we are looking for the contour", "multiple": 0, "actionlink": "none"},
       "INNER_RADIUS" : { "type": "compulsory", "description": "the minimum radius on which to look for the contour", "multiple": 0, "actionlink": "none"},
       "OUTER_RADIUS" : { "type": "compulsory", "description": "the outer radius on which to look for the contour", "multiple": 0, "actionlink": "none"},
       "NBINS" : { "type": "compulsory", "description": " the number of discrete sections in which to divide the distance between the inner and outer radius when searching for a contour", "multiple": 0, "actionlink": "none", "default": "1"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "grid",
           "description": "a grid on a Fibonacci sphere that describes the radial distance from the origin for the points on the Willard-Chandler surface"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the grid in which the contour will be found \n                CONTOUR - the value we would like to draw the contour at in the space \n     INTERPOLATION_TYPE - ( default=spline ) the method to use for interpolation. Can \n                          be spline, linear, ceiling or floor. \n                NPOINTS - the number of points for which we are looking for the \n                          contour \n           INNER_RADIUS - the minimum radius on which to look for the contour \n           OUTER_RADIUS - the outer radius on which to look for the contour \n                  NBINS - ( default=1 ) the number of discrete sections in which to \n                          divide the distance between the inner and outer radius when \n                          searching for a contour \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \nZERO_OUTSIDE_GRID_RANGE - ( default=off ) if we are asked to evaluate the function \n                          for a number that is outside the range of the grid set it to \n                          zero \n"
  },
  "FISST": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FISST",
    "description" : "Compute and apply the optimal linear force on an observable to enhance sampling of conformational distributions over a range of applied forces.",
    "module" : "fisst",
    "displayname" : "FISST",
     "dois" : ["10.1063/5.0009280"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "PERIOD" : { "type": "compulsory", "description": "Steps corresponding to the learning rate", "multiple": 0, "actionlink": "none"},
       "RESET_PERIOD" : { "type": "optional", "description": "Reset the learning statistics every time this number of steps comes around", "multiple": 0, "actionlink": "none"},
       "NINTERPOLATE" : { "type": "compulsory", "description": "Number of grid points on which to do interpolation", "multiple": 0, "actionlink": "none"},
       "MIN_FORCE" : { "type": "compulsory", "description": "Minimum force (per CV) to use for sampling", "multiple": 0, "actionlink": "none"},
       "MAX_FORCE" : { "type": "compulsory", "description": "Maximum force (per CV) to use for sampling", "multiple": 0, "actionlink": "none"},
       "CENTER" : { "type": "compulsory", "description": " The CV value at which the applied bias energy will be zero", "multiple": 0, "actionlink": "none", "default": "0"},
       "KBT" : { "type": "optional", "description": "The system temperature in units of KB*T", "multiple": 0, "actionlink": "none"},
       "INITIAL_WEIGHT_DIST" : { "type": "optional", "description": "Starting distribution for the force weights (options: UNIFORM, EXP, GAUSS)", "multiple": 0, "actionlink": "none"},
       "INITIAL_WEIGHT_RATE" : { "type": "optional", "description": "Rate of decay for exponential and gaussian distributions", "multiple": 0, "actionlink": "none"},
       "RESTART_FMT" : { "type": "optional", "description": "the format that should be used to output real numbers in FISST restarts", "multiple": 0, "actionlink": "none"},
       "OUT_RESTART" : { "type": "optional", "description": "Output file for all information needed to continue FISST simulation", "multiple": 0, "actionlink": "none"},
       "IN_RESTART" : { "type": "optional", "description": "Read this file to continue an FISST simulation", "multiple": 0, "actionlink": "none"},
       "OUT_OBSERVABLE" : { "type": "optional", "description": "Output file putting weights needed to compute observables at different force values", "multiple": 0, "actionlink": "none"},
       "OBSERVABLE_FREQ" : { "type": "optional", "description": "", "multiple": 0, "actionlink": "none", "default": "perio"},
       "FREEZE" : { "type": "flag", "description": " Fix bias weights at current level (only used for restarting)", "multiple": 0, "actionlink": "none", "default": "off"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "force2" : {
           "flag": "default",
           "type": "scalar",
           "description": "squared value of force from the bias"
         },
         "_fbar" : {
           "flag": "default",
           "type": "scalar",
           "description": "For each named CV biased, there will be a corresponding output CV_fbar storing the current linear bias prefactor"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n                 PERIOD - Steps corresponding to the learning rate \n           NINTERPOLATE - Number of grid points on which to do interpolation. \n              MIN_FORCE - Minimum force (per CV) to use for sampling. Units: \n                          [Energy]/[CV] (can be negative). \n              MAX_FORCE - Maximum force (per CV) to use for sampling. \n                 CENTER - ( default=0 ) The CV value at which the applied bias energy \n                          will be zero \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                 FREEZE - ( default=off ) Fix bias weights at current level (only \n                          used for restarting). \n           RESET_PERIOD - Reset the learning statistics every time this number of \n                          steps comes around. \n                    KBT - The system temperature in units of KB*T. If not provided \n                          will be taken from MD code (if available) \n    INITIAL_WEIGHT_DIST - Starting distribution for the force weights (options: \n                          UNIFORM, EXP, GAUSS). \n    INITIAL_WEIGHT_RATE - Rate of decay for exponential and gaussian distributions. \n                          W(F)~exp(-r |F|^d). \n            RESTART_FMT - the format that should be used to output real numbers in \n                          FISST restarts. \n            OUT_RESTART - Output file for all information needed to continue FISST \n                          simulation.If you have the RESTART directive set (global or for FISST), \n                          this file will be appended to.Note that the header will be \n                          printed again if appending. \n             IN_RESTART - Read this file to continue an FISST simulation. If same as \n                          OUT_RESTART and you have not set the RESTART directive, the file will \n                          be backed-up and overwritten with new output.If you do have \n                          the RESTART flag set and it is the same name as OUT_RESTART, \n                          this file will be appended. \n         OUT_OBSERVABLE - Output file putting weights needed to compute observables \n                          at different force values.If you have the RESTART directive \n                          set (global or for FISST), this file will be appended to. Note \n                          that the header will be printed again if appending. \n        OBSERVABLE_FREQ - How often to write out observable weights (default=period). \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n\n"
  },
  "FIT_TO_TEMPLATE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FIT_TO_TEMPLATE",
    "description" : "This action is used to align a molecule to a template.",
    "module" : "generic",
    "displayname" : "FIT_TO_TEMPLATE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which molecules are reassembled", "multiple": 0, "actionlink": "none", "default": "1"},
       "REFERENCE" : { "type": "compulsory", "description": "a file in pdb format containing the reference structure and the atoms involved in the CV", "multiple": 0, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " the manner in which RMSD alignment is performed", "multiple": 0, "actionlink": "none", "default": "SIMPLE"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                 STRIDE - ( default=1 ) the frequency with which molecules are \n                          reassembled. Unless you are completely certain about what you are doing \n                          leave this set equal to 1! \n              REFERENCE - a file in pdb format containing the reference structure and \n                          the atoms involved in the CV. \n                   TYPE - ( default=SIMPLE ) the manner in which RMSD alignment is \n                          performed. Should be OPTIMAL or SIMPLE. \n\nIn addition you may use the following options: \n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n"
  },
  "FIXEDATOM": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FIXEDATOM",
    "description" : "Add a virtual atom in a fixed position.",
    "module" : "vatom",
    "displayname" : "FIXEDATOM",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "hidden", "description": "the list of atoms which are involved the virtual atom's definition", "multiple": 0, "actionlink": "none"},
       "AT" : { "type": "compulsory", "description": "coordinates of the virtual atom", "multiple": 0, "actionlink": "none"},
       "SET_MASS" : { "type": "compulsory", "description": " mass of the virtual atom", "multiple": 0, "actionlink": "none", "default": "1"},
       "SET_CHARGE" : { "type": "compulsory", "description": " charge of the virtual atom", "multiple": 0, "actionlink": "none", "default": "0"},
       "SCALED_COMPONENTS" : { "type": "flag", "description": " use scaled components", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                     AT - coordinates of the virtual atom \n               SET_MASS - ( default=1 ) mass of the virtual atom \n             SET_CHARGE - ( default=0 ) charge of the virtual atom \n\nIn addition you may use the following options: \n\n      SCALED_COMPONENTS - ( default=off ) use scaled components \n"
  },
  "FLATTEN": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FLATTEN",
    "description" : "Convert a matrix into a vector",
    "module" : "valtools",
    "displayname" : "FLATTEN",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the label for the matrix that you would like to flatten to a vector", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs ", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "a vector containing all the elements of the input matrix"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label for the matrix that you would like to flatten to \n                          a vector \n"
  },
  "FLUSH": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FLUSH",
    "description" : "This command instructs plumed to flush all the open files with a user specified frequency.",
    "module" : "generic",
    "displayname" : "FLUSH",
     "dois" : [],
    "syntax" : {
       "STRIDE" : { "type": "compulsory", "description": "the frequency with which all the open files should be flushed", "multiple": 0, "actionlink": "none"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                 STRIDE - the frequency with which all the open files should be \n                          flushed \n"
  },
  "FOURIER_TRANSFORM": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FOURIER_TRANSFORM",
    "description" : "Compute the Discrete Fourier Transform (DFT) by means of FFTW of data stored on a 2D grid.",
    "module" : "fourier",
    "displayname" : "FOURIER_TRANSFORM",
     "dois" : ["10.1088/1361-648X/aa893d"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the label of the grid that you want to fourer transform", "multiple": 0, "actionlink": "none", "argtype": "grid"},
       "FT_TYPE" : { "type": "optional", "description": "choose what kind of data you want as output on the grid", "multiple": 0, "actionlink": "none"},
       "FOURIER_PARAMETERS" : { "type": "compulsory", "description": " what kind of normalization is applied to the output and if the Fourier transform in FORWARD or BACKWARD", "multiple": 0, "actionlink": "none", "default": "default"},
       "output" : {
         "real" : {
           "flag": "FT_TYPE",
           "type": "grid",
           "description": "the real part of the function"
         },
         "imag" : {
           "flag": "FT_TYPE",
           "type": "grid",
           "description": "the imaginary part of the function"
         },
         "value" : {
           "flag": "default",
           "type": "grid",
           "description": "the fourier transform of the input grid"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label of the grid that you want to fourer transform \n     FOURIER_PARAMETERS - ( default=default ) what kind of normalization is applied \n                          to the output and if the Fourier transform in FORWARD or \n                          BACKWARD. This keyword takes the form FOURIER_PARAMETERS=A,B, where A \n                          and B can be 0, 1 or -1. The default values are A=1 (no \n                          normalization at all) and B=1 (forward FFT). Other possible choices for A \n                          are: A=-1: normalize by the number of data, A=0: normalize by \n                          the square root of the number of data (one forward and followed \n                          by backward FFT recover the original data). \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                FT_TYPE - choose what kind of data you want as output on the grid. \n                          Possible values are: ABS = compute the complex modulus of Fourier \n                          coefficients (DEFAULT); NORM = compute the norm (i.e. ABS^2) of Fourier \n                          coefficients; COMPLEX = store the FFTW complex output on the grid (as a \n                          vector). \n\n"
  },
  "FRET": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FRET",
    "description" : "Calculates the FRET efficiency between a pair of atoms.",
    "module" : "isdb",
    "displayname" : "FRET",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the pair of atom that we are calculating the distance between", "multiple": 1, "actionlink": "none"},
       "R0" : { "type": "compulsory", "description": "The value of the Forster radius", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the fret efficiency between the input pair of atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the pair of atom that we are calculating the distance \n                          between. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following arguments are compulsory: \n\n                     R0 - The value of the Forster radius. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n"
  },
  "FUNCPATHGENERAL": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FUNCPATHGENERAL",
    "description" : "This function calculates path collective variables (PCVs) using an arbitrary combination of collective variables.",
    "module" : "function",
    "displayname" : "FUNCPATHGENERAL",
     "dois" : ["10.1021/acs.jctc.8b00563"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "LAMBDA" : { "type": "compulsory", "description": "Lambda parameter required for smoothing", "multiple": 0, "actionlink": "none"},
       "COEFFICIENTS" : { "type": "compulsory", "description": "Coefficients to be assigned to the CVs", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "compulsory", "description": "Colvar file needed to provide the CV milestones", "multiple": 0, "actionlink": "none"},
       "COLUMNS" : { "type": "optional", "description": "List of columns in the reference colvar file specifying the CVs", "multiple": 0, "actionlink": "none"},
       "NEIGH_SIZE" : { "type": "optional", "description": "Size of the neighbor list", "multiple": 0, "actionlink": "none"},
       "NEIGH_STRIDE" : { "type": "optional", "description": "How often the neighbor list needs to be calculated in time units", "multiple": 0, "actionlink": "none"},
       "output" : {
         "s" : {
           "flag": "default",
           "type": "scalar",
           "description": "Position on the path"
         },
         "z" : {
           "flag": "default",
           "type": "scalar",
           "description": "Distance from the path"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n                 LAMBDA - Lambda parameter required for smoothing \n           COEFFICIENTS - Coefficients to be assigned to the CVs \n              REFERENCE - Colvar file needed to provide the CV milestones \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                COLUMNS - List of columns in the reference colvar file specifying the \n                          CVs \n             NEIGH_SIZE - Size of the neighbor list \n           NEIGH_STRIDE - How often the neighbor list needs to be calculated in time \n                          units \n\n"
  },
  "FUNCPATHMSD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FUNCPATHMSD",
    "description" : "This function calculates path collective variables.",
    "module" : "function",
    "displayname" : "FUNCPATHMSD",
     "dois" : ["10.1063/1.2432340"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "LAMBDA" : { "type": "compulsory", "description": "the lambda parameter is needed for smoothing, is in the units of plumed", "multiple": 0, "actionlink": "none"},
       "NEIGH_SIZE" : { "type": "optional", "description": "size of the neighbor list", "multiple": 0, "actionlink": "none"},
       "NEIGH_STRIDE" : { "type": "optional", "description": "how often the neighbor list needs to be calculated in time units", "multiple": 0, "actionlink": "none"},
       "output" : {
         "s" : {
           "flag": "default",
           "type": "scalar",
           "description": "the position on the path"
         },
         "z" : {
           "flag": "default",
           "type": "scalar",
           "description": "the distance from the path"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n                 LAMBDA - the lambda parameter is needed for smoothing, is in the \n                          units of plumed \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n             NEIGH_SIZE - size of the neighbor list \n           NEIGH_STRIDE - how often the neighbor list needs to be calculated in time \n                          units \n\n"
  },
  "FUNCSUMHILLS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FUNCSUMHILLS",
    "description" : "This function is intended to be called by the command line tool sum_hills.  It is meant to integrate a HILLS file or an HILLS file interpreted as a histogram in a variety of ways. It is, therefore, not expected that you use this during your dynamics (it will crash!)",
    "module" : "function",
    "displayname" : "FUNCSUMHILLS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "HILLSFILES" : { "type": "optional", "description": " source file for hills creation(may be the same as HILLS)", "multiple": 0, "actionlink": "none"},
       "HISTOFILES" : { "type": "optional", "description": " source file for histogram creation(may be the same as HILLS)", "multiple": 0, "actionlink": "none"},
       "HISTOSIGMA" : { "type": "optional", "description": " sigmas for binning when the histogram correction is needed    ", "multiple": 0, "actionlink": "none"},
       "PROJ" : { "type": "optional", "description": " only with sumhills: the projection on the CVs", "multiple": 0, "actionlink": "none"},
       "KT" : { "type": "optional", "description": " only with sumhills: the kt factor when projection on CVs", "multiple": 0, "actionlink": "none"},
       "GRID_MIN" : { "type": "optional", "description": "the lower bounds for the grid", "multiple": 0, "actionlink": "none"},
       "GRID_MAX" : { "type": "optional", "description": "the upper bounds for the grid", "multiple": 0, "actionlink": "none"},
       "GRID_BIN" : { "type": "optional", "description": "the number of bins for the grid", "multiple": 0, "actionlink": "none"},
       "GRID_SPACING" : { "type": "optional", "description": "the approximate grid spacing (to be used as an alternative or together with GRID_BIN)", "multiple": 0, "actionlink": "none"},
       "INTERVAL" : { "type": "optional", "description": "set one dimensional INTERVAL", "multiple": 0, "actionlink": "none"},
       "OUTHILLS" : { "type": "optional", "description": " output file for hills ", "multiple": 0, "actionlink": "none"},
       "OUTHISTO" : { "type": "optional", "description": " output file for histogram ", "multiple": 0, "actionlink": "none"},
       "INITSTRIDE" : { "type": "optional", "description": " stride if you want an initial dump ", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "optional", "description": " stride when you do it on the fly ", "multiple": 0, "actionlink": "none"},
       "ISCLTOOL" : { "type": "flag", "description": " use via plumed command line: calculate at read phase and then go", "multiple": 0, "actionlink": "none", "default": "off"},
       "PARALLELREAD" : { "type": "flag", "description": " read parallel HILLS file", "multiple": 0, "actionlink": "none", "default": "off"},
       "NEGBIAS" : { "type": "flag", "description": " dump  negative bias ( -bias )   instead of the free energy: needed in well tempered with flexible hills ", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOHISTORY" : { "type": "flag", "description": " to be used with INITSTRIDE:  it splits the bias/histogram in pieces without previous history  ", "multiple": 0, "actionlink": "none", "default": "off"},
       "MINTOZERO" : { "type": "flag", "description": " translate the resulting bias/histogram to have the minimum to zero  ", "multiple": 0, "actionlink": "none", "default": "off"},
       "FMT" : { "type": "optional", "description": "the format that should be used to output real numbers", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "a scalar"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n               ISCLTOOL - ( default=off ) use via plumed command line: calculate at \n                          read phase and then go \n           PARALLELREAD - ( default=off ) read parallel HILLS file \n                NEGBIAS - ( default=off ) dump negative bias ( -bias ) instead of the \n                          free energy: needed in well tempered with flexible hills \n              NOHISTORY - ( default=off ) to be used with INITSTRIDE: it splits the \n                          bias/histogram in pieces without previous history \n              MINTOZERO - ( default=off ) translate the resulting bias/histogram to \n                          have the minimum to zero \n             HILLSFILES - source file for hills creation(may be the same as HILLS) \n             HISTOFILES - source file for histogram creation(may be the same as \n                          HILLS) \n             HISTOSIGMA - sigmas for binning when the histogram correction is needed \n                   PROJ - only with sumhills: the projection on the CVs \n                     KT - only with sumhills: the kt factor when projection on CVs \n               GRID_MIN - the lower bounds for the grid \n               GRID_MAX - the upper bounds for the grid \n               GRID_BIN - the number of bins for the grid \n           GRID_SPACING - the approximate grid spacing (to be used as an alternative \n                          or together with GRID_BIN) \n               INTERVAL - set one dimensional INTERVAL \n               OUTHILLS - output file for hills \n               OUTHISTO - output file for histogram \n             INITSTRIDE - stride if you want an initial dump \n                 STRIDE - stride when you do it on the fly \n                    FMT - the format that should be used to output real numbers \n\n"
  },
  "FUNNEL": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FUNNEL",
    "description" : "Calculate a funnel-shape restraint potential that is defined on a grid that is read during the setup.",
    "module" : "funnel",
    "displayname" : "FUNNEL",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "NOSPLINE" : { "type": "flag", "description": " specifies that no spline interpolation is to be used when calculating the energy and forces due to the external potential", "multiple": 0, "actionlink": "none", "default": "off"},
       "SPARSE" : { "type": "flag", "description": " specifies that the external potential uses a sparse grid", "multiple": 0, "actionlink": "none", "default": "off"},
       "SPHERE" : { "type": "flag", "description": " The Funnel potential including the binding site can be spherical instead of a cone", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALE" : { "type": "compulsory", "description": " a factor that multiplies the external potential, useful to invert free energies", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "NBINS" : { "type": "optional", "description": "number of bins along fps", "multiple": 0, "actionlink": "none"},
       "NBINZ" : { "type": "optional", "description": "number of bins along fps", "multiple": 0, "actionlink": "none"},
       "MINS" : { "type": "optional", "description": "minimum value assumed by fps", "multiple": 0, "actionlink": "none"},
       "KAPPA" : { "type": "optional", "description": "constant to be used for the funnel-shape restraint potential", "multiple": 0, "actionlink": "none"},
       "RCYL" : { "type": "optional", "description": "radius of the cylindrical section", "multiple": 0, "actionlink": "none"},
       "SAFETY" : { "type": "optional", "description": "To be used in case the SPHERE flag is chosen, it regulates how much the potential extends (in nm)", "multiple": 0, "actionlink": "none"},
       "SLOPE" : { "type": "optional", "description": "Adjust the behavior of the potential outside the funnel, greater values than 1", "multiple": 0, "actionlink": "none"},
       "ALPHA" : { "type": "optional", "description": "angle to change the width of the cone section", "multiple": 0, "actionlink": "none"},
       "MAXS" : { "type": "compulsory", "description": " maximum value assumed by fps", "multiple": 0, "actionlink": "none", "default": "MAXS"},
       "ZCC" : { "type": "compulsory", "description": " switching point between cylinder and cone", "multiple": 0, "actionlink": "none", "default": "ZCC"},
       "FILE" : { "type": "compulsory", "description": "name of the Funnel potential file", "multiple": 0, "actionlink": "none"},
       "WALKERS_MPI" : { "type": "flag", "description": " To be used when gromacs + multiple walkers are used", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n                  SCALE - ( default=1.0 ) a factor that multiplies the external \n                          potential, useful to invert free energies \n                   MAXS - ( default=MAXS ) maximum value assumed by fps.lp \n                    ZCC - ( default=ZCC ) switching point between cylinder and cone \n                   FILE - name of the Funnel potential file \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n               NOSPLINE - ( default=off ) specifies that no spline interpolation is \n                          to be used when calculating the energy and forces due to the \n                          external potential \n                 SPARSE - ( default=off ) specifies that the external potential uses \n                          a sparse grid \n                 SPHERE - ( default=off ) The Funnel potential including the binding \n                          site can be spherical instead of a cone \n            WALKERS_MPI - ( default=off ) To be used when gromacs + multiple walkers \n                          are used \n                  NBINS - number of bins along fps.lp \n                  NBINZ - number of bins along fps.ld \n                   MINS - minimum value assumed by fps.lp, if the ligand is able to \n                          go beyond this value the simulation will crash \n                  KAPPA - constant to be used for the funnel-shape restraint \n                          potential \n                   RCYL - radius of the cylindrical section \n                 SAFETY - To be used in case the SPHERE flag is chosen, it regulates \n                          how much the potential extends (in nm) \n                  SLOPE - Adjust the behavior of the potential outside the funnel, \n                          greater values than 1.0 will tend to push the ligand more towards \n                          the cylinder and vice versa \n                  ALPHA - angle to change the width of the cone section \n\n"
  },
  "FUNNEL_PS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FUNNEL_PS",
    "description" : "FUNNEL_PS implements the Funnel-Metadynamics (FM) technique in PLUMED 2.",
    "module" : "funnel",
    "displayname" : "FUNNEL_PS",
     "dois" : ["10.1073/pnas.1303186110", "10.1038/s41596-020-0342-4", "10.1107/S0108767388010128"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "REFERENCE" : { "type": "compulsory", "description": "a file in pdb format containing the structure you would like to align", "multiple": 0, "actionlink": "none"},
       "LIGAND" : { "type": "atoms", "description": "This MUST be a single atom, normally the COM of the ligand", "multiple": 1, "actionlink": "none"},
       "ANCHOR" : { "type": "atoms", "description": "Closest protein atom to the ligand, picked to avoid pbc problems during the simulation", "multiple": 1, "actionlink": "none"},
       "POINTS" : { "type": "compulsory", "description": "6 values defining x, y, and z of the 2 points used to construct the line", "multiple": 0, "actionlink": "none"},
       "SQUARED-ROOT" : { "type": "flag", "description": " Used to initialize the creation of the alignment variable", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lp" : {
           "flag": "default",
           "type": "scalar",
           "description": "the position along the funnel line"
         },
         "ld" : {
           "flag": "default",
           "type": "scalar",
           "description": "the distance from the funnel line"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                 LIGAND - This MUST be a single atom, normally the COM of the ligand. \n                          For more information on how to specify lists of atoms see \ref \n                          Group \n                 ANCHOR - Closest protein atom to the ligand, picked to avoid pbc \n                          problems during the simulation. For more information on how to \n                          specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n              REFERENCE - a file in pdb format containing the structure you would \n                          like to align. \n                 POINTS - 6 values defining x, y, and z of the 2 points used to \n                          construct the line. The order should be A_x,A_y,A_z,B_x,B_y,B_z. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n           SQUARED-ROOT - ( default=off ) Used to initialize the creation of the \n                          alignment variable \n"
  },
  "FUSIONPOREEXPANSIONP": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FUSIONPOREEXPANSIONP",
    "description" : "A CV for inducing the expansion of a fusion pore from a nucleated fusion pore.",
    "module" : "membranefusion",
    "displayname" : "FUSIONPOREEXPANSIONP",
     "dois" : ["10.1021/acs.jctc.0c01134"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "UMEMBRANE" : { "type": "atoms", "description": "all the beads of the upper membrane", "multiple": 1, "actionlink": "none"},
       "LMEMBRANE" : { "type": "atoms", "description": "all the beads of the lower membrane", "multiple": 1, "actionlink": "none"},
       "TAILS" : { "type": "atoms", "description": "all the tail beads of the system", "multiple": 1, "actionlink": "none"},
       "WATERS" : { "type": "atoms", "description": "all the water beads of the system", "multiple": 1, "actionlink": "none"},
       "PHOSPHATEOXYGENS" : { "type": "atoms", "description": "all the lipid phosphateoxygens beads of the system", "multiple": 1, "actionlink": "none"},
       "NSMEM" : { "type": "compulsory", "description": "the number of slices of the membrane fusion cylinder", "multiple": 0, "actionlink": "none"},
       "DSMEM" : { "type": "optional", "description": " thickness of the slices of the membrane fusion cylinder", "multiple": 0, "actionlink": "none", "default": "0.1"},
       "HMEM" : { "type": "optional", "description": " parameter of the step function θ(x,h) for the membrane fusion", "multiple": 0, "actionlink": "none", "default": "0.25"},
       "VO" : { "type": "optional", "description": " beads' molecular volume", "multiple": 0, "actionlink": "none", "default": "0.076879"},
       "D" : { "type": "compulsory", "description": "horizontal layer thickness, it depends on the Z separation of the membranes", "multiple": 0, "actionlink": "none"},
       "H" : { "type": "optional", "description": " parameter of the step function θ(x,h) for the fusion pore expansion", "multiple": 0, "actionlink": "none", "default": "0.1"},
       "RMAX" : { "type": "optional", "description": " to avoid effects of membrane undulations in large membranes (more than 256 lipids)", "multiple": 0, "actionlink": "none", "default": "2.5"},
       "R0" : { "type": "compulsory", "description": "normalization constant that makes 0 the initial value of the CV", "multiple": 0, "actionlink": "none"},
       "XCYL" : { "type": "optional", "description": "X coordinate of the fixed cylinder, if not present this will be calculated", "multiple": 0, "actionlink": "none"},
       "YCYL" : { "type": "optional", "description": "X coordinate of the fixed cylinder, if not present this will be calculated", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the value of the CV"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n              UMEMBRANE - all the beads of the upper membrane.. For more information \n                          on how to specify lists of atoms see \ref Group \n              LMEMBRANE - all the beads of the lower membrane.. For more information \n                          on how to specify lists of atoms see \ref Group \n                  TAILS - all the tail beads of the system.. For more information on \n                          how to specify lists of atoms see \ref Group \n                 WATERS - all the water beads of the system.. For more information on \n                          how to specify lists of atoms see \ref Group \n       PHOSPHATEOXYGENS - all the lipid phosphateoxygens beads of the system.. For \n                          more information on how to specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                  NSMEM - the number of slices of the membrane fusion cylinder. \n                      D - horizontal layer thickness, it depends on the Z separation \n                          of the membranes. \n                     R0 - normalization constant that makes 0 the initial value of \n                          the CV. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                  DSMEM - ( default=0.1 ) thickness of the slices of the membrane \n                          fusion cylinder. \n                   HMEM - ( default=0.25 ) parameter of the step function θ(x,h) for \n                          the membrane fusion. \n                     VO - ( default=0.076879 ) beads' molecular volume. \n                      H - ( default=0.1 ) parameter of the step function θ(x,h) for \n                          the fusion pore expansion. \n                   RMAX - ( default=2.5 ) to avoid effects of membrane undulations in \n                          large membranes (more than 256 lipids). \n                   XCYL - X coordinate of the fixed cylinder, if not present this \n                          will be calculated. \n                   YCYL - X coordinate of the fixed cylinder, if not present this \n                          will be calculated. \n\n"
  },
  "FUSIONPORENUCLEATIONP": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/FUSIONPORENUCLEATIONP",
    "description" : "A CV for inducing the nucleation of the fusion pore from a hemifusion stalk.",
    "module" : "membranefusion",
    "displayname" : "FUSIONPORENUCLEATIONP",
     "dois" : ["10.1021/acs.jctc.7b00106"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "UMEMBRANE" : { "type": "atoms", "description": "all the beads of the upper membrane", "multiple": 1, "actionlink": "none"},
       "LMEMBRANE" : { "type": "atoms", "description": "all the beads of the lower membrane", "multiple": 1, "actionlink": "none"},
       "TAILS" : { "type": "atoms", "description": "all the tail beads of the system", "multiple": 1, "actionlink": "none"},
       "WATERS" : { "type": "atoms", "description": "all the water beads of the system", "multiple": 1, "actionlink": "none"},
       "PHOSPHATEOXYGENS" : { "type": "atoms", "description": "all the lipid phosphateoxygens beads of the system", "multiple": 1, "actionlink": "none"},
       "NSMEM" : { "type": "compulsory", "description": "the number of slices of the membrane fusion cylinder", "multiple": 0, "actionlink": "none"},
       "DSMEM" : { "type": "optional", "description": " thickness of the slices of the membrane fusion cylinder", "multiple": 0, "actionlink": "none", "default": "0.1"},
       "HMEM" : { "type": "optional", "description": " parameter of the step function θ(x,h) for the membrane fusion", "multiple": 0, "actionlink": "none", "default": "0.25"},
       "NS" : { "type": "compulsory", "description": "the number of slices of the membrane-spanning cylinder in such a way that when the bilayers are flat and parallel the CV is equal to 0", "multiple": 0, "actionlink": "none"},
       "DS" : { "type": "optional", "description": " thickness of the slices of the membrane-spanning cylinder", "multiple": 0, "actionlink": "none", "default": "0.25"},
       "HCH" : { "type": "optional", "description": " parameter of the step function θ(x,h) for the CV", "multiple": 0, "actionlink": "none", "default": "0.25"},
       "RCYL" : { "type": "optional", "description": " the radius of the membrane-spanning cylinder", "multiple": 0, "actionlink": "none", "default": "0.8"},
       "ZETA" : { "type": "optional", "description": " parameter of the switch function ψ(x,ζ)", "multiple": 0, "actionlink": "none", "default": "0.75"},
       "ONEOVERS2C2CUTOFF" : { "type": "optional", "description": " cut off large values for the derivative of the atan2 function to avoid violate energy", "multiple": 0, "actionlink": "none", "default": "500"},
       "XCYL" : { "type": "optional", "description": "X coordinate of the fixed cylinder, if not present this will be calculated", "multiple": 0, "actionlink": "none"},
       "YCYL" : { "type": "optional", "description": "X coordinate of the fixed cylinder, if not present this will be calculated", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the value of the CV"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n              UMEMBRANE - all the beads of the upper membrane.. For more information \n                          on how to specify lists of atoms see \ref Group \n              LMEMBRANE - all the beads of the lower membrane.. For more information \n                          on how to specify lists of atoms see \ref Group \n                  TAILS - all the tail beads of the system.. For more information on \n                          how to specify lists of atoms see \ref Group \n                 WATERS - all the water beads of the system.. For more information on \n                          how to specify lists of atoms see \ref Group \n       PHOSPHATEOXYGENS - all the lipid phosphateoxygens beads of the system.. For \n                          more information on how to specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                  NSMEM - the number of slices of the membrane fusion cylinder. \n                     NS - the number of slices of the membrane-spanning cylinder in \n                          such a way that when the bilayers are flat and parallel the CV \n                          is equal to 0.2. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                  DSMEM - ( default=0.1 ) thickness of the slices of the membrane \n                          fusion cylinder. \n                   HMEM - ( default=0.25 ) parameter of the step function θ(x,h) for \n                          the membrane fusion. \n                     DS - ( default=0.25 ) thickness of the slices of the \n                          membrane-spanning cylinder. \n                    HCH - ( default=0.25 ) parameter of the step function θ(x,h) for \n                          the CV. \n                   RCYL - ( default=0.8 ) the radius of the membrane-spanning \n                          cylinder. \n                   ZETA - ( default=0.75 ) parameter of the switch function ψ(x,ζ). \n      ONEOVERS2C2CUTOFF - ( default=500 ) cut off large values for the derivative of \n                          the atan2 function to avoid violate energy. \n                   XCYL - X coordinate of the fixed cylinder, if not present this \n                          will be calculated. \n                   YCYL - X coordinate of the fixed cylinder, if not present this \n                          will be calculated. \n\n"
  },
  "GATHER_REPLICAS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/GATHER_REPLICAS",
    "description" : "Create a vector that contains the copies of the input quantities from all replicas",
    "module" : "generic",
    "displayname" : "GATHER_REPLICAS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the argument from the various replicas that you would like to gather", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix/grid"},
       "output" : {
         "rep" : {
           "flag": "default",
           "type": "scalar/vector/matrix/grid",
           "description": "the input arguments for each of the replicas"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the argument from the various replicas that you would like \n                          to gather \n"
  },
  "GEOMETRIC_PATH": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/GEOMETRIC_PATH",
    "description" : "Distance along and from a path calculated using geometric formulas",
    "module" : "mapping",
    "displayname" : "GEOMETRIC_PATH",
     "dois" : ["10.1063/1.2432340", "10.1103/PhysRevLett.109.020601"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the labels of the matrix that contains the vectors of displacements from each frame in the path", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "METRIC" : { "type": "compulsory", "description": "the method to use for computing the displacement vectors between the reference frames", "multiple": 0, "actionlink": "none"},
       "METRIC_COMPONENT" : { "type": "compulsory", "description": "if the final action in your metric contains multiple components this keyword is used to specify the component that should be used", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "compulsory", "description": "labels for actions that contain reference coordinates for each point on the path", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "PROPERTY" : { "type": "compulsory", "description": "the label of a value that contains the coordinates we are projecting these points onto", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "output" : {
         "s" : {
           "flag": "default",
           "type": "scalar",
           "description": "the position on the path"
         },
         "z" : {
           "flag": "default",
           "type": "scalar",
           "description": "the distance from the path"
         }
       }
    },
    "needs" : ["GEOMETRIC_PATH", "PDB2CONSTANT"],
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the matrix that contains the vectors of \n                          displacements from each frame in the path \n                 METRIC - the method to use for computing the displacement vectors \n                          between the reference frames \n       METRIC_COMPONENT - if the final action in your metric contains multiple \n                          components this keyword is used to specify the component that should \n                          be used \n              REFERENCE - labels for actions that contain reference coordinates for \n                          each point on the path \n               PROPERTY - the label of a value that contains the coordinates we are \n                          projecting these points onto \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n"
  },
  "GET": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/GET",
    "description" : "Get data from PLUMED for another code",
    "module" : "core",
    "displayname" : "GET",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the label of the value that you would like to GET", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix/grid"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the quantities of interest should be stored", "multiple": 0, "actionlink": "none", "default": "1"},
       "TYPE" : { "type": "compulsory", "description": " what do you want to collect for the value can be derivative/force", "multiple": 0, "actionlink": "none", "default": "value"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                 STRIDE - ( default=1 ) the frequency with which the quantities of \n                          interest should be stored \n                   TYPE - ( default=value ) what do you want to collect for the value \n                          can be derivative/force \n                    ARG - the label of the value that you would like to GET \n\n"
  },
  "GET_VOLUME_ELEMENT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/GET_VOLUME_ELEMENT",
    "description" : "Get the volume element from the input grid",
    "module" : "gridtools",
    "displayname" : "GET_VOLUME_ELEMENT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the label for function on the grid that you need the volume element for", "multiple": 0, "actionlink": "none", "argtype": "grid"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the volume element "
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label for function on the grid that you need the volume \n                          element for \n"
  },
  "GHBFIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/GHBFIX",
    "description" : "Calculate the GHBFIX interaction energy between GROUPA and GROUPB",
    "module" : "colvar",
    "displayname" : "GHBFIX",
     "dois" : ["10.1021/acs.jctc.8b00955"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "SERIAL" : { "type": "flag", "description": " Perform the calculation in serial - for debug purpose", "multiple": 0, "actionlink": "none", "default": "off"},
       "PAIR" : { "type": "flag", "description": " Pair only 1st element of the 1st group with 1st element in the second, etc", "multiple": 0, "actionlink": "none", "default": "off"},
       "NLIST" : { "type": "flag", "description": " Use a neighbor list to speed up the calculation", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "optional", "description": "The cutoff for the neighbor list", "multiple": 0, "actionlink": "none"},
       "NL_STRIDE" : { "type": "optional", "description": "The frequency with which we are updating the atoms in the neighbor list", "multiple": 0, "actionlink": "none"},
       "GROUPA" : { "type": "atoms", "description": "First list of atoms", "multiple": 1, "actionlink": "none"},
       "GROUPB" : { "type": "atoms", "description": "Second list of atoms (if empty, N*(N-1)/2 pairs in GROUPA are counted)", "multiple": 1, "actionlink": "none"},
       "ENERGY_UNITS" : { "type": "optional", "description": "the value of ENERGY_UNITS in the switching function", "multiple": 0, "actionlink": "none"},
       "TYPES" : { "type": "compulsory", "description": "the value of TYPES in the switching function", "multiple": 0, "actionlink": "none"},
       "PARAMS" : { "type": "compulsory", "description": "the value of PARAMS in the switching function", "multiple": 0, "actionlink": "none"},
       "D_MAX" : { "type": "compulsory", "description": "the value of D_MAX in the switching function", "multiple": 0, "actionlink": "none"},
       "D_0" : { "type": "compulsory", "description": "the value of D_0 in the switching function", "multiple": 0, "actionlink": "none"},
       "C" : { "type": "compulsory", "description": "the value of C in the switching function", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the GHBFIX interaction energy between the atoms in GROUPA and GROUPB"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                 GROUPA - First list of atoms. For more information on how to specify \n                          lists of atoms see \ref Group \n                 GROUPB - Second list of atoms (if empty, N*(N-1)/2 pairs in GROUPA \n                          are counted). For more information on how to specify lists of \n                          atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                  TYPES - the value of TYPES in the switching function \n                 PARAMS - the value of PARAMS in the switching function \n                  D_MAX - the value of D_MAX in the switching function \n                    D_0 - the value of D_0 in the switching function \n                      C - the value of C in the switching function \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 SERIAL - ( default=off ) Perform the calculation in serial - for \n                          debug purpose \n                   PAIR - ( default=off ) Pair only 1st element of the 1st group with \n                          1st element in the second, etc \n                  NLIST - ( default=off ) Use a neighbor list to speed up the \n                          calculation \n              NL_CUTOFF - The cutoff for the neighbor list \n              NL_STRIDE - The frequency with which we are updating the atoms in the \n                          neighbor list \n           ENERGY_UNITS - the value of ENERGY_UNITS in the switching function \n\n"
  },
  "GHOST": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/GHOST",
    "description" : "Calculate the absolute position of a ghost atom with fixed coordinates in the local reference frame formed by three atoms.",
    "module" : "vatom",
    "displayname" : "GHOST",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the list of atoms which are involved the virtual atom's definition", "multiple": 1, "actionlink": "none"},
       "COORDINATES" : { "type": "atoms", "description": "coordinates of the ghost atom in the local reference frame", "multiple": 1, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the list of atoms which are involved the virtual atom's \n                          definition. For more information on how to specify lists of atoms see \n                          \ref Group \n            COORDINATES - coordinates of the ghost atom in the local reference frame. \n                          For more information on how to specify lists of atoms see \ref \n                          Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n"
  },
  "GPATH": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/GPATH",
    "description" : "Distance along and from a path calculated using geometric formulas",
    "module" : "mapping",
    "displayname" : "GPATH",
     "dois" : ["10.1063/1.2432340", "10.1103/PhysRevLett.109.020601"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "compulsory", "description": "a pdb file containing the set of reference configurations", "multiple": 0, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " the manner in which distances are calculated", "multiple": 0, "actionlink": "none", "default": "OPTIMAL-FAST"},
       "ARG" : { "type": "optional", "description": "the list of arguments you would like to use in your definition of the path", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "COEFFICIENTS" : { "type": "optional", "description": "the coefficients of the displacements along each argument that should be used when calculating the euclidean distance", "multiple": 0, "actionlink": "none"},
       "NOSPATH" : { "type": "flag", "description": " do not calculate the spath CV", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOZPATH" : { "type": "flag", "description": " do not calculate the zpath CV", "multiple": 0, "actionlink": "none", "default": "off"},
       "GPATH" : { "type": "flag", "description": " calculate the trigonometric path", "multiple": 0, "actionlink": "none", "default": "off"},
       "PROPERTY" : { "type": "optional", "description": "read in path coordinates by finding option with this label in remark of pdb frames", "multiple": 0, "actionlink": "none"},
       "output" : {
         "s" : {
           "flag": "default",
           "type": "scalar",
           "description": "the position on the path"
         },
         "z" : {
           "flag": "default",
           "type": "scalar",
           "description": "the distance from the path"
         }
       }
    },
    "needs" : ["DRMSD", "RMSD", "LOWEST", "GPATH", "EUCLIDEAN_DISTANCE", "CUSTOM", "SUM", "COMBINE", "NORMALIZED_EUCLIDEAN_DISTANCE", "PDB2CONSTANT", "CONSTANT", "DISPLACEMENT", "GEOMETRIC_PATH"],
    "help" : "\nThe following arguments are compulsory: \n\n              REFERENCE - a pdb file containing the set of reference configurations \n                   TYPE - ( default=OPTIMAL-FAST ) the manner in which distances are \n                          calculated. More information on the different metrics that are \n                          available in PLUMED can be found in the section of the manual on \ref \n                          dists \n\nIn addition you may use the following options: \n\n                NOSPATH - ( default=off ) do not calculate the spath CV \n                NOZPATH - ( default=off ) do not calculate the zpath CV \n                  GPATH - ( default=off ) calculate the trigonometric path \n                    ARG - the list of arguments you would like to use in your \n                          definition of the path \n           COEFFICIENTS - the coefficients of the displacements along each argument \n                          that should be used when calculating the euclidean distance \n               PROPERTY - read in path coordinates by finding option with this label \n                          in remark of pdb frames \n\n"
  },
  "GPROPERTYMAP": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/GPROPERTYMAP",
    "description" : "Property maps but with a more flexible framework for the distance metric being used.",
    "module" : "mapping",
    "displayname" : "GPROPERTYMAP",
     "dois" : ["10.1063/1.2432340", "10.1063/1.3660208"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "compulsory", "description": "a pdb file containing the set of reference configurations", "multiple": 0, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " the manner in which distances are calculated", "multiple": 0, "actionlink": "none", "default": "OPTIMAL-FAST"},
       "ARG" : { "type": "optional", "description": "the list of arguments you would like to use in your definition of the path", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "COEFFICIENTS" : { "type": "optional", "description": "the coefficients of the displacements along each argument that should be used when calculating the euclidean distance", "multiple": 0, "actionlink": "none"},
       "NOSPATH" : { "type": "flag", "description": " do not calculate the spath CV", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOZPATH" : { "type": "flag", "description": " do not calculate the zpath CV", "multiple": 0, "actionlink": "none", "default": "off"},
       "GPATH" : { "type": "flag", "description": " calculate the trigonometric path", "multiple": 0, "actionlink": "none", "default": "off"},
       "PROPERTY" : { "type": "optional", "description": "the property to be used in the index", "multiple": 0, "actionlink": "none"},
       "LAMBDA" : { "type": "compulsory", "description": "the lambda parameter is needed for smoothing, is in the units of plumed", "multiple": 0, "actionlink": "none"},
       "output" : {
         "gspath" : {
           "flag": "GPATH",
           "type": "scalar",
           "description": "the position along the path calculated using the geometric formula"
         },
         "gzpath" : {
           "flag": "GPATH",
           "type": "scalar",
           "description": "the distance from the path calculated using the geometric formula"
         },
         "spath" : {
           "flag": "default",
           "type": "scalar",
           "description": "the position along the path calculated"
         },
         "zpath" : {
           "flag": "default",
           "type": "scalar",
           "description": "the distance from the path calculated"
         }
       }
    },
    "needs" : ["DRMSD", "RMSD", "LOWEST", "GPATH", "EUCLIDEAN_DISTANCE", "CUSTOM", "SUM", "COMBINE", "NORMALIZED_EUCLIDEAN_DISTANCE", "PDB2CONSTANT", "CONSTANT"],
    "help" : "\nThe following arguments are compulsory: \n\n              REFERENCE - a pdb file containing the set of reference configurations \n                   TYPE - ( default=OPTIMAL-FAST ) the manner in which distances are \n                          calculated. More information on the different metrics that are \n                          available in PLUMED can be found in the section of the manual on \ref \n                          dists \n                 LAMBDA - the lambda parameter is needed for smoothing, is in the \n                          units of plumed \n\nIn addition you may use the following options: \n\n                NOSPATH - ( default=off ) do not calculate the spath CV \n                NOZPATH - ( default=off ) do not calculate the zpath CV \n                  GPATH - ( default=off ) calculate the trigonometric path \n                    ARG - the list of arguments you would like to use in your \n                          definition of the path \n           COEFFICIENTS - the coefficients of the displacements along each argument \n                          that should be used when calculating the euclidean distance \n               PROPERTY - the property to be used in the index. This should be in the \n                          REMARK of the reference \n\n"
  },
  "GRADIENT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/GRADIENT",
    "description" : "Calculate the gradient of an input grid",
    "module" : "gridtools",
    "displayname" : "GRADIENT",
     "dois" : ["10.1021/ct4002027"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ORIGIN" : { "type": "compulsory", "description": "we will use the position of this atom as the origin in our calculation", "multiple": 0, "actionlink": "none"},
       "NBINS" : { "type": "compulsory", "description": "number of bins to use in each direction for the calculation of the gradient", "multiple": 0, "actionlink": "none"},
       "DIR" : { "type": "compulsory", "description": " the directions in which we are calculating the graident", "multiple": 0, "actionlink": "none", "default": "xyz"},
       "SIGMA" : { "type": "compulsory", "description": "the width of the function to be used for kernel density estimation", "multiple": 0, "actionlink": "none"},
       "KERNEL" : { "type": "compulsory", "description": " the type of kernel function to be used in the grids", "multiple": 0, "actionlink": "none", "default": "gaussian-bin"},
       "ATOMS" : { "type": "compulsory", "description": "calculate the gradient of these atoms", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the desired gradient"
         }
       }
    },
    "needs" : ["DISTANCES", "KDE", "INTERPOLATE_GRID", "CUSTOM", "SUM", "COMBINE"],
    "help" : "\nThe following arguments are compulsory: \n\n                 ORIGIN - we will use the position of this atom as the origin in our \n                          calculation \n                  NBINS - number of bins to use in each direction for the calculation \n                          of the gradient \n                    DIR - ( default=xyz ) the directions in which we are calculating \n                          the graident. Should be x, y, z, xy, xz, yz or xyz \n                  SIGMA - the width of the function to be used for kernel density \n                          estimation \n                 KERNEL - ( default=gaussian-bin ) the type of kernel function to be \n                          used in the grids \n                  ATOMS - calculate the gradient of these atoms \n"
  },
  "GROUP": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/GROUP",
    "description" : "Define a group of atoms so that a particular list of atoms can be referenced with a single label in definitions of CVs or virtual atoms.",
    "module" : "core",
    "displayname" : "GROUP",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the numerical indexes for the set of atoms in the group", "multiple": 1, "actionlink": "none"},
       "REMOVE" : { "type": "atoms", "description": "remove these atoms from the list", "multiple": 1, "actionlink": "none"},
       "SORT" : { "type": "flag", "description": " sort the resulting list", "multiple": 0, "actionlink": "none", "default": "off"},
       "UNIQUE" : { "type": "flag", "description": " sort atoms and remove duplicated ones", "multiple": 0, "actionlink": "none", "default": "off"},
       "NDX_FILE" : { "type": "optional", "description": "the name of index file (gromacs syntax)", "multiple": 0, "actionlink": "none"},
       "NDX_GROUP" : { "type": "optional", "description": "the name of the group to be imported (gromacs syntax) - first group found is used by default", "multiple": 0, "actionlink": "none"}
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the numerical indexes for the set of atoms in the group. \n                          For more information on how to specify lists of atoms see \ref \n                          Group \n                 REMOVE - remove these atoms from the list. For more information on \n                          how to specify lists of atoms see \ref Group \n\nThe following options are available\n\n                   SORT - ( default=off ) sort the resulting list \n                 UNIQUE - ( default=off ) sort atoms and remove duplicated ones \n               NDX_FILE - the name of index file (gromacs syntax) \n              NDX_GROUP - the name of the group to be imported (gromacs syntax) - \n                          first group found is used by default \n\n"
  },
  "GSYMFUNC_THREEBODY": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/GSYMFUNC_THREEBODY",
    "description" : "Calculate functions of the coordinates of the coordinates of all pairs of bonds in the first coordination sphere of an atom",
    "module" : "symfunc",
    "displayname" : "GSYMFUNC_THREEBODY",
     "dois" : ["10.1063/1.3553717"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "three matrices containing the bond vectors of interest", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "WEIGHT" : { "type": "compulsory", "description": "the matrix that contains the weights that should be used for each connection", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "FUNCTION" : { "type": "optional", "description": "the parameters of the function you would like to compute", "multiple": 1, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         ".#!custom" : {
           "flag": "default",
           "type": "scalar",
           "description": "the names of the output components for this action depend on the actions input file see the example inputs below for details"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - three matrices containing the bond vectors of interest \n                 WEIGHT - the matrix that contains the weights that should be used \n                          for each connection \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n               FUNCTION - the parameters of the function you would like to compute. \n                          You can use multiple instances of this keyword i.e. FUNCTION1, \n                          FUNCTION2, FUNCTION3... \n\n"
  },
  "GYRATION": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/GYRATION",
    "description" : "Calculate the radius of gyration, or other properties related to it.",
    "module" : "colvar",
    "displayname" : "GYRATION",
     "dois" : ["10.1021/jp2065612"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the group of atoms that you are calculating the Gyration Tensor for", "multiple": 1, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " The type of calculation relative to the Gyration Tensor you want to perform", "multiple": 0, "actionlink": "none", "default": "RADIUS"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "WEIGHTS" : { "type": "optional", "description": "what weights should be used when calculating the center", "multiple": 0, "actionlink": "none"},
       "PHASES" : { "type": "flag", "description": " use trigonometric phases when computing position of center of mass", "multiple": 0, "actionlink": "none", "default": "off"},
       "MASS" : { "type": "flag", "description": " calculate the center of mass", "multiple": 0, "actionlink": "none", "default": "off"},
       "MASS_WEIGHTED" : { "type": "flag", "description": " set the masses of all the atoms equal to one", "multiple": 0, "actionlink": "none", "default": "off"},
       "UNORMALIZED" : { "type": "flag", "description": " do not divide by the sum of the weights", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the radius that was computed from the weights"
         }
       }
    },
    "needs" : ["CENTER", "CONSTANT", "ONES", "MASS", "DISTANCE", "COVARIANCE_MATRIX", "SELECT_COMPONENTS", "SUM", "CUSTOM", "DIAGONALIZE"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the group of atoms that you are calculating the Gyration \n                          Tensor for. For more information on how to specify lists of atoms \n                          see \ref Group \n\nThe following arguments are compulsory: \n\n                   TYPE - ( default=RADIUS ) The type of calculation relative to the \n                          Gyration Tensor you want to perform \n\nIn addition you may use the following options: \n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 PHASES - ( default=off ) use trigonometric phases when computing \n                          position of center of mass \n                   MASS - ( default=off ) calculate the center of mass \n          MASS_WEIGHTED - ( default=off ) set the masses of all the atoms equal to \n                          one \n            UNORMALIZED - ( default=off ) do not divide by the sum of the weights \n                WEIGHTS - what weights should be used when calculating the center. If \n                          this keyword is not present the geometric center is computed. If \n                          WEIGHTS=@Masses is used the center of mass is computed. If WEIGHTS=@charges \n                          the center of charge is computed. If the label of an action is \n                          provided PLUMED assumes that that action calculates a list of \n                          symmetry functions that can be used as weights. Lastly, an explicit \n                          list of numbers to use as weights can be provided \n\n"
  },
  "GYRATION_FAST": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/GYRATION_FAST",
    "description" : "",
    "module" : "colvar",
    "displayname" : "GYRATION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the group of atoms that you are calculating the Gyration Tensor for", "multiple": 1, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " The type of calculation relative to the Gyration Tensor you want to perform", "multiple": 0, "actionlink": "none", "default": "RADIUS"},
       "MASS_WEIGHTED" : { "type": "flag", "description": " set the masses of all the atoms equal to one", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the radius of gyration"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the group of atoms that you are calculating the Gyration \n                          Tensor for. For more information on how to specify lists of atoms \n                          see \ref Group \n\nThe following arguments are compulsory: \n\n                   TYPE - ( default=RADIUS ) The type of calculation relative to the \n                          Gyration Tensor you want to perform \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n          MASS_WEIGHTED - ( default=off ) set the masses of all the atoms equal to \n                          one \n"
  },
  "GYRATION_TENSOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/GYRATION_TENSOR",
    "description" : "Calculate the gyration tensor using a user specified vector of weights",
    "module" : "colvar",
    "displayname" : "GYRATION_TENSOR",
     "dois" : ["10.1021/jp2065612"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the group of atoms that you are calculating the Gyration Tensor for", "multiple": 1, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " The type of calculation relative to the Gyration Tensor you want to perform", "multiple": 0, "actionlink": "none", "default": "RADIUS"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "WEIGHTS" : { "type": "optional", "description": "what weights should be used when calculating the center", "multiple": 0, "actionlink": "none"},
       "PHASES" : { "type": "flag", "description": " use trigonometric phases when computing position of center of mass", "multiple": 0, "actionlink": "none", "default": "off"},
       "MASS" : { "type": "flag", "description": " calculate the center of mass", "multiple": 0, "actionlink": "none", "default": "off"},
       "MASS_WEIGHTED" : { "type": "flag", "description": " set the masses of all the atoms equal to one", "multiple": 0, "actionlink": "none", "default": "off"},
       "UNORMALIZED" : { "type": "flag", "description": " do not divide by the sum of the weights", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "the gyration tensor that was computed from the weights"
         }
       }
    },
    "needs" : ["CENTER", "CONSTANT", "ONES", "MASS", "DISTANCE", "COVARIANCE_MATRIX", "SELECT_COMPONENTS", "SUM", "CUSTOM", "DIAGONALIZE"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the group of atoms that you are calculating the Gyration \n                          Tensor for. For more information on how to specify lists of atoms \n                          see \ref Group \n\nThe following arguments are compulsory: \n\n                   TYPE - ( default=RADIUS ) The type of calculation relative to the \n                          Gyration Tensor you want to perform \n\nIn addition you may use the following options: \n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 PHASES - ( default=off ) use trigonometric phases when computing \n                          position of center of mass \n                   MASS - ( default=off ) calculate the center of mass \n          MASS_WEIGHTED - ( default=off ) set the masses of all the atoms equal to \n                          one \n            UNORMALIZED - ( default=off ) do not divide by the sum of the weights \n                WEIGHTS - what weights should be used when calculating the center. If \n                          this keyword is not present the geometric center is computed. If \n                          WEIGHTS=@Masses is used the center of mass is computed. If WEIGHTS=@charges \n                          the center of charge is computed. If the label of an action is \n                          provided PLUMED assumes that that action calculates a list of \n                          symmetry functions that can be used as weights. Lastly, an explicit \n                          list of numbers to use as weights can be provided \n\n"
  },
  "HBOND_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/HBOND_MATRIX",
    "description" : "Adjacency matrix in which two atoms are adjacent if there is a hydrogen bond between them.",
    "module" : "adjmat",
    "displayname" : "HBOND_MATRIX",
     "dois" : ["10.1021/acs.jctc.6b01073"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "a vector that is used to used to determine which rows of the adjancency matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "GROUP" : { "type": "atoms", "description": "the atoms for which you would like to calculate the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "GROUPA" : { "type": "atoms", "description": "when you are calculating the adjacency matrix between two sets of atoms this keyword is used to specify the atoms along with the keyword GROUPB", "multiple": 1, "actionlink": "none"},
       "GROUPB" : { "type": "atoms", "description": "when you are calculating the adjacency matrix between two sets of atoms this keyword is used to specify the atoms along with the keyword GROUPA", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the atoms for which you would like to calculate the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "COMPONENTS" : { "type": "flag", "description": " also calculate the components of the vector connecting the atoms in the contact matrix", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOPBC" : { "type": "flag", "description": " don't use pbc", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "compulsory", "description": " The cutoff for the neighbor list", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "NL_STRIDE" : { "type": "compulsory", "description": " The frequency with which we are updating the atoms in the neighbor list", "multiple": 0, "actionlink": "none", "default": "1"},
       "DONORS" : { "type": "atoms", "description": "The list of atoms which can donate a hydrogen bond", "multiple": 1, "actionlink": "none"},
       "ACCEPTORS" : { "type": "atoms", "description": "The list of atoms which can accept a hydrogen bond", "multiple": 1, "actionlink": "none"},
       "HYDROGENS" : { "type": "atoms", "description": "The list of atoms that can form the bridge between the two interesting parts of the structure", "multiple": 1, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "The switchingfunction that specifies how close a pair of atoms must be together for there to be a hydrogen bond between them", "multiple": 1, "actionlink": "LESS_THAN"},
       "HSWITCH" : { "type": "optional", "description": "The switchingfunction that specifies how close the hydrogen must be to the donor atom of the hydrogen bond for it to be considered a hydrogen bond", "multiple": 1, "actionlink": "LESS_THAN"},
       "ASWITCH" : { "type": "optional", "description": "A switchingfunction that is used to specify what the angle between the vector connecting the donor atom to the acceptor atom and the vector connecting the donor atom to the hydrogen must be in order for it considered to be a hydrogen bond", "multiple": 1, "actionlink": "LESS_THAN"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "w" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "a matrix containing the weights for the bonds between each pair of atoms"
         },
         "x" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the x axis"
         },
         "y" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the y axis"
         },
         "z" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the z axis"
         },
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "a matrix containing the weights for the bonds between each pair of atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - the atoms for which you would like to calculate the \n                          adjacency matrix. For more information on how to specify lists of \n                          atoms see \ref Group \n                 GROUPA - when you are calculating the adjacency matrix between two \n                          sets of atoms this keyword is used to specify the atoms along \n                          with the keyword GROUPB. For more information on how to specify \n                          lists of atoms see \ref Group \n                 GROUPB - when you are calculating the adjacency matrix between two \n                          sets of atoms this keyword is used to specify the atoms along \n                          with the keyword GROUPA. For more information on how to specify \n                          lists of atoms see \ref Group \n                  ATOMS - the atoms for which you would like to calculate the \n                          adjacency matrix. This is a depracated syntax that is equivalent to \n                          GROUP. You are strongly recommened to use GROUP instead of ATOMS. \n                 DONORS - The list of atoms which can donate a hydrogen bond \n              ACCEPTORS - The list of atoms which can accept a hydrogen bond \n              HYDROGENS - The list of atoms that can form the bridge between the two \n                          interesting parts of the structure.. For more information on how to \n                          specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n              NL_CUTOFF - ( default=0.0 ) The cutoff for the neighbor list. A value \n                          of 0 means we are not using a neighbor list \n              NL_STRIDE - ( default=1 ) The frequency with which we are updating the \n                          atoms in the neighbor list \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n             COMPONENTS - ( default=off ) also calculate the components of the vector \n                          connecting the atoms in the contact matrix \n                  NOPBC - ( default=off ) don't use pbc \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a vector that is used to used to determine which rows of \n                          the adjancency matrix to compute \n                 SWITCH - The switchingfunction that specifies how close a pair of \n                          atoms must be together for there to be a hydrogen bond between \n                          them. You can use multiple instances of this keyword i.e. \n                          SWITCH1, SWITCH2, SWITCH3... \n                HSWITCH - The switchingfunction that specifies how close the hydrogen \n                          must be to the donor atom of the hydrogen bond for it to be \n                          considered a hydrogen bond. You can use multiple instances of this \n                          keyword i.e. HSWITCH1, HSWITCH2, HSWITCH3... \n                ASWITCH - A switchingfunction that is used to specify what the angle \n                          between the vector connecting the donor atom to the acceptor atom \n                          and the vector connecting the donor atom to the hydrogen must \n                          be in order for it considered to be a hydrogen bond. You can \n                          use multiple instances of this keyword i.e. ASWITCH1, ASWITCH2, \n                          ASWITCH3... \n\n"
  },
  "HBPAMM_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/HBPAMM_MATRIX",
    "description" : "Adjacency matrix in which two electronegative atoms are adjacent if they are hydrogen bonded",
    "module" : "pamm",
    "displayname" : "HBPAMM_MATRIX",
     "dois" : ["10.1063/1.4900655", "10.1021/acs.jctc.7b00993", "10.1021/acs.jctc.6b01073"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "a vector that is used to used to determine which rows of the adjancency matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "GROUP" : { "type": "atoms", "description": "the atoms for which you would like to calculate the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "GROUPA" : { "type": "atoms", "description": "when you are calculating the adjacency matrix between two sets of atoms this keyword is used to specify the atoms along with the keyword GROUPB", "multiple": 1, "actionlink": "none"},
       "GROUPB" : { "type": "atoms", "description": "when you are calculating the adjacency matrix between two sets of atoms this keyword is used to specify the atoms along with the keyword GROUPA", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the atoms for which you would like to calculate the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "COMPONENTS" : { "type": "flag", "description": " also calculate the components of the vector connecting the atoms in the contact matrix", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOPBC" : { "type": "flag", "description": " don't use pbc", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "compulsory", "description": " The cutoff for the neighbor list", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "NL_STRIDE" : { "type": "compulsory", "description": " The frequency with which we are updating the atoms in the neighbor list", "multiple": 0, "actionlink": "none", "default": "1"},
       "GROUPC" : { "type": "atoms", "description": "a group of atoms that must be summed over when calculating each element of the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "ORDER" : { "type": "compulsory", "description": " the order in which the groups are specified in the input", "multiple": 0, "actionlink": "none", "default": "dah"},
       "CLUSTERS" : { "type": "compulsory", "description": "the name of the file that contains the definitions of all the kernels for PAMM", "multiple": 0, "actionlink": "none"},
       "REGULARISE" : { "type": "compulsory", "description": " don't allow the denominator to be smaller then this value", "multiple": 0, "actionlink": "none", "default": "0.001"},
       "GAUSS_CUTOFF" : { "type": "compulsory", "description": " the cutoff at which to stop evaluating the kernel function is set equal to sqrt(2*x)*(max(adc)+cov(adc))", "multiple": 0, "actionlink": "none", "default": "6.25"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "w" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "a matrix containing the weights for the bonds between each pair of atoms"
         },
         "x" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the x axis"
         },
         "y" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the y axis"
         },
         "z" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the z axis"
         },
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "a matrix containing the weights for the bonds between each pair of atoms"
         }
       }
    },
    "needs" : ["PAMM", "ONES", "MATRIX_VECTOR_PRODUCT"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - the atoms for which you would like to calculate the \n                          adjacency matrix. For more information on how to specify lists of \n                          atoms see \ref Group \n                 GROUPA - when you are calculating the adjacency matrix between two \n                          sets of atoms this keyword is used to specify the atoms along \n                          with the keyword GROUPB. For more information on how to specify \n                          lists of atoms see \ref Group \n                 GROUPB - when you are calculating the adjacency matrix between two \n                          sets of atoms this keyword is used to specify the atoms along \n                          with the keyword GROUPA. For more information on how to specify \n                          lists of atoms see \ref Group \n                  ATOMS - the atoms for which you would like to calculate the \n                          adjacency matrix. This is a depracated syntax that is equivalent to \n                          GROUP. You are strongly recommened to use GROUP instead of ATOMS. \n                 GROUPC - a group of atoms that must be summed over when calculating \n                          each element of the adjacency matrix. For more information on \n                          how to specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n              NL_CUTOFF - ( default=0.0 ) The cutoff for the neighbor list. A value \n                          of 0 means we are not using a neighbor list \n              NL_STRIDE - ( default=1 ) The frequency with which we are updating the \n                          atoms in the neighbor list \n                  ORDER - ( default=dah ) the order in which the groups are specified \n                          in the input. Can be dah (donor/acceptor/hydrogens), adh \n                          (acceptor/donor/hydrogens) or hda (hydrogens/donor/acceptors \n               CLUSTERS - the name of the file that contains the definitions of all \n                          the kernels for PAMM \n             REGULARISE - ( default=0.001 ) don't allow the denominator to be smaller \n                          then this value \n           GAUSS_CUTOFF - ( default=6.25 ) the cutoff at which to stop evaluating the \n                          kernel function is set equal to sqrt(2*x)*(max(adc)+cov(adc)) \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n             COMPONENTS - ( default=off ) also calculate the components of the vector \n                          connecting the atoms in the contact matrix \n                  NOPBC - ( default=off ) don't use pbc \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a vector that is used to used to determine which rows of \n                          the adjancency matrix to compute \n\n"
  },
  "HBPAMM_SA": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/HBPAMM_SA",
    "description" : "Calculate the number of hydrogen bonds each acceptor participates in using the HBPamm method",
    "module" : "pamm",
    "displayname" : "HBPAMM_SA",
     "dois" : ["10.1063/1.4900655", "10.1021/acs.jctc.7b00993", "10.1021/acs.jctc.6b01073"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "a vector that is used to used to determine which rows of the adjancency matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "ATOMS" : { "type": "atoms", "description": "the atoms for which you would like to calculate the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " don't use pbc", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "compulsory", "description": " The cutoff for the neighbor list", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "NL_STRIDE" : { "type": "compulsory", "description": " The frequency with which we are updating the atoms in the neighbor list", "multiple": 0, "actionlink": "none", "default": "1"},
       "GROUPC" : { "type": "atoms", "description": "a group of atoms that must be summed over when calculating each element of the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "ORDER" : { "type": "compulsory", "description": " the order in which the groups are specified in the input", "multiple": 0, "actionlink": "none", "default": "dah"},
       "CLUSTERS" : { "type": "compulsory", "description": "the name of the file that contains the definitions of all the kernels for PAMM", "multiple": 0, "actionlink": "none"},
       "REGULARISE" : { "type": "compulsory", "description": " don't allow the denominator to be smaller then this value", "multiple": 0, "actionlink": "none", "default": "0.001"},
       "GAUSS_CUTOFF" : { "type": "compulsory", "description": " the cutoff at which to stop evaluating the kernel function is set equal to sqrt(2*x)*(max(adc)+cov(adc))", "multiple": 0, "actionlink": "none", "default": "6.25"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "SITES" : { "type": "optional", "description": "The list of atoms which can be part of a hydrogen bond", "multiple": 0, "actionlink": "none"},
       "DONORS" : { "type": "optional", "description": "The list of atoms which can donate a hydrogen bond", "multiple": 0, "actionlink": "none"},
       "ACCEPTORS" : { "type": "optional", "description": "The list of atoms which can accept a hydrogen bond", "multiple": 0, "actionlink": "none"},
       "HYDROGENS" : { "type": "compulsory", "description": "The list of hydrogen atoms that can form part of a hydrogen bond", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "a vector specifiying the number of hydrogen bonds each of the specified atoms participates within"
         },
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         }
       }
    },
    "needs" : ["PAMM", "ONES", "MATRIX_VECTOR_PRODUCT", "SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "HBPAMM_MATRIX"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the atoms for which you would like to calculate the \n                          adjacency matrix. This is a depracated syntax that is equivalent to \n                          GROUP. You are strongly recommened to use GROUP instead of ATOMS. \n                 GROUPC - a group of atoms that must be summed over when calculating \n                          each element of the adjacency matrix. For more information on \n                          how to specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n              NL_CUTOFF - ( default=0.0 ) The cutoff for the neighbor list. A value \n                          of 0 means we are not using a neighbor list \n              NL_STRIDE - ( default=1 ) The frequency with which we are updating the \n                          atoms in the neighbor list \n                  ORDER - ( default=dah ) the order in which the groups are specified \n                          in the input. Can be dah (donor/acceptor/hydrogens), adh \n                          (acceptor/donor/hydrogens) or hda (hydrogens/donor/acceptors \n               CLUSTERS - the name of the file that contains the definitions of all \n                          the kernels for PAMM \n             REGULARISE - ( default=0.001 ) don't allow the denominator to be smaller \n                          then this value \n           GAUSS_CUTOFF - ( default=6.25 ) the cutoff at which to stop evaluating the \n                          kernel function is set equal to sqrt(2*x)*(max(adc)+cov(adc)) \n              HYDROGENS - The list of hydrogen atoms that can form part of a hydrogen \n                          bond. The atoms must be specified using a comma separated list, \n                          an index range or by using a \ref GROUP \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                  NOPBC - ( default=off ) don't use pbc \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                   MASK - a vector that is used to used to determine which rows of \n                          the adjancency matrix to compute \n                  SITES - The list of atoms which can be part of a hydrogen bond. \n                          When this command is used the set of atoms that can donate a \n                          hydrogen bond is assumed to be the same as the set of atoms that can \n                          form hydrogen bonds. The atoms involved must be specifiedas a \n                          list of labels of \ref mcolv or labels of a \ref \n                          multicolvarfunction actions. If you would just like to use the atomic positions \n                          you can use a \ref DENSITY command to specify a group of atoms. \n                          Specifying your atomic positions using labels of other \ref mcolv or \n                          \ref multicolvarfunction commands is useful, however, as you can \n                          then exploit a much wider variety of functions of the contact \n                          matrix as described in \ref contactmatrix \n                 DONORS - The list of atoms which can donate a hydrogen bond. The \n                          atoms involved must be specified as a list of labels of \ref \n                          mcolv or labels of a \ref multicolvarfunction actions. If you \n                          would just like to use the atomic positions you can use a \ref \n                          DENSITY command to specify a group of atoms. Specifying your atomic \n                          positions using labels of other \ref mcolv or \ref \n                          multicolvarfunction commands is useful, however, as you can then exploit a much \n                          wider variety of functions of the contact matrix as described in \n                          \ref contactmatrix \n              ACCEPTORS - The list of atoms which can accept a hydrogen bond. The \n                          atoms involved must be specified as a list of labels of \ref \n                          mcolv or labels of a \ref multicolvarfunction actions. If you \n                          would just like to use the atomic positions you can use a \ref \n                          DENSITY command to specify a group of atoms. Specifying your atomic \n                          positions using labels of other \ref mcolv or \ref \n                          multicolvarfunction commands is useful, however, as you can then exploit a much \n                          wider variety of functions of the contact matrix as described in \n                          \ref contactmatrix \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "HBPAMM_SD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/HBPAMM_SD",
    "description" : "Calculate the number of hydrogen bonds each donor participates in using the HBPamm method",
    "module" : "pamm",
    "displayname" : "HBPAMM_SD",
     "dois" : ["10.1063/1.4900655", "10.1021/acs.jctc.7b00993", "10.1021/acs.jctc.6b01073"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "a vector that is used to used to determine which rows of the adjancency matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "ATOMS" : { "type": "atoms", "description": "the atoms for which you would like to calculate the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " don't use pbc", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "compulsory", "description": " The cutoff for the neighbor list", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "NL_STRIDE" : { "type": "compulsory", "description": " The frequency with which we are updating the atoms in the neighbor list", "multiple": 0, "actionlink": "none", "default": "1"},
       "GROUPC" : { "type": "atoms", "description": "a group of atoms that must be summed over when calculating each element of the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "ORDER" : { "type": "compulsory", "description": " the order in which the groups are specified in the input", "multiple": 0, "actionlink": "none", "default": "dah"},
       "CLUSTERS" : { "type": "compulsory", "description": "the name of the file that contains the definitions of all the kernels for PAMM", "multiple": 0, "actionlink": "none"},
       "REGULARISE" : { "type": "compulsory", "description": " don't allow the denominator to be smaller then this value", "multiple": 0, "actionlink": "none", "default": "0.001"},
       "GAUSS_CUTOFF" : { "type": "compulsory", "description": " the cutoff at which to stop evaluating the kernel function is set equal to sqrt(2*x)*(max(adc)+cov(adc))", "multiple": 0, "actionlink": "none", "default": "6.25"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "SITES" : { "type": "optional", "description": "The list of atoms which can be part of a hydrogen bond", "multiple": 0, "actionlink": "none"},
       "DONORS" : { "type": "optional", "description": "The list of atoms which can donate a hydrogen bond", "multiple": 0, "actionlink": "none"},
       "ACCEPTORS" : { "type": "optional", "description": "The list of atoms which can accept a hydrogen bond", "multiple": 0, "actionlink": "none"},
       "HYDROGENS" : { "type": "compulsory", "description": "The list of hydrogen atoms that can form part of a hydrogen bond", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "a vector specifiying the number of hydrogen bonds each of the specified atoms participates within"
         },
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         }
       }
    },
    "needs" : ["PAMM", "ONES", "MATRIX_VECTOR_PRODUCT", "SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "HBPAMM_MATRIX"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the atoms for which you would like to calculate the \n                          adjacency matrix. This is a depracated syntax that is equivalent to \n                          GROUP. You are strongly recommened to use GROUP instead of ATOMS. \n                 GROUPC - a group of atoms that must be summed over when calculating \n                          each element of the adjacency matrix. For more information on \n                          how to specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n              NL_CUTOFF - ( default=0.0 ) The cutoff for the neighbor list. A value \n                          of 0 means we are not using a neighbor list \n              NL_STRIDE - ( default=1 ) The frequency with which we are updating the \n                          atoms in the neighbor list \n                  ORDER - ( default=dah ) the order in which the groups are specified \n                          in the input. Can be dah (donor/acceptor/hydrogens), adh \n                          (acceptor/donor/hydrogens) or hda (hydrogens/donor/acceptors \n               CLUSTERS - the name of the file that contains the definitions of all \n                          the kernels for PAMM \n             REGULARISE - ( default=0.001 ) don't allow the denominator to be smaller \n                          then this value \n           GAUSS_CUTOFF - ( default=6.25 ) the cutoff at which to stop evaluating the \n                          kernel function is set equal to sqrt(2*x)*(max(adc)+cov(adc)) \n              HYDROGENS - The list of hydrogen atoms that can form part of a hydrogen \n                          bond. The atoms must be specified using a comma separated list, \n                          an index range or by using a \ref GROUP \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                  NOPBC - ( default=off ) don't use pbc \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                   MASK - a vector that is used to used to determine which rows of \n                          the adjancency matrix to compute \n                  SITES - The list of atoms which can be part of a hydrogen bond. \n                          When this command is used the set of atoms that can donate a \n                          hydrogen bond is assumed to be the same as the set of atoms that can \n                          form hydrogen bonds. The atoms involved must be specifiedas a \n                          list of labels of \ref mcolv or labels of a \ref \n                          multicolvarfunction actions. If you would just like to use the atomic positions \n                          you can use a \ref DENSITY command to specify a group of atoms. \n                          Specifying your atomic positions using labels of other \ref mcolv or \n                          \ref multicolvarfunction commands is useful, however, as you can \n                          then exploit a much wider variety of functions of the contact \n                          matrix as described in \ref contactmatrix \n                 DONORS - The list of atoms which can donate a hydrogen bond. The \n                          atoms involved must be specified as a list of labels of \ref \n                          mcolv or labels of a \ref multicolvarfunction actions. If you \n                          would just like to use the atomic positions you can use a \ref \n                          DENSITY command to specify a group of atoms. Specifying your atomic \n                          positions using labels of other \ref mcolv or \ref \n                          multicolvarfunction commands is useful, however, as you can then exploit a much \n                          wider variety of functions of the contact matrix as described in \n                          \ref contactmatrix \n              ACCEPTORS - The list of atoms which can accept a hydrogen bond. The \n                          atoms involved must be specified as a list of labels of \ref \n                          mcolv or labels of a \ref multicolvarfunction actions. If you \n                          would just like to use the atomic positions you can use a \ref \n                          DENSITY command to specify a group of atoms. Specifying your atomic \n                          positions using labels of other \ref mcolv or \ref \n                          multicolvarfunction commands is useful, however, as you can then exploit a much \n                          wider variety of functions of the contact matrix as described in \n                          \ref contactmatrix \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "HBPAMM_SH": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/HBPAMM_SH",
    "description" : "Calculate the number of hydrogen bonds each hydrogen participates in using the HBPamm method",
    "module" : "pamm",
    "displayname" : "HBPAMM_SH",
     "dois" : ["10.1063/1.4900655", "10.1021/acs.jctc.7b00993", "10.1021/acs.jctc.6b01073"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "a vector that is used to used to determine which rows of the adjancency matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "ATOMS" : { "type": "atoms", "description": "the atoms for which you would like to calculate the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " don't use pbc", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "compulsory", "description": " The cutoff for the neighbor list", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "NL_STRIDE" : { "type": "compulsory", "description": " The frequency with which we are updating the atoms in the neighbor list", "multiple": 0, "actionlink": "none", "default": "1"},
       "GROUPC" : { "type": "atoms", "description": "a group of atoms that must be summed over when calculating each element of the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "ORDER" : { "type": "compulsory", "description": " the order in which the groups are specified in the input", "multiple": 0, "actionlink": "none", "default": "dah"},
       "CLUSTERS" : { "type": "compulsory", "description": "the name of the file that contains the definitions of all the kernels for PAMM", "multiple": 0, "actionlink": "none"},
       "REGULARISE" : { "type": "compulsory", "description": " don't allow the denominator to be smaller then this value", "multiple": 0, "actionlink": "none", "default": "0.001"},
       "GAUSS_CUTOFF" : { "type": "compulsory", "description": " the cutoff at which to stop evaluating the kernel function is set equal to sqrt(2*x)*(max(adc)+cov(adc))", "multiple": 0, "actionlink": "none", "default": "6.25"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "SITES" : { "type": "optional", "description": "The list of atoms which can be part of a hydrogen bond", "multiple": 0, "actionlink": "none"},
       "DONORS" : { "type": "optional", "description": "The list of atoms which can donate a hydrogen bond", "multiple": 0, "actionlink": "none"},
       "ACCEPTORS" : { "type": "optional", "description": "The list of atoms which can accept a hydrogen bond", "multiple": 0, "actionlink": "none"},
       "HYDROGENS" : { "type": "compulsory", "description": "The list of hydrogen atoms that can form part of a hydrogen bond", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "a vector specifiying the number of hydrogen bonds each of the specified atoms participates within"
         },
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         }
       }
    },
    "needs" : ["PAMM", "ONES", "MATRIX_VECTOR_PRODUCT", "SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "HBPAMM_MATRIX"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the atoms for which you would like to calculate the \n                          adjacency matrix. This is a depracated syntax that is equivalent to \n                          GROUP. You are strongly recommened to use GROUP instead of ATOMS. \n                 GROUPC - a group of atoms that must be summed over when calculating \n                          each element of the adjacency matrix. For more information on \n                          how to specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n              NL_CUTOFF - ( default=0.0 ) The cutoff for the neighbor list. A value \n                          of 0 means we are not using a neighbor list \n              NL_STRIDE - ( default=1 ) The frequency with which we are updating the \n                          atoms in the neighbor list \n                  ORDER - ( default=dah ) the order in which the groups are specified \n                          in the input. Can be dah (donor/acceptor/hydrogens), adh \n                          (acceptor/donor/hydrogens) or hda (hydrogens/donor/acceptors \n               CLUSTERS - the name of the file that contains the definitions of all \n                          the kernels for PAMM \n             REGULARISE - ( default=0.001 ) don't allow the denominator to be smaller \n                          then this value \n           GAUSS_CUTOFF - ( default=6.25 ) the cutoff at which to stop evaluating the \n                          kernel function is set equal to sqrt(2*x)*(max(adc)+cov(adc)) \n              HYDROGENS - The list of hydrogen atoms that can form part of a hydrogen \n                          bond. The atoms must be specified using a comma separated list, \n                          an index range or by using a \ref GROUP \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                  NOPBC - ( default=off ) don't use pbc \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                   MASK - a vector that is used to used to determine which rows of \n                          the adjancency matrix to compute \n                  SITES - The list of atoms which can be part of a hydrogen bond. \n                          When this command is used the set of atoms that can donate a \n                          hydrogen bond is assumed to be the same as the set of atoms that can \n                          form hydrogen bonds. The atoms involved must be specifiedas a \n                          list of labels of \ref mcolv or labels of a \ref \n                          multicolvarfunction actions. If you would just like to use the atomic positions \n                          you can use a \ref DENSITY command to specify a group of atoms. \n                          Specifying your atomic positions using labels of other \ref mcolv or \n                          \ref multicolvarfunction commands is useful, however, as you can \n                          then exploit a much wider variety of functions of the contact \n                          matrix as described in \ref contactmatrix \n                 DONORS - The list of atoms which can donate a hydrogen bond. The \n                          atoms involved must be specified as a list of labels of \ref \n                          mcolv or labels of a \ref multicolvarfunction actions. If you \n                          would just like to use the atomic positions you can use a \ref \n                          DENSITY command to specify a group of atoms. Specifying your atomic \n                          positions using labels of other \ref mcolv or \ref \n                          multicolvarfunction commands is useful, however, as you can then exploit a much \n                          wider variety of functions of the contact matrix as described in \n                          \ref contactmatrix \n              ACCEPTORS - The list of atoms which can accept a hydrogen bond. The \n                          atoms involved must be specified as a list of labels of \ref \n                          mcolv or labels of a \ref multicolvarfunction actions. If you \n                          would just like to use the atomic positions you can use a \ref \n                          DENSITY command to specify a group of atoms. Specifying your atomic \n                          positions using labels of other \ref mcolv or \ref \n                          multicolvarfunction commands is useful, however, as you can then exploit a much \n                          wider variety of functions of the contact matrix as described in \n                          \ref contactmatrix \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "HEXACTIC_PARAMETER": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/HEXACTIC_PARAMETER",
    "description" : "Calculate the hexatic order parameter",
    "module" : "symfunc",
    "displayname" : "HEXACTIC_PARAMETER",
     "dois" : ["10.1021/ct500320c", "https://journals.aps.org/prl/abstract/10.1103/PhysRevLett.99.215701"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated and the atoms that can be in the environments", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "the list of atoms that can be in the environments of each of the atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "the switching function that it used in the construction of the contact matrix", "multiple": 0, "actionlink": "LESS_THAN"},
       "MASK" : { "type": "optional", "description": "the label for a vector that is used to determine which rows of the matrix are computed", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "PLANE" : { "type": "compulsory", "description": "the plane to use when calculating the value of the order parameter should be xy, xz or yz", "multiple": 0, "actionlink": "none"},
       "VMEAN" : { "type": "flag", "description": " calculate the norm of the mean vector", "multiple": 0, "actionlink": "none", "default": "off"},
       "VSUM" : { "type": "flag", "description": " calculate the norm of the sum of all the vectors", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "the value of the cylindrical harmonic for each bond vector specified"
         },
         "_vmean" : {
           "flag": "VMEAN",
           "type": "scalar",
           "description": "the norm of the mean vector"
         },
         "_vsum" : {
           "flag": "VSUM",
           "type": "scalar",
           "description": "the norm of the mean vector"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "GROUP", "CYLINDRICAL_HARMONIC_MATRIX", "ONES", "MATRIX_VECTOR_PRODUCT", "COMBINE"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - the list of atoms for which the symmetry function is being \n                          calculated and the atoms that can be in the environments \n               SPECIESA - the list of atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESB, \n                          which specifies the atoms that are in the environment. \n               SPECIESB - the list of atoms that can be in the environments of each \n                          of the atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESA, \n                          which specifies the atoms for which the symmetry function is \n                          being calculated. \n\nThe following arguments are compulsory: \n\n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n                  PLANE - the plane to use when calculating the value of the order \n                          parameter should be xy, xz or yz \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                  VMEAN - ( default=off ) calculate the norm of the mean vector. \n                   VSUM - ( default=off ) calculate the norm of the sum of all the \n                          vectors \n                 SWITCH - the switching function that it used in the construction of \n                          the contact matrix \n                   MASK - the label for a vector that is used to determine which rows \n                          of the matrix are computed \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "HIGHEST": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/HIGHEST",
    "description" : "This function can be used to find the highest colvar by magnitude in a set.",
    "module" : "function",
    "displayname" : "HIGHEST",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the values input to this function", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector/matrix that should be used to determine which elements of the vector/matrix should be computed", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the lowest of the input values"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the values input to this function \n                   MASK - the label for a sparse vector/matrix that should be used to \n                          determine which elements of the vector/matrix should be computed \n\n"
  },
  "HIGHEST_ONEARG": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/HIGHEST_ONEARG",
    "description" : "",
    "module" : "function",
    "displayname" : "HIGHEST",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the vector/matrix that is being used in input", "multiple": 0, "actionlink": "none", "argtype": "vector/matrix"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the lowest of the input values"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the vector/matrix that is being used in input \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n"
  },
  "HIGHEST_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/HIGHEST_SCALAR",
    "description" : "",
    "module" : "function",
    "displayname" : "HIGHEST",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the lowest of the input values"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n"
  },
  "HIGHEST_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/HIGHEST_VECTOR",
    "description" : "",
    "module" : "function",
    "displayname" : "HIGHEST",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and vector that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the largest element of the input vector if one vector specified"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and vector that on which the \n                          function is being calculated elementwise \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                 USEGPU - ( default=off ) run this calculation on the GPU \n"
  },
  "HISTOGRAM": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/HISTOGRAM",
    "description" : "Accumulate the average probability density along a few CVs from a trajectory.",
    "module" : "gridtools",
    "displayname" : "HISTOGRAM",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"},
       "NORMALIZATION" : { "type": "compulsory", "description": " This controls how the data is normalized it can be set equal to true, false or ndata", "multiple": 0, "actionlink": "none", "default": "ndata"},
       "ARG" : { "type": "optional", "description": "the quantities that are being used to construct the histogram", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "DATA" : { "type": "optional", "description": "an alternative to the ARG keyword", "multiple": 0, "actionlink": "none"},
       "GRID_MIN" : { "type": "compulsory", "description": " the lower bounds for the grid", "multiple": 0, "actionlink": "none", "default": "auto"},
       "GRID_MAX" : { "type": "compulsory", "description": " the upper bounds for the grid", "multiple": 0, "actionlink": "none", "default": "auto"},
       "BANDWIDTH" : { "type": "optional", "description": "the bandwidths for kernel density esimtation", "multiple": 0, "actionlink": "none"},
       "KERNEL" : { "type": "compulsory", "description": " the kernel function you are using", "multiple": 0, "actionlink": "none", "default": "GAUSSIAN"},
       "GRID_BIN" : { "type": "optional", "description": "the number of bins for the grid", "multiple": 0, "actionlink": "none"},
       "GRID_SPACING" : { "type": "optional", "description": "the approximate grid spacing (to be used as an alternative or together with GRID_BIN)", "multiple": 0, "actionlink": "none"},
       "LOGWEIGHTS" : { "type": "optional", "description": "the logarithm of the quantity to use as the weights when calculating averages", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which to store data for averaging", "multiple": 0, "actionlink": "none", "default": "1"},
       "CLEAR" : { "type": "compulsory", "description": " the frequency with whihc to clear the data that is being averaged", "multiple": 0, "actionlink": "none", "default": "0"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "grid",
           "description": "the estimate of the histogram as a function of the argument that was obtained"
         }
       }
    },
    "needs" : ["COMBINE", "CUSTOM", "ONES", "KDE", "ACCUMULATE"],
    "help" : "\nThe following arguments are compulsory: \n\n          NORMALIZATION - ( default=ndata ) This controls how the data is normalized \n                          it can be set equal to true, false or ndata. See above for an \n                          explanation \n               GRID_MIN - ( default=auto ) the lower bounds for the grid \n               GRID_MAX - ( default=auto ) the upper bounds for the grid \n                 KERNEL - ( default=GAUSSIAN ) the kernel function you are using. \n                          More details on the kernels available in plumed plumed can be \n                          found in \ref kernelfunctions. \n                 STRIDE - ( default=1 ) the frequency with which to store data for \n                          averaging \n                  CLEAR - ( default=0 ) the frequency with whihc to clear the data \n                          that is being averaged \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \n                    ARG - the quantities that are being used to construct the \n                          histogram \n                   DATA - an alternative to the ARG keyword \n              BANDWIDTH - the bandwidths for kernel density esimtation \n               GRID_BIN - the number of bins for the grid \n           GRID_SPACING - the approximate grid spacing (to be used as an alternative \n                          or together with GRID_BIN) \n             LOGWEIGHTS - the logarithm of the quantity to use as the weights when \n                          calculating averages \n\n"
  },
  "INCLUDE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/INCLUDE",
    "description" : "Includes an external input file, similar to #include in C preprocessor.",
    "module" : "generic",
    "displayname" : "INCLUDE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "FILE" : { "type": "compulsory", "description": "file to be included", "multiple": 0, "actionlink": "none"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                   FILE - file to be included \n"
  },
  "INCYLINDER": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/INCYLINDER",
    "description" : "This quantity can be used to calculate functions of the distribution of collective variables for the atoms that lie in a particular, user-specified part of of the cell.",
    "module" : "volumes",
    "displayname" : "INCYLINDER",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the group of atoms that you would like to investigate", "multiple": 1, "actionlink": "none"},
       "OUTSIDE" : { "type": "flag", "description": " calculate quantities for colvars that are on atoms outside the region of interest", "multiple": 0, "actionlink": "none", "default": "off"},
       "CENTER" : { "type": "atoms", "description": "the atom whose vicinity we are interested in examining", "multiple": 1, "actionlink": "none"},
       "SIGMA" : { "type": "optional", "description": "the width of the function to be used for kernel density estimation", "multiple": 0, "actionlink": "none"},
       "KERNEL" : { "type": "compulsory", "description": " the type of kernel function to be used", "multiple": 0, "actionlink": "none", "default": "gaussian"},
       "DIRECTION" : { "type": "compulsory", "description": "the direction of the long axis of the cylinder", "multiple": 0, "actionlink": "none"},
       "RADIUS" : { "type": "compulsory", "description": "a switching function that gives the extent of the cylinder in the plane perpendicular to the direction", "multiple": 0, "actionlink": "LESS_THAN"},
       "LOWER" : { "type": "compulsory", "description": " the lower boundary on the direction parallel to the long axis of the cylinder", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "UPPER" : { "type": "compulsory", "description": " the upper boundary on the direction parallel to the long axis of the cylinder", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "DATA" : { "type": "optional", "description": "the label of an action that calculates multicolvars", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calcualte the number of colvars that are inside the region of interest and that are less than a certain threshold", "multiple": 0, "actionlink": "none"},
       "MORE_THAN" : { "type": "optional", "description": "calcualte the number of colvars that are inside the region of interest and that are greater that a certain threshold", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of colvars that are inside the region of interest and that have a CV value that is between a particular set of bounds", "multiple": 0, "actionlink": "none"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the average value of the colvar inside the region of interest", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "sum of values of input CVs in regin of interest"
         },
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of cvs in the region of interest that are less than a certain threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of cvs in the region of interest that are more than a certain threshold"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of cvs in the region of interest that are within a certain range"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of all the colvars weighted by the function that determines if we are in the region"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the average values of the colvar in the region of interest"
         }
       }
    },
    "needs" : ["LESS_THAN", "MORE_THAN", "GROUP", "BETWEEN", "SUM", "MEAN", "CUSTOM"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the group of atoms that you would like to investigate. For \n                          more information on how to specify lists of atoms see \ref Group \n                 CENTER - the atom whose vicinity we are interested in examining. For \n                          more information on how to specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                 KERNEL - ( default=gaussian ) the type of kernel function to be used \n              DIRECTION - the direction of the long axis of the cylinder. Must be x, \n                          y or z \n                 RADIUS - a switching function that gives the extent of the cylinder \n                          in the plane perpendicular to the direction \n                  LOWER - ( default=0.0 ) the lower boundary on the direction \n                          parallel to the long axis of the cylinder \n                  UPPER - ( default=0.0 ) the upper boundary on the direction \n                          parallel to the long axis of the cylinder \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                OUTSIDE - ( default=off ) calculate quantities for colvars that are \n                          on atoms outside the region of interest \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the average value of the colvar \n                          inside the region of interest \n                  SIGMA - the width of the function to be used for kernel density \n                          estimation \n                   DATA - the label of an action that calculates multicolvars. \n                          Weighted sums based on the location of the colvars calculated by \n                          this action will be calcualted \n              LESS_THAN - calcualte the number of colvars that are inside the region \n                          of interest and that are less than a certain threshold \n              MORE_THAN - calcualte the number of colvars that are inside the region \n                          of interest and that are greater that a certain threshold \n                BETWEEN - calculate the number of colvars that are inside the region \n                          of interest and that have a CV value that is between a \n                          particular set of bounds \n\n"
  },
  "INCYLINDER_CALC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/INCYLINDER_CALC",
    "description" : "",
    "module" : "volumes",
    "displayname" : "INCYLINDER",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the group of atoms that you would like to investigate", "multiple": 1, "actionlink": "none"},
       "OUTSIDE" : { "type": "flag", "description": " calculate quantities for colvars that are on atoms outside the region of interest", "multiple": 0, "actionlink": "none", "default": "off"},
       "CENTER" : { "type": "atoms", "description": "the atom whose vicinity we are interested in examining", "multiple": 1, "actionlink": "none"},
       "SIGMA" : { "type": "optional", "description": "the width of the function to be used for kernel density estimation", "multiple": 0, "actionlink": "none"},
       "KERNEL" : { "type": "compulsory", "description": " the type of kernel function to be used", "multiple": 0, "actionlink": "none", "default": "gaussian"},
       "DIRECTION" : { "type": "compulsory", "description": "the direction of the long axis of the cylinder", "multiple": 0, "actionlink": "none"},
       "RADIUS" : { "type": "compulsory", "description": "a switching function that gives the extent of the cylinder in the plane perpendicular to the direction", "multiple": 0, "actionlink": "LESS_THAN"},
       "LOWER" : { "type": "compulsory", "description": " the lower boundary on the direction parallel to the long axis of the cylinder", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "UPPER" : { "type": "compulsory", "description": " the upper boundary on the direction parallel to the long axis of the cylinder", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "vector of numbers between 0 and 1 that measure the degree to which each atom is within the volume of interest"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the group of atoms that you would like to investigate. For \n                          more information on how to specify lists of atoms see \ref Group \n                 CENTER - the atom whose vicinity we are interested in examining. For \n                          more information on how to specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                 KERNEL - ( default=gaussian ) the type of kernel function to be used \n              DIRECTION - the direction of the long axis of the cylinder. Must be x, \n                          y or z \n                 RADIUS - a switching function that gives the extent of the cylinder \n                          in the plane perpendicular to the direction \n                  LOWER - ( default=0.0 ) the lower boundary on the direction \n                          parallel to the long axis of the cylinder \n                  UPPER - ( default=0.0 ) the upper boundary on the direction \n                          parallel to the long axis of the cylinder \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                OUTSIDE - ( default=off ) calculate quantities for colvars that are \n                          on atoms outside the region of interest \n                  SIGMA - the width of the function to be used for kernel density \n                          estimation \n\n"
  },
  "INENVELOPE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/INENVELOPE",
    "description" : "This quantity can be used to calculate functions of the distribution of collective variables for the atoms that lie in a region where the density of a certain type of atom is high.",
    "module" : "volumes",
    "displayname" : "INENVELOPE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the group of atoms that you would like to investigate", "multiple": 1, "actionlink": "none"},
       "OUTSIDE" : { "type": "flag", "description": " calculate quantities for colvars that are on atoms outside the region of interest", "multiple": 0, "actionlink": "none", "default": "off"},
       "FIELD_ATOMS" : { "type": "atoms", "description": "the atom whose positions we are constructing a field from", "multiple": 1, "actionlink": "none"},
       "KERNEL" : { "type": "compulsory", "description": " the type of kernel function to be used", "multiple": 0, "actionlink": "none", "default": "gaussian"},
       "BANDWIDTH" : { "type": "compulsory", "description": "the bandwidths for kernel density esimtation", "multiple": 0, "actionlink": "none"},
       "CONTOUR" : { "type": "compulsory", "description": "a switching funciton that tells PLUMED how large the density should be", "multiple": 0, "actionlink": "none"},
       "CUTOFF" : { "type": "compulsory", "description": " the cutoff at which to stop evaluating the kernel functions is set equal to sqrt(2*x)*bandwidth in each direction where x is this number", "multiple": 0, "actionlink": "none", "default": "6.25"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "DATA" : { "type": "optional", "description": "the label of an action that calculates multicolvars", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calcualte the number of colvars that are inside the region of interest and that are less than a certain threshold", "multiple": 0, "actionlink": "none"},
       "MORE_THAN" : { "type": "optional", "description": "calcualte the number of colvars that are inside the region of interest and that are greater that a certain threshold", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of colvars that are inside the region of interest and that have a CV value that is between a particular set of bounds", "multiple": 0, "actionlink": "none"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the average value of the colvar inside the region of interest", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "sum of values of input CVs in regin of interest"
         },
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of cvs in the region of interest that are less than a certain threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of cvs in the region of interest that are more than a certain threshold"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of cvs in the region of interest that are within a certain range"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of all the colvars weighted by the function that determines if we are in the region"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the average values of the colvar in the region of interest"
         }
       }
    },
    "needs" : ["LESS_THAN", "MORE_THAN", "GROUP", "BETWEEN", "SUM", "MEAN", "CUSTOM"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the group of atoms that you would like to investigate. For \n                          more information on how to specify lists of atoms see \ref Group \n            FIELD_ATOMS - the atom whose positions we are constructing a field from. \n                          For more information on how to specify lists of atoms see \ref \n                          Group \n\nThe following arguments are compulsory: \n\n                 KERNEL - ( default=gaussian ) the type of kernel function to be used \n              BANDWIDTH - the bandwidths for kernel density esimtation \n                CONTOUR - a switching funciton that tells PLUMED how large the \n                          density should be \n                 CUTOFF - ( default=6.25 ) the cutoff at which to stop evaluating the \n                          kernel functions is set equal to sqrt(2*x)*bandwidth in each \n                          direction where x is this number \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                OUTSIDE - ( default=off ) calculate quantities for colvars that are \n                          on atoms outside the region of interest \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the average value of the colvar \n                          inside the region of interest \n                   DATA - the label of an action that calculates multicolvars. \n                          Weighted sums based on the location of the colvars calculated by \n                          this action will be calcualted \n              LESS_THAN - calcualte the number of colvars that are inside the region \n                          of interest and that are less than a certain threshold \n              MORE_THAN - calcualte the number of colvars that are inside the region \n                          of interest and that are greater that a certain threshold \n                BETWEEN - calculate the number of colvars that are inside the region \n                          of interest and that have a CV value that is between a \n                          particular set of bounds \n\n"
  },
  "INENVELOPE_CALC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/INENVELOPE_CALC",
    "description" : "",
    "module" : "volumes",
    "displayname" : "INENVELOPE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the group of atoms that you would like to investigate", "multiple": 1, "actionlink": "none"},
       "OUTSIDE" : { "type": "flag", "description": " calculate quantities for colvars that are on atoms outside the region of interest", "multiple": 0, "actionlink": "none", "default": "off"},
       "FIELD_ATOMS" : { "type": "atoms", "description": "the atom whose positions we are constructing a field from", "multiple": 1, "actionlink": "none"},
       "KERNEL" : { "type": "compulsory", "description": " the type of kernel function to be used", "multiple": 0, "actionlink": "none", "default": "gaussian"},
       "BANDWIDTH" : { "type": "compulsory", "description": "the bandwidths for kernel density esimtation", "multiple": 0, "actionlink": "none"},
       "CONTOUR" : { "type": "compulsory", "description": "a switching funciton that tells PLUMED how large the density should be", "multiple": 0, "actionlink": "none"},
       "CUTOFF" : { "type": "compulsory", "description": " the cutoff at which to stop evaluating the kernel functions is set equal to sqrt(2*x)*bandwidth in each direction where x is this number", "multiple": 0, "actionlink": "none", "default": "6.25"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "vector of numbers between 0 and 1 that measure the degree to which each atom is within the volume of interest"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the group of atoms that you would like to investigate. For \n                          more information on how to specify lists of atoms see \ref Group \n            FIELD_ATOMS - the atom whose positions we are constructing a field from. \n                          For more information on how to specify lists of atoms see \ref \n                          Group \n\nThe following arguments are compulsory: \n\n                 KERNEL - ( default=gaussian ) the type of kernel function to be used \n              BANDWIDTH - the bandwidths for kernel density esimtation \n                CONTOUR - a switching funciton that tells PLUMED how large the \n                          density should be \n                 CUTOFF - ( default=6.25 ) the cutoff at which to stop evaluating the \n                          kernel functions is set equal to sqrt(2*x)*bandwidth in each \n                          direction where x is this number \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                OUTSIDE - ( default=off ) calculate quantities for colvars that are \n                          on atoms outside the region of interest \n"
  },
  "INPLANEDISTANCES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/INPLANEDISTANCES",
    "description" : "Calculate distances in the plane perpendicular to an axis",
    "module" : "multicolvar",
    "displayname" : "INPLANEDISTANCES",
    "replacement" : "DISTANCE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "GROUP" : { "type": "atoms", "description": "calculate distance for each distinct set of three atoms in the group", "multiple": 1, "actionlink": "none"},
       "VECTORSTART" : { "type": "atoms", "description": "The first atom position that is used to define the normal to the plane of interest", "multiple": 1, "actionlink": "none"},
       "VECTOREND" : { "type": "atoms", "description": "The second atom position that is used to defin the normal to the plane of interest", "multiple": 1, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the INPLANEDISTANCE between each of the atoms specified using the GROUP keyword and atom A in the plane perpendicular to the vector connecting the atoms specified using VECTORSTART and VECTOREND"
         },
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "DISTANCE", "ANGLE"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - calculate distance for each distinct set of three atoms in \n                          the group. For more information on how to specify lists of \n                          atoms see \ref Group \n            VECTORSTART - The first atom position that is used to define the normal \n                          to the plane of interest. For more information on how to \n                          specify lists of atoms see \ref Group \n              VECTOREND - The second atom position that is used to defin the normal \n                          to the plane of interest. For more information on how to \n                          specify lists of atoms see \ref Group \n\nThe following options are available\n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "INSPHERE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/INSPHERE",
    "description" : "This quantity can be used to calculate functions of the distribution of collective variables for the atoms that lie in a particular, user-specified part of of the cell.",
    "module" : "volumes",
    "displayname" : "INSPHERE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the group of atoms that you would like to investigate", "multiple": 1, "actionlink": "none"},
       "OUTSIDE" : { "type": "flag", "description": " calculate quantities for colvars that are on atoms outside the region of interest", "multiple": 0, "actionlink": "none", "default": "off"},
       "CENTER" : { "type": "atoms", "description": "the atom whose vicinity we are interested in examining", "multiple": 1, "actionlink": "none"},
       "ATOM" : { "type": "atoms", "description": "the atom whose vicinity we are interested in examining", "multiple": 1, "actionlink": "none"},
       "RADIUS" : { "type": "compulsory", "description": "the switching function that tells us the extent of the sphereical region of interest", "multiple": 0, "actionlink": "LESS_THAN"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "DATA" : { "type": "optional", "description": "the label of an action that calculates multicolvars", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calcualte the number of colvars that are inside the region of interest and that are less than a certain threshold", "multiple": 0, "actionlink": "none"},
       "MORE_THAN" : { "type": "optional", "description": "calcualte the number of colvars that are inside the region of interest and that are greater that a certain threshold", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of colvars that are inside the region of interest and that have a CV value that is between a particular set of bounds", "multiple": 0, "actionlink": "none"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the average value of the colvar inside the region of interest", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "sum of values of input CVs in regin of interest"
         },
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of cvs in the region of interest that are less than a certain threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of cvs in the region of interest that are more than a certain threshold"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of cvs in the region of interest that are within a certain range"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of all the colvars weighted by the function that determines if we are in the region"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the average values of the colvar in the region of interest"
         }
       }
    },
    "needs" : ["LESS_THAN", "MORE_THAN", "GROUP", "BETWEEN", "SUM", "MEAN", "CUSTOM"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the group of atoms that you would like to investigate. For \n                          more information on how to specify lists of atoms see \ref Group \n                 CENTER - the atom whose vicinity we are interested in examining. For \n                          more information on how to specify lists of atoms see \ref Group \n                   ATOM - the atom whose vicinity we are interested in examining \n\nThe following arguments are compulsory: \n\n                 RADIUS - the switching function that tells us the extent of the \n                          sphereical region of interest \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                OUTSIDE - ( default=off ) calculate quantities for colvars that are \n                          on atoms outside the region of interest \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the average value of the colvar \n                          inside the region of interest \n                   DATA - the label of an action that calculates multicolvars. \n                          Weighted sums based on the location of the colvars calculated by \n                          this action will be calcualted \n              LESS_THAN - calcualte the number of colvars that are inside the region \n                          of interest and that are less than a certain threshold \n              MORE_THAN - calcualte the number of colvars that are inside the region \n                          of interest and that are greater that a certain threshold \n                BETWEEN - calculate the number of colvars that are inside the region \n                          of interest and that have a CV value that is between a \n                          particular set of bounds \n\n"
  },
  "INSPHERE_CALC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/INSPHERE_CALC",
    "description" : "",
    "module" : "volumes",
    "displayname" : "INSPHERE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the group of atoms that you would like to investigate", "multiple": 1, "actionlink": "none"},
       "OUTSIDE" : { "type": "flag", "description": " calculate quantities for colvars that are on atoms outside the region of interest", "multiple": 0, "actionlink": "none", "default": "off"},
       "CENTER" : { "type": "atoms", "description": "the atom whose vicinity we are interested in examining", "multiple": 1, "actionlink": "none"},
       "ATOM" : { "type": "atoms", "description": "the atom whose vicinity we are interested in examining", "multiple": 1, "actionlink": "none"},
       "RADIUS" : { "type": "compulsory", "description": "the switching function that tells us the extent of the sphereical region of interest", "multiple": 0, "actionlink": "LESS_THAN"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "vector of numbers between 0 and 1 that measure the degree to which each atom is within the volume of interest"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the group of atoms that you would like to investigate. For \n                          more information on how to specify lists of atoms see \ref Group \n                 CENTER - the atom whose vicinity we are interested in examining. For \n                          more information on how to specify lists of atoms see \ref Group \n                   ATOM - the atom whose vicinity we are interested in examining \n\nThe following arguments are compulsory: \n\n                 RADIUS - the switching function that tells us the extent of the \n                          sphereical region of interest \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                OUTSIDE - ( default=off ) calculate quantities for colvars that are \n                          on atoms outside the region of interest \n"
  },
  "INTEGRATE_GRID": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/INTEGRATE_GRID",
    "description" : "Calculate the numerical integral of the function stored on the grid",
    "module" : "gridtools",
    "displayname" : "INTEGRATE_GRID",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the label of the function on a grid that is being integrated", "multiple": 0, "actionlink": "none", "argtype": "grid"},
       "PERIODIC" : { "type": "compulsory", "description": "if the value of the output integral has a periodid domain then you use this keyword to specify the periodicity", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the numerical integral of the input function over its whole domain"
         }
       }
    },
    "needs" : ["GET_VOLUME_ELEMENT", "SUM", "CUSTOM"],
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label of the function on a grid that is being \n                          integrated \n               PERIODIC - if the value of the output integral has a periodid domain \n                          then you use this keyword to specify the periodicity. If the \n                          output integral is not periodic you must state this using \n                          PERIODIC=NO \n"
  },
  "INTERPOLATE_GRID": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/INTERPOLATE_GRID",
    "description" : "Interpolate a smooth function stored on a grid onto a grid with a smaller grid spacing.",
    "module" : "gridtools",
    "displayname" : "INTERPOLATE_GRID",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "GRID_BIN" : { "type": "optional", "description": "the number of bins for the grid", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the label for function on the grid that you would like to interpolate", "multiple": 0, "actionlink": "none", "argtype": "grid"},
       "GRID_SPACING" : { "type": "optional", "description": "the approximate grid spacing (to be used as an alternative or together with GRID_BIN)", "multiple": 0, "actionlink": "none"},
       "MIDPOINTS" : { "type": "flag", "description": " interpolate the values of the function at the midpoints of the grid coordinates of the input grid", "multiple": 0, "actionlink": "none", "default": "off"},
       "INTERPOLATION_TYPE" : { "type": "compulsory", "description": " the method to use for interpolation", "multiple": 0, "actionlink": "none", "default": "spline"},
       "ZERO_OUTSIDE_GRID_RANGE" : { "type": "flag", "description": " if we are asked to evaluate the function for a number that is outside the range of the grid set it to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "grid",
           "description": "the function evaluated onto the interpolated grid"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label for function on the grid that you would like to \n                          interpolate \n     INTERPOLATION_TYPE - ( default=spline ) the method to use for interpolation. Can \n                          be spline, linear, ceiling or floor. \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n              MIDPOINTS - ( default=off ) interpolate the values of the function at \n                          the midpoints of the grid coordinates of the input grid \nZERO_OUTSIDE_GRID_RANGE - ( default=off ) if we are asked to evaluate the function \n                          for a number that is outside the range of the grid set it to \n                          zero \n               GRID_BIN - the number of bins for the grid \n           GRID_SPACING - the approximate grid spacing (to be used as an alternative \n                          or together with GRID_BIN) \n\n"
  },
  "INVERT_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/INVERT_MATRIX",
    "description" : "Calculate the inverse of the input matrix",
    "module" : "matrixtools",
    "displayname" : "INVERT_MATRIX",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the input matrix", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "MATRIX" : { "type": "deprecated", "description": "You should use ARG instead of this keyword which was used in older versions of PLUMED and is provided for back compatibility only", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "the inverse of the input matrix"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the input matrix \n"
  },
  "JCOUPLING": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/JCOUPLING",
    "description" : "Calculates 3J coupling constants for a dihedral angle.",
    "module" : "isdb",
    "displayname" : "JCOUPLING",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "DOSCORE" : { "type": "flag", "description": " activate metainference", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOENSEMBLE" : { "type": "flag", "description": " don't perform any replica-averaging", "multiple": 0, "actionlink": "none", "default": "off"},
       "REWEIGHT" : { "type": "flag", "description": " simple REWEIGHT using the ARG as energy", "multiple": 0, "actionlink": "none", "default": "off"},
       "AVERAGING" : { "type": "optional", "description": "Stride for calculation of averaged weights and sigma_mean", "multiple": 0, "actionlink": "none"},
       "NOISETYPE" : { "type": "compulsory", "description": " functional form of the noise (GAUSS,MGAUSS,OUTLIERS,MOUTLIERS,GENERIC)", "multiple": 0, "actionlink": "none", "default": "MGAUSS"},
       "LIKELIHOOD" : { "type": "compulsory", "description": " the likelihood for the GENERIC metainference model, GAUSS or LOGN", "multiple": 0, "actionlink": "none", "default": "GAUSS"},
       "DFTILDE" : { "type": "compulsory", "description": " fraction of sigma_mean used to evolve ftilde", "multiple": 0, "actionlink": "none", "default": "0.1"},
       "SCALEDATA" : { "type": "flag", "description": " Set to TRUE if you want to sample a scaling factor common to all values and replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALE0" : { "type": "compulsory", "description": " initial value of the scaling factor", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SCALE_PRIOR" : { "type": "compulsory", "description": " either FLAT or GAUSSIAN", "multiple": 0, "actionlink": "none", "default": "FLAT"},
       "SCALE_MIN" : { "type": "optional", "description": "minimum value of the scaling factor", "multiple": 0, "actionlink": "none"},
       "SCALE_MAX" : { "type": "optional", "description": "maximum value of the scaling factor", "multiple": 0, "actionlink": "none"},
       "DSCALE" : { "type": "optional", "description": "maximum MC move of the scaling factor", "multiple": 0, "actionlink": "none"},
       "ADDOFFSET" : { "type": "flag", "description": " Set to TRUE if you want to sample an offset common to all values and replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "OFFSET0" : { "type": "compulsory", "description": " initial value of the offset", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "OFFSET_PRIOR" : { "type": "compulsory", "description": " either FLAT or GAUSSIAN", "multiple": 0, "actionlink": "none", "default": "FLAT"},
       "OFFSET_MIN" : { "type": "optional", "description": "minimum value of the offset", "multiple": 0, "actionlink": "none"},
       "OFFSET_MAX" : { "type": "optional", "description": "maximum value of the offset", "multiple": 0, "actionlink": "none"},
       "DOFFSET" : { "type": "optional", "description": "maximum MC move of the offset", "multiple": 0, "actionlink": "none"},
       "REGRES_ZERO" : { "type": "optional", "description": "stride for regression with zero offset", "multiple": 0, "actionlink": "none"},
       "SIGMA0" : { "type": "compulsory", "description": " initial value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SIGMA_MIN" : { "type": "compulsory", "description": " minimum value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "SIGMA_MAX" : { "type": "compulsory", "description": " maximum value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "10."},
       "DSIGMA" : { "type": "optional", "description": "maximum MC move of the uncertainty parameter", "multiple": 0, "actionlink": "none"},
       "OPTSIGMAMEAN" : { "type": "compulsory", "description": " Set to NONE/SEM to manually set sigma mean, or to estimate it on the fly", "multiple": 0, "actionlink": "none", "default": "NONE"},
       "SIGMA_MEAN0" : { "type": "optional", "description": "starting value for the uncertainty in the mean estimate", "multiple": 0, "actionlink": "none"},
       "SIGMA_MAX_STEPS" : { "type": "optional", "description": "Number of steps used to optimise SIGMA_MAX, before that the SIGMA_MAX value is used", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "the system temperature - this is only needed if code doesn't pass the temperature to plumed", "multiple": 0, "actionlink": "none"},
       "MC_STEPS" : { "type": "optional", "description": "number of MC steps", "multiple": 0, "actionlink": "none"},
       "MC_CHUNKSIZE" : { "type": "optional", "description": "MC chunksize", "multiple": 0, "actionlink": "none"},
       "STATUS_FILE" : { "type": "optional", "description": "write a file with all the data useful for restart/continuation of Metainference", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "optional", "description": "specify format for HILLS files (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "WRITE_STRIDE" : { "type": "compulsory", "description": " write the status to a file every N steps, this can be used for restart/continuation", "multiple": 0, "actionlink": "none", "default": "10000"},
       "SELECTOR" : { "type": "optional", "description": "name of selector", "multiple": 0, "actionlink": "none"},
       "NSELECT" : { "type": "optional", "description": "range of values for selector [0, N-1]", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the 4 atoms involved in each of the bonds for which you wish to calculate the J-coupling", "multiple": 1, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": "Type of J-coupling to compute (HAN,HAHN,CCG,NCG,CUSTOM)", "multiple": 0, "actionlink": "none"},
       "A" : { "type": "optional", "description": "Karplus parameter A", "multiple": 0, "actionlink": "none"},
       "B" : { "type": "optional", "description": "Karplus parameter B", "multiple": 0, "actionlink": "none"},
       "C" : { "type": "optional", "description": "Karplus parameter C", "multiple": 0, "actionlink": "none"},
       "SHIFT" : { "type": "optional", "description": "Angle shift in radians", "multiple": 0, "actionlink": "none"},
       "COUPLING" : { "type": "optional", "description": "Add an experimental value for each coupling", "multiple": 1, "actionlink": "none"},
       "output" : {
         "score" : {
           "flag": "default",
           "type": "scalar",
           "description": "the Metainference score"
         },
         "sigma" : {
           "flag": "default",
           "type": "scalar",
           "description": "uncertainty parameter"
         },
         "sigmaMean" : {
           "flag": "default",
           "type": "scalar",
           "description": "uncertainty in the mean estimate"
         },
         "neff" : {
           "flag": "default",
           "type": "scalar",
           "description": "effective number of replicas"
         },
         "acceptSigma" : {
           "flag": "default",
           "type": "scalar",
           "description": "MC acceptance for sigma values"
         },
         "acceptScale" : {
           "flag": "SCALEDATA",
           "type": "scalar",
           "description": "MC acceptance for scale value"
         },
         "acceptFT" : {
           "flag": "GENERIC",
           "type": "scalar",
           "description": "MC acceptance for general metainference f tilde value"
         },
         "weight" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "weights of the weighted average"
         },
         "biasDer" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "derivatives with respect to the bias"
         },
         "scale" : {
           "flag": "SCALEDATA",
           "type": "scalar",
           "description": "scale parameter"
         },
         "offset" : {
           "flag": "ADDOFFSET",
           "type": "scalar",
           "description": "offset parameter"
         },
         "ftilde" : {
           "flag": "GENERIC",
           "type": "scalar",
           "description": "ensemble average estimator"
         },
         "j" : {
           "flag": "default",
           "type": "scalar",
           "description": "the calculated J-coupling"
         },
         "exp" : {
           "flag": "COUPLING",
           "type": "scalar",
           "description": "the experimental J-coupling"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the 4 atoms involved in each of the bonds for which you \n                          wish to calculate the J-coupling. Keywords like ATOMS1, ATOMS2, \n                          ATOMS3,... should be listed and one J-coupling will be calculated for \n                          each ATOMS keyword you specify.. You can use multiple instances \n                          of this keyword i.e. ATOMS1, ATOMS2, ATOMS3... \n\nThe following arguments are compulsory: \n\n              NOISETYPE - ( default=MGAUSS ) functional form of the noise \n                          (GAUSS,MGAUSS,OUTLIERS,MOUTLIERS,GENERIC) \n             LIKELIHOOD - ( default=GAUSS ) the likelihood for the GENERIC \n                          metainference model, GAUSS or LOGN \n                DFTILDE - ( default=0.1 ) fraction of sigma_mean used to evolve \n                          ftilde \n                 SCALE0 - ( default=1.0 ) initial value of the scaling factor \n            SCALE_PRIOR - ( default=FLAT ) either FLAT or GAUSSIAN \n                OFFSET0 - ( default=0.0 ) initial value of the offset \n           OFFSET_PRIOR - ( default=FLAT ) either FLAT or GAUSSIAN \n                 SIGMA0 - ( default=1.0 ) initial value of the uncertainty parameter \n              SIGMA_MIN - ( default=0.0 ) minimum value of the uncertainty parameter \n              SIGMA_MAX - ( default=10. ) maximum value of the uncertainty parameter \n           OPTSIGMAMEAN - ( default=NONE ) Set to NONE/SEM to manually set sigma \n                          mean, or to estimate it on the fly \n           WRITE_STRIDE - ( default=10000 ) write the status to a file every N steps, \n                          this can be used for restart/continuation \n                   TYPE - Type of J-coupling to compute (HAN,HAHN,CCG,NCG,CUSTOM) \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                DOSCORE - ( default=off ) activate metainference \n             NOENSEMBLE - ( default=off ) don't perform any replica-averaging \n               REWEIGHT - ( default=off ) simple REWEIGHT using the ARG as energy \n              SCALEDATA - ( default=off ) Set to TRUE if you want to sample a scaling \n                          factor common to all values and replicas \n              ADDOFFSET - ( default=off ) Set to TRUE if you want to sample an offset \n                          common to all values and replicas \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                    ARG - the labels of the values from which the function is \n                          calculated \n              AVERAGING - Stride for calculation of averaged weights and sigma_mean \n              SCALE_MIN - minimum value of the scaling factor \n              SCALE_MAX - maximum value of the scaling factor \n                 DSCALE - maximum MC move of the scaling factor \n             OFFSET_MIN - minimum value of the offset \n             OFFSET_MAX - maximum value of the offset \n                DOFFSET - maximum MC move of the offset \n            REGRES_ZERO - stride for regression with zero offset \n                 DSIGMA - maximum MC move of the uncertainty parameter \n            SIGMA_MEAN0 - starting value for the uncertainty in the mean estimate \n        SIGMA_MAX_STEPS - Number of steps used to optimise SIGMA_MAX, before that the \n                          SIGMA_MAX value is used \n                   TEMP - the system temperature - this is only needed if code \n                          doesn't pass the temperature to plumed \n               MC_STEPS - number of MC steps \n           MC_CHUNKSIZE - MC chunksize \n            STATUS_FILE - write a file with all the data useful for \n                          restart/continuation of Metainference \n                    FMT - specify format for HILLS files (useful for decrease the \n                          number of digits in regtests) \n               SELECTOR - name of selector \n                NSELECT - range of values for selector [0, N-1] \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n                      A - Karplus parameter A \n                      B - Karplus parameter B \n                      C - Karplus parameter C \n                  SHIFT - Angle shift in radians \n               COUPLING - Add an experimental value for each coupling. You can use \n                          multiple instances of this keyword i.e. COUPLING1, COUPLING2, \n                          COUPLING3... \n\n"
  },
  "KDE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/KDE",
    "description" : "Create a histogram from the input scalar/vector/matrix using KDE",
    "module" : "gridtools",
    "displayname" : "KDE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the label for the value that should be used to construct the histogram", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "HEIGHTS" : { "type": "optional", "description": "this keyword takes the label of an action that calculates a vector of values", "multiple": 0, "actionlink": "none"},
       "VOLUMES" : { "type": "optional", "description": "this keyword take the label of an action that calculates a vector of values", "multiple": 0, "actionlink": "none"},
       "GRID_MIN" : { "type": "compulsory", "description": " the lower bounds for the grid", "multiple": 0, "actionlink": "none", "default": "auto"},
       "GRID_MAX" : { "type": "compulsory", "description": " the upper bounds for the grid", "multiple": 0, "actionlink": "none", "default": "auto"},
       "BANDWIDTH" : { "type": "optional", "description": "the bandwidths for kernel density esimtation", "multiple": 0, "actionlink": "none"},
       "METRIC" : { "type": "compulsory", "description": "the inverse covariance to use for the kernels that are added to the grid", "multiple": 0, "actionlink": "none"},
       "CUTOFF" : { "type": "compulsory", "description": " the cutoff at which to stop evaluating the kernel functions is set equal to sqrt(2*x)*bandwidth in each direction where x is this number", "multiple": 0, "actionlink": "none", "default": "6.25"},
       "KERNEL" : { "type": "compulsory", "description": " the kernel function you are using", "multiple": 0, "actionlink": "none", "default": "GAUSSIAN"},
       "GRID_BIN" : { "type": "optional", "description": "the number of bins for the grid", "multiple": 0, "actionlink": "none"},
       "IGNORE_IF_OUT_OF_RANGE" : { "type": "flag", "description": " if a kernel is outside of the range of the grid it is safe to ignore", "multiple": 0, "actionlink": "none", "default": "off"},
       "GRID_SPACING" : { "type": "optional", "description": "the approximate grid spacing (to be used as an alternative or together with GRID_BIN)", "multiple": 0, "actionlink": "none"},
       "CONCENTRATION" : { "type": "compulsory", "description": "the concentration parameter for Von Mises-Fisher distributions (only required for SPHERICAL_KDE)", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs ", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "grid",
           "description": "a function on a grid that was obtained by doing a Kernel Density Estimation using the input arguments"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label for the value that should be used to construct \n                          the histogram \n               GRID_MIN - ( default=auto ) the lower bounds for the grid \n               GRID_MAX - ( default=auto ) the upper bounds for the grid \n                 METRIC - the inverse covariance to use for the kernels that are \n                          added to the grid \n                 CUTOFF - ( default=6.25 ) the cutoff at which to stop evaluating the \n                          kernel functions is set equal to sqrt(2*x)*bandwidth in each \n                          direction where x is this number \n                 KERNEL - ( default=GAUSSIAN ) the kernel function you are using. \n                          More details on the kernels available in plumed plumed can be \n                          found in \ref kernelfunctions. \n          CONCENTRATION - the concentration parameter for Von Mises-Fisher \n                          distributions (only required for SPHERICAL_KDE) \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n IGNORE_IF_OUT_OF_RANGE - ( default=off ) if a kernel is outside of the range of the \n                          grid it is safe to ignore \n                HEIGHTS - this keyword takes the label of an action that calculates a \n                          vector of values. The elements of this vector are used as weights \n                          for the Gaussians. \n                VOLUMES - this keyword take the label of an action that calculates a \n                          vector of values. The elements of this vector divided by the \n                          volume of the Gaussian are used as weights for the Gaussians \n              BANDWIDTH - the bandwidths for kernel density esimtation \n               GRID_BIN - the number of bins for the grid \n           GRID_SPACING - the approximate grid spacing (to be used as an alternative \n                          or together with GRID_BIN) \n\n"
  },
  "KERNEL": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/KERNEL",
    "description" : "Transform a set of input coordinates using a kernel function",
    "module" : "refdist",
    "displayname" : "KERNEL",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the arguments that should be used as input to this method", "multiple": 1, "actionlink": "none", "argtype": "scalar/vector"},
       "TYPE" : { "type": "compulsory", "description": " the type of kernel to use", "multiple": 0, "actionlink": "none", "default": "gaussian"},
       "CENTER" : { "type": "compulsory", "description": "the position of the center of the kernel", "multiple": 0, "actionlink": "none"},
       "SIGMA" : { "type": "optional", "description": "square root of variance of the cluster", "multiple": 0, "actionlink": "none"},
       "COVAR" : { "type": "compulsory", "description": "the covariance of the kernel", "multiple": 0, "actionlink": "none"},
       "WEIGHT" : { "type": "compulsory", "description": " the weight to multiply this kernel function by", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "REFERENCE" : { "type": "optional", "description": "the file from which to read the kernel parameters", "multiple": 0, "actionlink": "none"},
       "NUMBER" : { "type": "compulsory", "description": " if there are multiple sets of kernel parameters in the input file which set of kernel parameters would you like to read in here", "multiple": 0, "actionlink": "none", "default": "1"},
       "NORMALIZED" : { "type": "flag", "description": " would you like the kernel function to be normalized", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the value of the kernel evaluated at the argument values"
         }
       }
    },
    "needs" : ["CONSTANT", "CUSTOM", "NORMALIZED_EUCLIDEAN_DISTANCE", "PRODUCT", "INVERT_MATRIX", "MAHALANOBIS_DISTANCE", "DIAGONALIZE", "CONCATENATE", "DETERMINANT", "BESSEL"],
    "help" : "\nThe following arguments are compulsory: \n\n                   TYPE - ( default=gaussian ) the type of kernel to use \n                 CENTER - the position of the center of the kernel \n                  COVAR - the covariance of the kernel \n                 WEIGHT - ( default=1.0 ) the weight to multiply this kernel function \n                          by \n                 NUMBER - ( default=1 ) if there are multiple sets of kernel \n                          parameters in the input file which set of kernel parameters would you \n                          like to read in here \n\nIn addition you may use the following options: \n\n             NORMALIZED - ( default=off ) would you like the kernel function to be \n                          normalized \n                    ARG - the arguments that should be used as input to this method. \n                          You can use multiple instances of this keyword i.e. ARG1, ARG2, \n                          ARG3... \n                  SIGMA - square root of variance of the cluster \n              REFERENCE - the file from which to read the kernel parameters \n\n"
  },
  "KL_ENTROPY": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/KL_ENTROPY",
    "description" : "Calculate the KL entropy of a distribution",
    "module" : "gridtools",
    "displayname" : "KL_ENTROPY",
     "dois" : ["10.1021/acs.jctc.7b01027"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the grid that you wish to use in the KL entropy calculation", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "compulsory", "description": "a file containing the reference density in grid format", "multiple": 0, "actionlink": "none"},
       "VALUE" : { "type": "compulsory", "description": "the name of the value that should be read from the grid", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the value of the KL-Entropy"
         }
       }
    },
    "needs" : ["REFERENCE_GRID", "CUSTOM", "INTEGRATE_GRID"],
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the grid that you wish to use in the KL entropy calculation \n              REFERENCE - a file containing the reference density in grid format \n                  VALUE - the name of the value that should be read from the grid \n"
  },
  "LANDMARK_SELECT_FPS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LANDMARK_SELECT_FPS",
    "description" : "Select a of landmarks from a large set of configurations using farthest point sampling.",
    "module" : "landmarks",
    "displayname" : "LANDMARK_SELECT_FPS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the COLLECT_FRAMES action that you used to get the data", "multiple": 0, "actionlink": "none"},
       "DISSIMILARITIES" : { "type": "optional", "description": "the matrix of dissimilarities if this is not provided the squared dissimilarities are calculated", "multiple": 0, "actionlink": "none"},
       "NLANDMARKS" : { "type": "compulsory", "description": "the numbe rof landmarks you would like to create", "multiple": 0, "actionlink": "none"},
       "SEED" : { "type": "optional", "description": "a random number seed", "multiple": 0, "actionlink": "none"},
       "NOVORONOI" : { "type": "flag", "description": " do not do a Voronoi analysis of the data to determine weights of final points", "multiple": 0, "actionlink": "none", "default": "off"},
       "NODISSIMILARITIES" : { "type": "flag", "description": " do not calculate the dissimilarities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "data" : {
           "flag": "ARG",
           "type": "matrix",
           "description": "the data that is being collected by this action"
         },
         "logweights" : {
           "flag": "ARG",
           "type": "vector",
           "description": "the logarithms of the weights of the data points"
         },
         "rectdissims" : {
           "flag": "DISSIMILARITIES",
           "type": "matrix",
           "description": "a rectangular matrix containing the distances between the landmark points and the rest of the points"
         },
         "sqrdissims" : {
           "flag": "DISSIMILARITIES",
           "type": "matrix",
           "description": "a square matrix containing the distances between each pair of landmark points"
         }
       }
    },
    "needs" : ["LOGSUMEXP", "TRANSPOSE", "DISSIMILARITIES", "ONES", "CREATE_MASK", "FARTHEST_POINT_SAMPLING", "SELECT_WITH_MASK", "COMBINE", "VORONOI", "MATRIX_PRODUCT", "CUSTOM"],
    "help" : "\nThe following arguments are compulsory: \n\n             NLANDMARKS - the numbe rof landmarks you would like to create \n\nIn addition you may use the following options: \n\n              NOVORONOI - ( default=off ) do not do a Voronoi analysis of the data to \n                          determine weights of final points \n      NODISSIMILARITIES - ( default=off ) do not calculate the dissimilarities \n                    ARG - the COLLECT_FRAMES action that you used to get the data \n        DISSIMILARITIES - the matrix of dissimilarities if this is not provided the \n                          squared dissimilarities are calculated \n                   SEED - a random number seed \n\n"
  },
  "LANDMARK_SELECT_RANDOM": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LANDMARK_SELECT_RANDOM",
    "description" : "Select a random set of landmarks from a large set of configurations.",
    "module" : "landmarks",
    "displayname" : "LANDMARK_SELECT_RANDOM",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the COLLECT_FRAMES action that you used to get the data", "multiple": 0, "actionlink": "none"},
       "DISSIMILARITIES" : { "type": "optional", "description": "the matrix of dissimilarities if this is not provided the squared dissimilarities are calculated", "multiple": 0, "actionlink": "none"},
       "NLANDMARKS" : { "type": "compulsory", "description": "the numbe rof landmarks you would like to create", "multiple": 0, "actionlink": "none"},
       "SEED" : { "type": "optional", "description": "a random number seed", "multiple": 0, "actionlink": "none"},
       "NOVORONOI" : { "type": "flag", "description": " do not do a Voronoi analysis of the data to determine weights of final points", "multiple": 0, "actionlink": "none", "default": "off"},
       "NODISSIMILARITIES" : { "type": "flag", "description": " do not calculate the dissimilarities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "data" : {
           "flag": "ARG",
           "type": "matrix",
           "description": "the data that is being collected by this action"
         },
         "logweights" : {
           "flag": "ARG",
           "type": "vector",
           "description": "the logarithms of the weights of the data points"
         },
         "rectdissims" : {
           "flag": "DISSIMILARITIES",
           "type": "matrix",
           "description": "a rectangular matrix containing the distances between the landmark points and the rest of the points"
         },
         "sqrdissims" : {
           "flag": "DISSIMILARITIES",
           "type": "matrix",
           "description": "a square matrix containing the distances between each pair of landmark points"
         }
       }
    },
    "needs" : ["LOGSUMEXP", "TRANSPOSE", "DISSIMILARITIES", "ONES", "CREATE_MASK", "FARTHEST_POINT_SAMPLING", "SELECT_WITH_MASK", "COMBINE", "VORONOI", "MATRIX_PRODUCT", "CUSTOM"],
    "help" : "\nThe following arguments are compulsory: \n\n             NLANDMARKS - the numbe rof landmarks you would like to create \n\nIn addition you may use the following options: \n\n              NOVORONOI - ( default=off ) do not do a Voronoi analysis of the data to \n                          determine weights of final points \n      NODISSIMILARITIES - ( default=off ) do not calculate the dissimilarities \n                    ARG - the COLLECT_FRAMES action that you used to get the data \n        DISSIMILARITIES - the matrix of dissimilarities if this is not provided the \n                          squared dissimilarities are calculated \n                   SEED - a random number seed \n\n"
  },
  "LANDMARK_SELECT_STRIDE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LANDMARK_SELECT_STRIDE",
    "description" : "Select every ith frame from the stored set of configurations",
    "module" : "landmarks",
    "displayname" : "LANDMARK_SELECT_STRIDE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the COLLECT_FRAMES action that you used to get the data", "multiple": 0, "actionlink": "none"},
       "DISSIMILARITIES" : { "type": "optional", "description": "the matrix of dissimilarities if this is not provided the squared dissimilarities are calculated", "multiple": 0, "actionlink": "none"},
       "NLANDMARKS" : { "type": "compulsory", "description": "the numbe rof landmarks you would like to create", "multiple": 0, "actionlink": "none"},
       "SEED" : { "type": "optional", "description": "a random number seed", "multiple": 0, "actionlink": "none"},
       "NOVORONOI" : { "type": "flag", "description": " do not do a Voronoi analysis of the data to determine weights of final points", "multiple": 0, "actionlink": "none", "default": "off"},
       "NODISSIMILARITIES" : { "type": "flag", "description": " do not calculate the dissimilarities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "data" : {
           "flag": "ARG",
           "type": "matrix",
           "description": "the data that is being collected by this action"
         },
         "logweights" : {
           "flag": "ARG",
           "type": "vector",
           "description": "the logarithms of the weights of the data points"
         },
         "rectdissims" : {
           "flag": "DISSIMILARITIES",
           "type": "matrix",
           "description": "a rectangular matrix containing the distances between the landmark points and the rest of the points"
         },
         "sqrdissims" : {
           "flag": "DISSIMILARITIES",
           "type": "matrix",
           "description": "a square matrix containing the distances between each pair of landmark points"
         }
       }
    },
    "needs" : ["LOGSUMEXP", "TRANSPOSE", "DISSIMILARITIES", "ONES", "CREATE_MASK", "FARTHEST_POINT_SAMPLING", "SELECT_WITH_MASK", "COMBINE", "VORONOI", "MATRIX_PRODUCT", "CUSTOM"],
    "help" : "\nThe following arguments are compulsory: \n\n             NLANDMARKS - the numbe rof landmarks you would like to create \n\nIn addition you may use the following options: \n\n              NOVORONOI - ( default=off ) do not do a Voronoi analysis of the data to \n                          determine weights of final points \n      NODISSIMILARITIES - ( default=off ) do not calculate the dissimilarities \n                    ARG - the COLLECT_FRAMES action that you used to get the data \n        DISSIMILARITIES - the matrix of dissimilarities if this is not provided the \n                          squared dissimilarities are calculated \n                   SEED - a random number seed \n\n"
  },
  "LESS_THAN": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LESS_THAN",
    "description" : "Use a switching function to determine how many of the input variables are less than a certain cutoff.",
    "module" : "function",
    "displayname" : "LESS_THAN",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "This keyword is used if you want to employ an alternative to the continuous swiching function defined above", "multiple": 0, "actionlink": "none"},
       "SQUARED" : { "type": "flag", "description": " is the input quantity the square of the value that you would like to apply the switching function to", "multiple": 0, "actionlink": "none", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the values input to this function", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector/matrix that should be used to determine which elements of the vector/matrix should be computed", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector/matrix",
           "description": "a function that is one if the input is less than a threshold"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n                    ARG - the values input to this function \n\nIn addition you may use the following options: \n\n                SQUARED - ( default=off ) is the input quantity the square of the \n                          value that you would like to apply the switching function to \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous swiching function defined above. The \n                          following provides information on the \ref switchingfunction that are \n                          available. When this keyword is present you no longer need the NN, MM, \n                          D_0 and R_0 keywords. \n                   MASK - the label for a sparse vector/matrix that should be used to \n                          determine which elements of the vector/matrix should be computed \n\n"
  },
  "LESS_THAN_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LESS_THAN_MATRIX",
    "description" : "",
    "module" : "function",
    "displayname" : "LESS_THAN",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and matrices that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/matrix"},
       "MASK" : { "type": "optional", "description": "a matrix that is used to used to determine which elements of the output matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "This keyword is used if you want to employ an alternative to the continuous swiching function defined above", "multiple": 0, "actionlink": "none"},
       "SQUARED" : { "type": "flag", "description": " is the input quantity the square of the value that you would like to apply the switching function to", "multiple": 0, "actionlink": "none", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "the matrix obtained by doing an element-wise application of a function that is one if the input is less than a threshold to the input matrix"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and matrices that on which the \n                          function is being calculated elementwise \n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                SQUARED - ( default=off ) is the input quantity the square of the \n                          value that you would like to apply the switching function to \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a matrix that is used to used to determine which elements \n                          of the output matrix to compute \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous swiching function defined above. The \n                          following provides information on the \ref switchingfunction that are \n                          available. When this keyword is present you no longer need the NN, MM, \n                          D_0 and R_0 keywords. \n\n"
  },
  "LESS_THAN_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LESS_THAN_SCALAR",
    "description" : "",
    "module" : "function",
    "displayname" : "LESS_THAN",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "This keyword is used if you want to employ an alternative to the continuous swiching function defined above", "multiple": 0, "actionlink": "none"},
       "SQUARED" : { "type": "flag", "description": " is the input quantity the square of the value that you would like to apply the switching function to", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector/matrix",
           "description": "a function that is one if the input is less than a threshold"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                SQUARED - ( default=off ) is the input quantity the square of the \n                          value that you would like to apply the switching function to \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous swiching function defined above. The \n                          following provides information on the \ref switchingfunction that are \n                          available. When this keyword is present you no longer need the NN, MM, \n                          D_0 and R_0 keywords. \n\n"
  },
  "LESS_THAN_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LESS_THAN_VECTOR",
    "description" : "",
    "module" : "function",
    "displayname" : "LESS_THAN",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and vector that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "This keyword is used if you want to employ an alternative to the continuous swiching function defined above", "multiple": 0, "actionlink": "none"},
       "SQUARED" : { "type": "flag", "description": " is the input quantity the square of the value that you would like to apply the switching function to", "multiple": 0, "actionlink": "none", "default": "off"},
       "MASK" : { "type": "optional", "description": "the label for a sparse matrix that should be used to determine which elements of the matrix should be computed", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the vector obtained by doing an element-wise application of a function that is one if the input is less than a threshold to the input vectors"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and vector that on which the \n                          function is being calculated elementwise \n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                SQUARED - ( default=off ) is the input quantity the square of the \n                          value that you would like to apply the switching function to \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous swiching function defined above. The \n                          following provides information on the \ref switchingfunction that are \n                          available. When this keyword is present you no longer need the NN, MM, \n                          D_0 and R_0 keywords. \n                   MASK - the label for a sparse matrix that should be used to \n                          determine which elements of the matrix should be computed \n\n"
  },
  "LOAD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LOAD",
    "description" : "Loads a library, possibly defining new actions.",
    "module" : "setup",
    "displayname" : "LOAD",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "FILE" : { "type": "compulsory", "description": "file to be loaded", "multiple": 0, "actionlink": "none"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                   FILE - file to be loaded \n"
  },
  "LOCALENSEMBLE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LOCALENSEMBLE",
    "description" : "Calculates the average over multiple arguments.",
    "module" : "function",
    "displayname" : "LOCALENSEMBLE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the labels of the actions that you want to use", "multiple": 1, "actionlink": "none", "argtype": "scalar"},
       "NUM" : { "type": "compulsory", "description": "the number of local replicas", "multiple": 0, "actionlink": "none"},
       "output" : {
         ".#!custom" : {
           "flag": "default",
           "type": "scalar",
           "description": "the names of the output components for this action depend on the actions input file see the example inputs below for details"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    NUM - the number of local replicas \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                    ARG - the labels of the actions that you want to use. You can use \n                          multiple instances of this keyword i.e. ARG1, ARG2, ARG3... \n\n"
  },
  "LOCAL_AVERAGE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LOCAL_AVERAGE",
    "description" : "Calculate averages over spherical regions centered on atoms",
    "module" : "symfunc",
    "displayname" : "LOCAL_AVERAGE",
     "dois" : ["10.1021/ct500320c", "10.1063/1.2977970"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated and the atoms that can be in the environments", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "the list of atoms that can be in the environments of each of the atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "the switching function that it used in the construction of the contact matrix", "multiple": 0, "actionlink": "LESS_THAN"},
       "MASK" : { "type": "optional", "description": "the label for a vector that is used to determine which rows of the matrix are computed", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the values of the local averages"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "GROUP", "ONES", "MATRIX_VECTOR_PRODUCT", "VSTACK", "OUTER_PRODUCT"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - the list of atoms for which the symmetry function is being \n                          calculated and the atoms that can be in the environments \n               SPECIESA - the list of atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESB, \n                          which specifies the atoms that are in the environment. \n               SPECIESB - the list of atoms that can be in the environments of each \n                          of the atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESA, \n                          which specifies the atoms for which the symmetry function is \n                          being calculated. \n\nThe following arguments are compulsory: \n\n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                 SWITCH - the switching function that it used in the construction of \n                          the contact matrix \n                   MASK - the label for a vector that is used to determine which rows \n                          of the matrix are computed \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "LOCAL_CRYSTALINITY": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LOCAL_CRYSTALINITY",
    "description" : "Calculate the local crystalinity symmetry function",
    "module" : "symfunc",
    "displayname" : "LOCAL_CRYSTALINITY",
     "dois" : ["10.1021/ct500320c", "10.1063/1.4822877"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated and the atoms that can be in the environments", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "the list of atoms that can be in the environments of each of the atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "the switching function that it used in the construction of the contact matrix", "multiple": 0, "actionlink": "LESS_THAN"},
       "MASK" : { "type": "optional", "description": "the label for a vector that is used to determine which rows of the matrix are computed", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "GVECTOR" : { "type": "optional", "description": "the coefficients of the linear combinations to compute for the CV", "multiple": 1, "actionlink": "none"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the value of the local crystalinity for each of the input atoms"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "GROUP", "ONES", "MATRIX_VECTOR_PRODUCT", "COMBINE"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - the list of atoms for which the symmetry function is being \n                          calculated and the atoms that can be in the environments \n               SPECIESA - the list of atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESB, \n                          which specifies the atoms that are in the environment. \n               SPECIESB - the list of atoms that can be in the environments of each \n                          of the atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESA, \n                          which specifies the atoms for which the symmetry function is \n                          being calculated. \n\nThe following arguments are compulsory: \n\n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                 SWITCH - the switching function that it used in the construction of \n                          the contact matrix \n                   MASK - the label for a vector that is used to determine which rows \n                          of the matrix are computed \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n                GVECTOR - the coefficients of the linear combinations to compute for \n                          the CV. You can use multiple instances of this keyword i.e. \n                          GVECTOR1, GVECTOR2, GVECTOR3... \n\n"
  },
  "LOCAL_Q1": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LOCAL_Q1",
    "description" : "Calculate the local degree of order around an atoms by taking the average dot product between the q_1 vector on the central atom and the q_3 vector on the atoms in the first coordination sphere.",
    "module" : "symfunc",
    "displayname" : "LOCAL_Q1",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "optional", "description": "the label of the action that computes the Steinhardt parameters for which you would like to calculate local steinhardt parameters", "multiple": 0, "actionlink": "none"},
       "SPECIESA" : { "type": "optional", "description": "the label of the action that computes the Steinhardt parameters for which you would like to calculate local steinhardt parameters", "multiple": 0, "actionlink": "none"},
       "SPECIESB" : { "type": "optional", "description": "the label of the action that computes the Steinhardt parameters that you would like to use when calculating the loal steinhardt parameters", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "This keyword is used if you want to employ an alternative to the continuous swiching function defined above", "multiple": 0, "actionlink": "none"},
       "MASK" : { "type": "optional", "description": "the label/s for vectors that are used to determine which local steinhardt parameters to compute", "multiple": 0, "actionlink": "none"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the values of the local steinhardt parameters for the input atoms"
         },
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "MATRIX_PRODUCT", "GROUP", "ONES", "OUTER_PRODUCT", "VSTACK", "CONCATENATE", "TRANSPOSE", "MATRIX_VECTOR_PRODUCT"],
    "help" : "\nThe following options are available\n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                SPECIES - the label of the action that computes the Steinhardt \n                          parameters for which you would like to calculate local steinhardt \n                          parameters \n               SPECIESA - the label of the action that computes the Steinhardt \n                          parameters for which you would like to calculate local steinhardt \n                          parameters \n               SPECIESB - the label of the action that computes the Steinhardt \n                          parameters that you would like to use when calculating the loal \n                          steinhardt parameters \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous swiching function defined above. The \n                          following provides information on the \ref switchingfunction that are \n                          available. When this keyword is present you no longer need the NN, MM, \n                          D_0 and R_0 keywords. \n                   MASK - the label/s for vectors that are used to determine which \n                          local steinhardt parameters to compute \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "LOCAL_Q3": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LOCAL_Q3",
    "description" : "Calculate the local degree of order around an atoms by taking the average dot product between the q_3 vector on the central atom and the q_3 vector on the atoms in the first coordination sphere.",
    "module" : "symfunc",
    "displayname" : "LOCAL_Q3",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "optional", "description": "the label of the action that computes the Steinhardt parameters for which you would like to calculate local steinhardt parameters", "multiple": 0, "actionlink": "none"},
       "SPECIESA" : { "type": "optional", "description": "the label of the action that computes the Steinhardt parameters for which you would like to calculate local steinhardt parameters", "multiple": 0, "actionlink": "none"},
       "SPECIESB" : { "type": "optional", "description": "the label of the action that computes the Steinhardt parameters that you would like to use when calculating the loal steinhardt parameters", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "This keyword is used if you want to employ an alternative to the continuous swiching function defined above", "multiple": 0, "actionlink": "none"},
       "MASK" : { "type": "optional", "description": "the label/s for vectors that are used to determine which local steinhardt parameters to compute", "multiple": 0, "actionlink": "none"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the values of the local steinhardt parameters for the input atoms"
         },
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "MATRIX_PRODUCT", "GROUP", "ONES", "OUTER_PRODUCT", "VSTACK", "CONCATENATE", "TRANSPOSE", "MATRIX_VECTOR_PRODUCT"],
    "help" : "\nThe following options are available\n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                SPECIES - the label of the action that computes the Steinhardt \n                          parameters for which you would like to calculate local steinhardt \n                          parameters \n               SPECIESA - the label of the action that computes the Steinhardt \n                          parameters for which you would like to calculate local steinhardt \n                          parameters \n               SPECIESB - the label of the action that computes the Steinhardt \n                          parameters that you would like to use when calculating the loal \n                          steinhardt parameters \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous swiching function defined above. The \n                          following provides information on the \ref switchingfunction that are \n                          available. When this keyword is present you no longer need the NN, MM, \n                          D_0 and R_0 keywords. \n                   MASK - the label/s for vectors that are used to determine which \n                          local steinhardt parameters to compute \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "LOCAL_Q4": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LOCAL_Q4",
    "description" : "Calculate the local degree of order around an atoms by taking the average dot product between the q_4 vector on the central atom and the q_4 vector on the atoms in the first coordination sphere.",
    "module" : "symfunc",
    "displayname" : "LOCAL_Q4",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "optional", "description": "the label of the action that computes the Steinhardt parameters for which you would like to calculate local steinhardt parameters", "multiple": 0, "actionlink": "none"},
       "SPECIESA" : { "type": "optional", "description": "the label of the action that computes the Steinhardt parameters for which you would like to calculate local steinhardt parameters", "multiple": 0, "actionlink": "none"},
       "SPECIESB" : { "type": "optional", "description": "the label of the action that computes the Steinhardt parameters that you would like to use when calculating the loal steinhardt parameters", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "This keyword is used if you want to employ an alternative to the continuous swiching function defined above", "multiple": 0, "actionlink": "none"},
       "MASK" : { "type": "optional", "description": "the label/s for vectors that are used to determine which local steinhardt parameters to compute", "multiple": 0, "actionlink": "none"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the values of the local steinhardt parameters for the input atoms"
         },
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "MATRIX_PRODUCT", "GROUP", "ONES", "OUTER_PRODUCT", "VSTACK", "CONCATENATE", "TRANSPOSE", "MATRIX_VECTOR_PRODUCT"],
    "help" : "\nThe following options are available\n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                SPECIES - the label of the action that computes the Steinhardt \n                          parameters for which you would like to calculate local steinhardt \n                          parameters \n               SPECIESA - the label of the action that computes the Steinhardt \n                          parameters for which you would like to calculate local steinhardt \n                          parameters \n               SPECIESB - the label of the action that computes the Steinhardt \n                          parameters that you would like to use when calculating the loal \n                          steinhardt parameters \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous swiching function defined above. The \n                          following provides information on the \ref switchingfunction that are \n                          available. When this keyword is present you no longer need the NN, MM, \n                          D_0 and R_0 keywords. \n                   MASK - the label/s for vectors that are used to determine which \n                          local steinhardt parameters to compute \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "LOCAL_Q6": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LOCAL_Q6",
    "description" : "Calculate the local degree of order around an atoms by taking the average dot product between the q_6 vector on the central atom and the q_6 vector on the atoms in the first coordination sphere.",
    "module" : "symfunc",
    "displayname" : "LOCAL_Q6",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "optional", "description": "the label of the action that computes the Steinhardt parameters for which you would like to calculate local steinhardt parameters", "multiple": 0, "actionlink": "none"},
       "SPECIESA" : { "type": "optional", "description": "the label of the action that computes the Steinhardt parameters for which you would like to calculate local steinhardt parameters", "multiple": 0, "actionlink": "none"},
       "SPECIESB" : { "type": "optional", "description": "the label of the action that computes the Steinhardt parameters that you would like to use when calculating the loal steinhardt parameters", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "This keyword is used if you want to employ an alternative to the continuous swiching function defined above", "multiple": 0, "actionlink": "none"},
       "MASK" : { "type": "optional", "description": "the label/s for vectors that are used to determine which local steinhardt parameters to compute", "multiple": 0, "actionlink": "none"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the values of the local steinhardt parameters for the input atoms"
         },
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "MATRIX_PRODUCT", "GROUP", "ONES", "OUTER_PRODUCT", "VSTACK", "CONCATENATE", "TRANSPOSE", "MATRIX_VECTOR_PRODUCT"],
    "help" : "\nThe following options are available\n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                SPECIES - the label of the action that computes the Steinhardt \n                          parameters for which you would like to calculate local steinhardt \n                          parameters \n               SPECIESA - the label of the action that computes the Steinhardt \n                          parameters for which you would like to calculate local steinhardt \n                          parameters \n               SPECIESB - the label of the action that computes the Steinhardt \n                          parameters that you would like to use when calculating the loal \n                          steinhardt parameters \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous swiching function defined above. The \n                          following provides information on the \ref switchingfunction that are \n                          available. When this keyword is present you no longer need the NN, MM, \n                          D_0 and R_0 keywords. \n                   MASK - the label/s for vectors that are used to determine which \n                          local steinhardt parameters to compute \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "LOGMFD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LOGMFD",
    "description" : "Used to perform LogMFD, LogPD, and TAMD/d-AFED.",
    "module" : "logmfd",
    "displayname" : "LOGMFD",
     "dois" : ["10.1021/jp805039u", "10.1016/j.cplett.2006.05.062", "10.1103/PhysRevE.85.066702", "10.1021/acs.jctc.7b00252", "10.1016/j.cplett.2018.07.011"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "INTERVAL" : { "type": "compulsory", "description": "Period of MD steps (N_m) to update fictitious dynamical variables", "multiple": 0, "actionlink": "none"},
       "DELTA_T" : { "type": "compulsory", "description": "Time step for the fictitious dynamical variables (DELTA_T=1 often works)", "multiple": 0, "actionlink": "none"},
       "THERMOSTAT" : { "type": "compulsory", "description": "Type of thermostat for the fictitious dynamical variables", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "Target temperature for the fictitious dynamical variables in LogMFD/PD", "multiple": 0, "actionlink": "none"},
       "TAMD" : { "type": "optional", "description": "When TAMD=1, TAMD/d-AFED calculations can be performed instead of LogMFD", "multiple": 0, "actionlink": "none"},
       "ALPHA" : { "type": "optional", "description": "Alpha parameter for LogMFD", "multiple": 0, "actionlink": "none"},
       "GAMMA" : { "type": "optional", "description": "Gamma parameter for LogMFD", "multiple": 0, "actionlink": "none"},
       "KAPPA" : { "type": "compulsory", "description": "Spring constant of the harmonic restraining potential", "multiple": 0, "actionlink": "none"},
       "FICT_MAX" : { "type": "compulsory", "description": "Maximum values reachable for the fictitious dynamical variables", "multiple": 0, "actionlink": "none"},
       "FICT_MIN" : { "type": "compulsory", "description": "Minimum values reachable for the fictitious dynamical variables", "multiple": 0, "actionlink": "none"},
       "FICT" : { "type": "optional", "description": "The initial values of the fictitious dynamical variables", "multiple": 0, "actionlink": "none"},
       "VFICT" : { "type": "optional", "description": "The initial velocities of the fictitious dynamical variables", "multiple": 0, "actionlink": "none"},
       "MFICT" : { "type": "optional", "description": "Masses of each fictitious dynamical variable", "multiple": 0, "actionlink": "none"},
       "XETA" : { "type": "optional", "description": "The initial eta variable of the Nose-Hoover thermostat for the fictitious dynamical variables", "multiple": 0, "actionlink": "none"},
       "VETA" : { "type": "optional", "description": "The initial velocity of eta variable", "multiple": 0, "actionlink": "none"},
       "META" : { "type": "optional", "description": "Mass of eta variable", "multiple": 0, "actionlink": "none"},
       "FLOG" : { "type": "compulsory", "description": "The initial free energy value in the LogMFD/PD run", "multiple": 0, "actionlink": "none"},
       "WORK" : { "type": "optional", "description": "The initial value of the work done by fictitious dynamical variables in each replica", "multiple": 0, "actionlink": "none"},
       "TEMPPD" : { "type": "optional", "description": "Temperature of the Boltzmann factor in the Jarzynski weight in LogPD (Gromacs only)", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "_fict" : {
           "flag": "default",
           "type": "scalar",
           "description": "For example, the fictitious collective variable for LogMFD is specified as ARG=dist12 and LABEL=logmfd in LOGMFD section in Plumed input file, the associated fictitious dynamical variable can be specified as PRINT ARG=dist12,logmfd"
         },
         "_vfict" : {
           "flag": "default",
           "type": "scalar",
           "description": "For example, the fictitious collective variable for LogMFD is specified as ARG=dist12 and LABEL=logmfd in LOGMFD section in Plumed input file, the velocity of the associated fictitious dynamical variable can be specified as PRINT ARG=dist12,logmfd"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n               INTERVAL - Period of MD steps (N_m) to update fictitious dynamical \n                          variables. \n                DELTA_T - Time step for the fictitious dynamical variables (DELTA_T=1 \n                          often works). \n             THERMOSTAT - Type of thermostat for the fictitious dynamical variables. \n                          NVE, NVT, VS are available. \n                  KAPPA - Spring constant of the harmonic restraining potential. \n               FICT_MAX - Maximum values reachable for the fictitious dynamical \n                          variables. The variables will elastically bounce back at the boundary \n                          (mirror boundary). \n               FICT_MIN - Minimum values reachable for the fictitious dynamical \n                          variables. The variables will elastically bounce back at the boundary \n                          (mirror boundary). \n                   FLOG - The initial free energy value in the LogMFD/PD run.The \n                          origin of the free energy profile is adjusted by FLOG to realize \n                          F(X(t)) > 0 at any X(t), resulting in enhanced barrier-crossing. \n                          (The value of H_log is automatically set according to FLOG). In \n                          fact, F(X(t)) is correctly estimated in PLUMED even when F(X(t)) \n                          < 0 in the LogMFD/PD run. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                   TEMP - Target temperature for the fictitious dynamical variables \n                          in LogMFD/PD. It is recommended to set TEMP to be the same as \n                          the temperature of the MD system in any thermostated LogMFD/PD \n                          run. If not provided, it will be taken from the temperature of \n                          the MD system (Gromacs only). \n                   TAMD - When TAMD=1, TAMD/d-AFED calculations can be performed \n                          instead of LogMFD. Otherwise, the LogMFD protocol is switched on \n                          (default). \n                  ALPHA - Alpha parameter for LogMFD. If not provided or provided as \n                          0, it will be taken as 1/gamma. If gamma is also not provided, \n                          Alpha is set as 4, which is a sensible value when the unit of \n                          kcal/mol is used. \n                  GAMMA - Gamma parameter for LogMFD. If not provided or provided as \n                          0, it will be taken as 1/alpha. If alpha is also not provided, \n                          Gamma is set as 0.25, which is a sensible value when the unit of \n                          kcal/mol is used. \n                   FICT - The initial values of the fictitious dynamical variables. \n                          If not provided, they are set equal to their corresponding CVs \n                          for the initial atomic configuration. \n                  VFICT - The initial velocities of the fictitious dynamical \n                          variables. If not provided, they will be taken as 0. If THERMOSTAT=VS, \n                          they are instead automatically adjusted according to TEMP. \n                  MFICT - Masses of each fictitious dynamical variable. If not \n                          provided, they will be taken as 10000. \n                   XETA - The initial eta variable of the Nose-Hoover thermostat for \n                          the fictitious dynamical variables. If not provided, it will be \n                          taken as 0. \n                   VETA - The initial velocity of eta variable. If not provided, it \n                          will be taken as 0. \n                   META - Mass of eta variable. If not provided, it will be taken as \n                          N*kb*T*100*100. \n                   WORK - The initial value of the work done by fictitious dynamical \n                          variables in each replica. If not provided, it will be taken as 0. \n                 TEMPPD - Temperature of the Boltzmann factor in the Jarzynski weight \n                          in LogPD (Gromacs only). TEMPPD should be the same as the \n                          temperature of the MD system, while TEMP may be (in principle) \n                          different from it. If not provided, TEMPPD is set to be the same \n                          value as TEMP. \n\n"
  },
  "LOGSUMEXP": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LOGSUMEXP",
    "description" : "This action takes the exponential of a vector of logarithms and divides each element of the vector by the sum of the exponentials.",
    "module" : "landmarks",
    "displayname" : "LOGSUMEXP",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the vector of logweights that you would like to normalise using the logsumexp trick", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the logarithms of the input weights logweights that are computed with the log-sum weights formula"
         }
       }
    },
    "needs" : ["HIGHEST", "CUSTOM", "SUM"],
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the vector of logweights that you would like to normalise \n                          using the logsumexp trick \n"
  },
  "LOWER_WALLS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LOWER_WALLS",
    "description" : "Defines a wall for the value of one or more collective variables,",
    "module" : "bias",
    "displayname" : "LOWER_WALLS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the arguments on which the bias is acting", "multiple": 1, "actionlink": "none", "argtype": "scalar/vector"},
       "AT" : { "type": "compulsory", "description": "the positions of the wall", "multiple": 0, "actionlink": "none"},
       "KAPPA" : { "type": "compulsory", "description": "the force constant for the wall", "multiple": 0, "actionlink": "none"},
       "OFFSET" : { "type": "compulsory", "description": " the offset for the start of the wall", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "EXP" : { "type": "compulsory", "description": " the powers for the walls", "multiple": 0, "actionlink": "none", "default": "2.0"},
       "EPS" : { "type": "compulsory", "description": " the values for s_i in the expression for a wall", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "force2" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the squared force due to this bias potential"
         }
       }
    },
    "needs" : ["COMBINE", "CUSTOM", "SUM", "BIASVALUE"],
    "help" : "\nThe following arguments are compulsory: \n\n                     AT - the positions of the wall. The a_i in the expression for a \n                          wall. \n                  KAPPA - the force constant for the wall. The k_i in the expression \n                          for a wall. \n                 OFFSET - ( default=0.0 ) the offset for the start of the wall. The \n                          o_i in the expression for a wall. \n                    EXP - ( default=2.0 ) the powers for the walls. The e_i in the \n                          expression for a wall. \n                    EPS - ( default=1.0 ) the values for s_i in the expression for a \n                          wall \n                    ARG - the arguments on which the bias is acting. You can use \n                          multiple instances of this keyword i.e. ARG1, ARG2, ARG3... \n\n"
  },
  "LOWER_WALLS_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LOWER_WALLS_SCALAR",
    "description" : "",
    "module" : "bias",
    "displayname" : "LOWER_WALLS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "AT" : { "type": "compulsory", "description": "the positions of the wall", "multiple": 0, "actionlink": "none"},
       "KAPPA" : { "type": "compulsory", "description": "the force constant for the wall", "multiple": 0, "actionlink": "none"},
       "OFFSET" : { "type": "compulsory", "description": " the offset for the start of the wall", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "EXP" : { "type": "compulsory", "description": " the powers for the walls", "multiple": 0, "actionlink": "none", "default": "2.0"},
       "EPS" : { "type": "compulsory", "description": " the values for s_i in the expression for a wall", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "force2" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the squared force due to this bias potential"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n                     AT - the positions of the wall. The a_i in the expression for a \n                          wall. \n                  KAPPA - the force constant for the wall. The k_i in the expression \n                          for a wall. \n                 OFFSET - ( default=0.0 ) the offset for the start of the wall. The \n                          o_i in the expression for a wall. \n                    EXP - ( default=2.0 ) the powers for the walls. The e_i in the \n                          expression for a wall. \n                    EPS - ( default=1.0 ) the values for s_i in the expression for a \n                          wall \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n"
  },
  "LOWEST": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LOWEST",
    "description" : "This function can be used to find the lowest colvar by magnitude in a set.",
    "module" : "function",
    "displayname" : "LOWEST",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the values input to this function", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector/matrix that should be used to determine which elements of the vector/matrix should be computed", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the highest of the input values"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the values input to this function \n                   MASK - the label for a sparse vector/matrix that should be used to \n                          determine which elements of the vector/matrix should be computed \n\n"
  },
  "LOWEST_ONEARG": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LOWEST_ONEARG",
    "description" : "",
    "module" : "function",
    "displayname" : "LOWEST",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the vector/matrix that is being used in input", "multiple": 0, "actionlink": "none", "argtype": "vector/matrix"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the highest of the input values"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the vector/matrix that is being used in input \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n"
  },
  "LOWEST_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LOWEST_SCALAR",
    "description" : "",
    "module" : "function",
    "displayname" : "LOWEST",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the highest of the input values"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n"
  },
  "LOWEST_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/LOWEST_VECTOR",
    "description" : "",
    "module" : "function",
    "displayname" : "LOWEST",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and vector that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the smallest element in the input vector if one vector specified"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and vector that on which the \n                          function is being calculated elementwise \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                 USEGPU - ( default=off ) run this calculation on the GPU \n"
  },
  "MAHALANOBIS_DISTANCE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MAHALANOBIS_DISTANCE",
    "description" : "Calculate the Mahalanobis distance between two points in CV space",
    "module" : "refdist",
    "displayname" : "MAHALANOBIS_DISTANCE",
     "dois" : ["10.1073/pnas.1011511107", "10.1021/acs.jctc.7b00993"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG1" : { "type": "compulsory", "description": "The point that we are calculating the distance from", "multiple": 0, "actionlink": "none"},
       "ARG2" : { "type": "compulsory", "description": "The point that we are calculating the distance to", "multiple": 0, "actionlink": "none"},
       "METRIC" : { "type": "compulsory", "description": "The inverse covariance matrix that should be used when calculating the distance", "multiple": 0, "actionlink": "none"},
       "SQUARED" : { "type": "flag", "description": " The squared distance should be calculated", "multiple": 0, "actionlink": "none", "default": "off"},
       "VON_MISSES" : { "type": "flag", "description": " Compute the mahalanobis distance in a way that is more sympathetic to the periodic boundary conditions", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the Mahalanobis distances between the input vectors"
         }
       }
    },
    "needs" : ["DISPLACEMENT", "CUSTOM", "OUTER_PRODUCT", "TRANSPOSE", "MATRIX_PRODUCT_DIAGONAL", "CONSTANT", "MATRIX_VECTOR_PRODUCT", "MATRIX_PRODUCT", "COMBINE"],
    "help" : "\nThe following arguments are compulsory: \n\n                   ARG1 - The point that we are calculating the distance from \n                   ARG2 - The point that we are calculating the distance to \n                 METRIC - The inverse covariance matrix that should be used when \n                          calculating the distance \n\nIn addition you may use the following options: \n\n                SQUARED - ( default=off ) The squared distance should be calculated \n             VON_MISSES - ( default=off ) Compute the mahalanobis distance in a way \n                          that is more sympathetic to the periodic boundary conditions \n"
  },
  "MASS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MASS",
    "description" : "Get the mass of one or multiple atoms",
    "module" : "colvar",
    "displayname" : "MASS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the atom numbers that you would like to store the masses and charges of", "multiple": 1, "actionlink": "none"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the MASS of the atom/s"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the atom numbers that you would like to store the masses \n                          and charges of. For more information on how to specify lists of \n                          atoms see \ref Group \n"
  },
  "MATHEVAL": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MATHEVAL",
    "description" : "An alias to the CUSTOM function that can also be used to calaculate combinations of variables using a custom expression.",
    "module" : "function",
    "displayname" : "MATHEVAL",
    "replacement" : "CUSTOM",
     "dois" : ["10.1093/nar/gkv872"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "PERIODIC" : { "type": "compulsory", "description": "if the output of your function is periodic then you should specify the periodicity of the function", "multiple": 0, "actionlink": "none"},
       "FUNC" : { "type": "compulsory", "description": "the function you wish to evaluate", "multiple": 0, "actionlink": "none"},
       "VAR" : { "type": "optional", "description": "the names to give each of the arguments in the function", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs ", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the values input to this function", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix/grid"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector/matrix that should be used to determine which elements of the vector/matrix should be computed", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector/matrix/grid",
           "description": "an arbitrary function"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n               PERIODIC - if the output of your function is periodic then you should \n                          specify the periodicity of the function. If the output is not \n                          periodic you must state this using PERIODIC=NO \n                   FUNC - the function you wish to evaluate \n                    ARG - the values input to this function \n                    VAR - the names to give each of the arguments in the function. If \n                          you have up to three arguments in your function you can use x, \n                          y and z to refer to them. Otherwise you must use this flag to \n                          give your variables names. \n                   MASK - the label for a sparse vector/matrix that should be used to \n                          determine which elements of the vector/matrix should be computed \n\n"
  },
  "MATHEVAL_GRID": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MATHEVAL_GRID",
    "description" : "",
    "module" : "gridtools",
    "displayname" : "MATHEVAL",
    "replacement" : "CUSTOM",
     "dois" : ["10.1093/nar/gkv872"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "PERIODIC" : { "type": "compulsory", "description": "if the output of your function is periodic then you should specify the periodicity of the function", "multiple": 0, "actionlink": "none"},
       "FUNC" : { "type": "compulsory", "description": "the function you wish to evaluate", "multiple": 0, "actionlink": "none"},
       "VAR" : { "type": "optional", "description": "the names to give each of the arguments in the function", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs ", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars and functions on a grid that we are using to compute the required function", "multiple": 0, "actionlink": "none", "argtype": "scalar/grid"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "grid",
           "description": "the grid obtained by doing an element-wise application of an arbitrary function to the input grid"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n               PERIODIC - if the output of your function is periodic then you should \n                          specify the periodicity of the function. If the output is not \n                          periodic you must state this using PERIODIC=NO \n                   FUNC - the function you wish to evaluate \n                    ARG - the labels of the scalars and functions on a grid that we \n                          are using to compute the required function \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                    VAR - the names to give each of the arguments in the function. If \n                          you have up to three arguments in your function you can use x, \n                          y and z to refer to them. Otherwise you must use this flag to \n                          give your variables names. \n\n"
  },
  "MATHEVAL_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MATHEVAL_MATRIX",
    "description" : "",
    "module" : "function",
    "displayname" : "MATHEVAL",
    "replacement" : "CUSTOM",
     "dois" : ["10.1093/nar/gkv872"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and matrices that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/matrix"},
       "MASK" : { "type": "optional", "description": "a matrix that is used to used to determine which elements of the output matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "PERIODIC" : { "type": "compulsory", "description": "if the output of your function is periodic then you should specify the periodicity of the function", "multiple": 0, "actionlink": "none"},
       "FUNC" : { "type": "compulsory", "description": "the function you wish to evaluate", "multiple": 0, "actionlink": "none"},
       "VAR" : { "type": "optional", "description": "the names to give each of the arguments in the function", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs ", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "the matrix obtained by doing an element-wise application of an arbitrary function to the input matrix"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and matrices that on which the \n                          function is being calculated elementwise \n               PERIODIC - if the output of your function is periodic then you should \n                          specify the periodicity of the function. If the output is not \n                          periodic you must state this using PERIODIC=NO \n                   FUNC - the function you wish to evaluate \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a matrix that is used to used to determine which elements \n                          of the output matrix to compute \n                    VAR - the names to give each of the arguments in the function. If \n                          you have up to three arguments in your function you can use x, \n                          y and z to refer to them. Otherwise you must use this flag to \n                          give your variables names. \n\n"
  },
  "MATHEVAL_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MATHEVAL_SCALAR",
    "description" : "",
    "module" : "function",
    "displayname" : "MATHEVAL",
    "replacement" : "CUSTOM",
     "dois" : ["10.1093/nar/gkv872"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "PERIODIC" : { "type": "compulsory", "description": "if the output of your function is periodic then you should specify the periodicity of the function", "multiple": 0, "actionlink": "none"},
       "FUNC" : { "type": "compulsory", "description": "the function you wish to evaluate", "multiple": 0, "actionlink": "none"},
       "VAR" : { "type": "optional", "description": "the names to give each of the arguments in the function", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs ", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector/matrix/grid",
           "description": "an arbitrary function"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n               PERIODIC - if the output of your function is periodic then you should \n                          specify the periodicity of the function. If the output is not \n                          periodic you must state this using PERIODIC=NO \n                   FUNC - the function you wish to evaluate \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                    VAR - the names to give each of the arguments in the function. If \n                          you have up to three arguments in your function you can use x, \n                          y and z to refer to them. Otherwise you must use this flag to \n                          give your variables names. \n\n"
  },
  "MATHEVAL_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MATHEVAL_VECTOR",
    "description" : "",
    "module" : "function",
    "displayname" : "MATHEVAL",
    "replacement" : "CUSTOM",
     "dois" : ["10.1093/nar/gkv872"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and vector that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "PERIODIC" : { "type": "compulsory", "description": "if the output of your function is periodic then you should specify the periodicity of the function", "multiple": 0, "actionlink": "none"},
       "FUNC" : { "type": "compulsory", "description": "the function you wish to evaluate", "multiple": 0, "actionlink": "none"},
       "VAR" : { "type": "optional", "description": "the names to give each of the arguments in the function", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs ", "multiple": 0, "actionlink": "none"},
       "MASK" : { "type": "optional", "description": "the label for a sparse matrix that should be used to determine which elements of the matrix should be computed", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the vector obtained by doing an element-wise application of an arbitrary function to the input vectors"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and vector that on which the \n                          function is being calculated elementwise \n               PERIODIC - if the output of your function is periodic then you should \n                          specify the periodicity of the function. If the output is not \n                          periodic you must state this using PERIODIC=NO \n                   FUNC - the function you wish to evaluate \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                    VAR - the names to give each of the arguments in the function. If \n                          you have up to three arguments in your function you can use x, \n                          y and z to refer to them. Otherwise you must use this flag to \n                          give your variables names. \n                   MASK - the label for a sparse matrix that should be used to \n                          determine which elements of the matrix should be computed \n\n"
  },
  "MATRIX_PRODUCT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MATRIX_PRODUCT",
    "description" : "Calculate the product of two matrices",
    "module" : "matrixtools",
    "displayname" : "MATRIX_PRODUCT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "a matrix that is used to used to determine which elements of the output matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "ARG" : { "type": "compulsory", "description": "the label of the two matrices from which the product is calculated", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "ELEMENTS_ON_DIAGONAL_ARE_ZERO" : { "type": "flag", "description": " set all diagonal elements to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "the product of the two input matrices"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label of the two matrices from which the product is \n                          calculated \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \nELEMENTS_ON_DIAGONAL_ARE_ZERO - ( default=off ) set all diagonal elements to zero \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a matrix that is used to used to determine which elements \n                          of the output matrix to compute \n\n"
  },
  "MATRIX_PRODUCT_DIAGONAL": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MATRIX_PRODUCT_DIAGONAL",
    "description" : "Calculate the product of two matrices and return a vector that contains the diagonal elements of the ouptut vector",
    "module" : "refdist",
    "displayname" : "MATRIX_PRODUCT_DIAGONAL",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the two vectors/matrices whose product are to be taken", "multiple": 0, "actionlink": "none", "argtype": "vector/matrix"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "a vector containing the diagonal elements of the matrix that obtaned by multiplying the two input matrices together"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the two vectors/matrices whose product are to be taken \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n"
  },
  "MATRIX_VECTOR_PRODUCT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MATRIX_VECTOR_PRODUCT",
    "description" : "Calculate the product of the matrix and the vector",
    "module" : "matrixtools",
    "displayname" : "MATRIX_VECTOR_PRODUCT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the label for the matrix and the vector/scalar that are being multiplied", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs ", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the vector that is obtained by taking the product between the matrix and the vector that were input"
         },
         ".#!custom" : {
           "flag": "default",
           "type": "scalar",
           "description": "the names of the output components for this action depend on the actions input file see the example inputs below for details"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label for the matrix and the vector/scalar that are \n                          being multiplied. Alternatively, you can provide labels for \n                          multiple matrices and a single vector or labels for a single matrix \n                          and multiple vectors. In these cases multiple matrix vector \n                          products will be computed. \n\nIn addition you may use the following options: \n\n                 USEGPU - ( default=off ) run this calculation on the GPU \n"
  },
  "MATRIX_VECTOR_PRODUCT_PROPER": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MATRIX_VECTOR_PRODUCT_PROPER",
    "description" : "",
    "module" : "matrixtools",
    "displayname" : "MATRIX_VECTOR_PRODUCT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the label for the matrix and the vector/scalar that are being multiplied", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs ", "multiple": 0, "actionlink": "none"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the vector that is obtained by taking the product between the matrix and the vector that were input"
         },
         ".#!custom" : {
           "flag": "default",
           "type": "scalar",
           "description": "the names of the output components for this action depend on the actions input file see the example inputs below for details"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label for the matrix and the vector/scalar that are \n                          being multiplied. Alternatively, you can provide labels for \n                          multiple matrices and a single vector or labels for a single matrix \n                          and multiple vectors. In these cases multiple matrix vector \n                          products will be computed. \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n"
  },
  "MATRIX_VECTOR_PRODUCT_ROWSUMS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MATRIX_VECTOR_PRODUCT_ROWSUMS",
    "description" : "",
    "module" : "matrixtools",
    "displayname" : "MATRIX_VECTOR_PRODUCT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the label for the matrix and the vector/scalar that are being multiplied", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs ", "multiple": 0, "actionlink": "none"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the vector that is obtained by taking the product between the matrix and the vector that were input"
         },
         ".#!custom" : {
           "flag": "default",
           "type": "scalar",
           "description": "the names of the output components for this action depend on the actions input file see the example inputs below for details"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label for the matrix and the vector/scalar that are \n                          being multiplied. Alternatively, you can provide labels for \n                          multiple matrices and a single vector or labels for a single matrix \n                          and multiple vectors. In these cases multiple matrix vector \n                          products will be computed. \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n"
  },
  "MAXENT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MAXENT",
    "description" : "Add a linear biasing potential on one or more variables that satisfies a maximum entropy principle.",
    "module" : "bias",
    "displayname" : "MAXENT",
     "dois" : ["10.1021/acs.jctc.6b00944"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "KAPPA" : { "type": "compulsory", "description": " specifies the initial value for the learning rate", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "TAU" : { "type": "compulsory", "description": "Specify the dumping time for the learning rate", "multiple": 0, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": "specify the restraint type", "multiple": 0, "actionlink": "none"},
       "ERROR_TYPE" : { "type": "optional", "description": "specify the prior on the error to use", "multiple": 0, "actionlink": "none"},
       "TSTART" : { "type": "optional", "description": "time from where to start averaging the Lagrangian multiplier", "multiple": 0, "actionlink": "none"},
       "TEND" : { "type": "optional", "description": "time in ps where to stop to compute the average of Lagrangian multiplier", "multiple": 0, "actionlink": "none"},
       "ALPHA" : { "type": "optional", "description": "default=1", "multiple": 0, "actionlink": "none", "default": "1.0; To be used with LAPLACE KEYWORD, allows to choose a prior function proportional to a Gaussian times an exponential function. ALPHA=1 correspond to the LAPLACE prior."},
       "AT" : { "type": "compulsory", "description": "the position of the restraint", "multiple": 0, "actionlink": "none"},
       "SIGMA" : { "type": "optional", "description": "The typical errors expected on observable", "multiple": 0, "actionlink": "none"},
       "FILE" : { "type": "optional", "description": "Lagrangian multipliers output file", "multiple": 0, "actionlink": "none"},
       "LEARN_REPLICA" : { "type": "optional", "description": "In a multiple replica environment specify which is the reference replica", "multiple": 0, "actionlink": "none"},
       "APPLY_WEIGHTS" : { "type": "optional", "description": "Vector of weights containing 1 in correspondence of each replica that will receive the Lagrangian multiplier from the current one", "multiple": 0, "actionlink": "none"},
       "PACE" : { "type": "optional", "description": "the frequency for Lagrangian multipliers update", "multiple": 0, "actionlink": "none"},
       "PRINT_STRIDE" : { "type": "optional", "description": "stride of Lagrangian multipliers output file", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "optional", "description": "specify format for Lagrangian multipliers files (useful to decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "REWEIGHT" : { "type": "flag", "description": " to be used with plumed driver in order to reweight a trajectory a posteriori", "multiple": 0, "actionlink": "none", "default": "off"},
       "NO_BROADCAST" : { "type": "flag", "description": " If active will avoid Lagrangian multipliers to be communicated to other replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "TEMP" : { "type": "optional", "description": "the system temperature", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "force2" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the squared force due to this bias potential"
         },
         "work" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the work done by the biasing force"
         },
         "_work" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the work done by the biasing force for each argument"
         },
         "_error" : {
           "flag": "default",
           "type": "scalar",
           "description": "Instantaneous values of the discrepancy between the observable and the restraint center"
         },
         "_coupling" : {
           "flag": "default",
           "type": "scalar",
           "description": "Instantaneous values of Lagrangian multipliers"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n                  KAPPA - ( default=0.0 ) specifies the initial value for the \n                          learning rate \n                    TAU - Specify the dumping time for the learning rate. \n                   TYPE - specify the restraint type. EQUAL to restrain the variable \n                          at a given equilibrium value INEQUAL< to restrain the variable \n                          to be smaller than a given value INEQUAL> to restrain the \n                          variable to be greater than a given value \n                     AT - the position of the restraint \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n               REWEIGHT - ( default=off ) to be used with plumed driver in order to \n                          reweight a trajectory a posteriori \n           NO_BROADCAST - ( default=off ) If active will avoid Lagrangian multipliers \n                          to be communicated to other replicas. \n             ERROR_TYPE - specify the prior on the error to use.GAUSSIAN: use a \n                          Gaussian prior LAPLACE: use a Laplace prior \n                 TSTART - time from where to start averaging the Lagrangian \n                          multiplier. By default no average is computed, hence lambda is updated \n                          every PACE steps \n                   TEND - time in ps where to stop to compute the average of \n                          Lagrangian multiplier. From this time until the end of the simulation \n                          Lagrangian multipliers are kept fix to the average computed between \n                          TSTART and TEND; \n                  ALPHA - default=1.0; To be used with LAPLACE KEYWORD, allows to \n                          choose a prior function proportional to a Gaussian times an \n                          exponential function. ALPHA=1 correspond to the LAPLACE prior. \n                  SIGMA - The typical errors expected on observable \n                   FILE - Lagrangian multipliers output file. The default name is: \n                          label name followed by the string .LAGMULT \n          LEARN_REPLICA - In a multiple replica environment specify which is the \n                          reference replica. By default replica 0 will be used. \n          APPLY_WEIGHTS - Vector of weights containing 1 in correspondence of each \n                          replica that will receive the Lagrangian multiplier from the \n                          current one. \n                   PACE - the frequency for Lagrangian multipliers update \n           PRINT_STRIDE - stride of Lagrangian multipliers output file. If no STRIDE \n                          is passed they are written every time they are updated (PACE). \n                    FMT - specify format for Lagrangian multipliers files (useful to \n                          decrease the number of digits in regtests) \n                   TEMP - the system temperature. This is required if you are \n                          reweighting. \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n\n"
  },
  "MAZE_LOSS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MAZE_LOSS",
    "description" : "Define a coarse-grained loss function describing interactions in a",
    "module" : "maze",
    "displayname" : "MAZE_LOSS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "PARAMS" : { "type": "compulsory", "description": "Parameters for the loss function", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the value of the loss function"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                 PARAMS - Parameters for the loss function. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n"
  },
  "MAZE_MEMETIC_SAMPLING": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MAZE_MEMETIC_SAMPLING",
    "description" : "Calculates the biasing direction along which the ligand unbinds by",
    "module" : "maze",
    "displayname" : "MAZE_MEMETIC_SAMPLING",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "SERIAL" : { "type": "flag", "description": " Perform the simulation in serial -- used only for debugging purposes, should not be used otherwise", "multiple": 0, "actionlink": "none", "default": "off"},
       "PAIR" : { "type": "flag", "description": " Pair only the 1st element of the 1st group with the 1st element in the second, etc", "multiple": 0, "actionlink": "none", "default": "off"},
       "NLIST" : { "type": "flag", "description": " Use a neighbor list of ligand-protein atom pairs to speed up the calculating of the distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "optional", "description": "Neighbor list cut-off for the distances of ligand-protein atom pairs", "multiple": 0, "actionlink": "none"},
       "NL_STRIDE" : { "type": "optional", "description": "Update stride for the ligand-protein atom pairs in the neighbor list", "multiple": 0, "actionlink": "none"},
       "N_ITER" : { "type": "compulsory", "description": "Number of optimization steps", "multiple": 0, "actionlink": "none"},
       "LOSS" : { "type": "optional", "description": "Loss function describing ligand-protein interactions required by every optimizer", "multiple": 0, "actionlink": "none"},
       "LIGAND" : { "type": "atoms", "description": "Indices of ligand atoms", "multiple": 1, "actionlink": "none"},
       "PROTEIN" : { "type": "atoms", "description": "Indices of protein atoms", "multiple": 1, "actionlink": "none"},
       "OPTIMIZER_STRIDE" : { "type": "compulsory", "description": "Optimizer stride", "multiple": 0, "actionlink": "none"},
       "CAPACITY" : { "type": "compulsory", "description": "Sampling set size", "multiple": 0, "actionlink": "none"},
       "MUTATION_RATE" : { "type": "compulsory", "description": "Probability of mutation", "multiple": 0, "actionlink": "none"},
       "MATING_RATE" : { "type": "compulsory", "description": "Probability of mating", "multiple": 0, "actionlink": "none"},
       "CAUCHY_ALPHA" : { "type": "compulsory", "description": "Mean of Cauchy distribution for sampling", "multiple": 0, "actionlink": "none"},
       "CAUCHY_BETA" : { "type": "compulsory", "description": "Spread of Cauchy distribution for sampling", "multiple": 0, "actionlink": "none"},
       "LOCAL_SEARCH_ON" : { "type": "flag", "description": " Turn local search on", "multiple": 0, "actionlink": "none", "default": "off"},
       "N_LOCAL_ITER" : { "type": "optional", "description": "Number of local search iterations", "multiple": 0, "actionlink": "none"},
       "LOCAL_SEARCH_RATE" : { "type": "optional", "description": "Rate of mutation in local search", "multiple": 0, "actionlink": "none"},
       "LOCAL_SEARCH_TYPE" : { "type": "optional", "description": "Type of local search", "multiple": 0, "actionlink": "none"},
       "output" : {
         "x" : {
           "flag": "default",
           "type": "scalar",
           "description": "Optimal biasing direction; x component"
         },
         "y" : {
           "flag": "default",
           "type": "scalar",
           "description": "Optimal biasing direction; y component"
         },
         "z" : {
           "flag": "default",
           "type": "scalar",
           "description": "Optimal biasing direction; z component"
         },
         "loss" : {
           "flag": "default",
           "type": "scalar",
           "description": "Loss function value defined by the provided pairing function"
         },
         "sr" : {
           "flag": "default",
           "type": "scalar",
           "description": "Sampling radius"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                 LIGAND - Indices of ligand atoms.. For more information on how to \n                          specify lists of atoms see \ref Group \n                PROTEIN - Indices of protein atoms.. For more information on how to \n                          specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                 N_ITER - Number of optimization steps. Required only for optimizers, \n                          do not pass this keyword to the fake optimizers (results in \n                          crash) , e.g., random walk, steered MD, or random acceleration MD. \n       OPTIMIZER_STRIDE - Optimizer stride. Sets up a callback function that launches \n                          the optimization process every OPTIMIZER_STRIDE. \n               CAPACITY - Sampling set size. \n          MUTATION_RATE - Probability of mutation. \n            MATING_RATE - Probability of mating. \n           CAUCHY_ALPHA - Mean of Cauchy distribution for sampling. \n            CAUCHY_BETA - Spread of Cauchy distribution for sampling. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 SERIAL - ( default=off ) Perform the simulation in serial -- used \n                          only for debugging purposes, should not be used otherwise. \n                   PAIR - ( default=off ) Pair only the 1st element of the 1st group \n                          with the 1st element in the second, etc. \n                  NLIST - ( default=off ) Use a neighbor list of ligand-protein atom \n                          pairs to speed up the calculating of the distances. \n        LOCAL_SEARCH_ON - ( default=off ) Turn local search on. \n              NL_CUTOFF - Neighbor list cut-off for the distances of ligand-protein \n                          atom pairs. \n              NL_STRIDE - Update stride for the ligand-protein atom pairs in the \n                          neighbor list. \n                   LOSS - Loss function describing ligand-protein interactions \n                          required by every optimizer. \n           N_LOCAL_ITER - Number of local search iterations. \n      LOCAL_SEARCH_RATE - Rate of mutation in local search. \n      LOCAL_SEARCH_TYPE - Type of local search. \n\n"
  },
  "MAZE_OPTIMIZER_BIAS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MAZE_OPTIMIZER_BIAS",
    "description" : "Biases the ligand along the direction calculated by the chosen MAZE_OPTIMIZER.",
    "module" : "maze",
    "displayname" : "MAZE_OPTIMIZER_BIAS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "BIASING_RATE" : { "type": "compulsory", "description": "Biasing rate", "multiple": 0, "actionlink": "none"},
       "ALPHA" : { "type": "compulsory", "description": "Rescaled force constant", "multiple": 0, "actionlink": "none"},
       "OPTIMIZER" : { "type": "compulsory", "description": "Optimization technique to minimize the collective variable for ligand     unbinding: RANDOM_WALK,                STEERED_MD,                RANDOM_ACCELERATION_MD,                SIMULATED_ANNEALING,                MEMETIC_SAMPLING", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "force2" : {
           "flag": "default",
           "type": "scalar",
           "description": "Square of the biasing force"
         },
         "x" : {
           "flag": "default",
           "type": "scalar",
           "description": "Optimal biasing direction: x component"
         },
         "y" : {
           "flag": "default",
           "type": "scalar",
           "description": "Optimal biasing direction: y component"
         },
         "z" : {
           "flag": "default",
           "type": "scalar",
           "description": "Optimal biasing direction: z component"
         },
         "tdist" : {
           "flag": "default",
           "type": "scalar",
           "description": "Total distance traveled by biased atoms"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n           BIASING_RATE - Biasing rate. \n                  ALPHA - Rescaled force constant. \n              OPTIMIZER - Optimization technique to minimize the collective variable \n                          for ligand unbinding: RANDOM_WALK, STEERED_MD, \n                          RANDOM_ACCELERATION_MD, SIMULATED_ANNEALING, MEMETIC_SAMPLING \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n"
  },
  "MAZE_RANDOM_ACCELERATION_MD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MAZE_RANDOM_ACCELERATION_MD",
    "description" : "Performs random acceleration MD within the protein matrix.",
    "module" : "maze",
    "displayname" : "MAZE_RANDOM_ACCELERATION_MD",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "SERIAL" : { "type": "flag", "description": " Perform the simulation in serial -- used only for debugging purposes, should not be used otherwise", "multiple": 0, "actionlink": "none", "default": "off"},
       "PAIR" : { "type": "flag", "description": " Pair only the 1st element of the 1st group with the 1st element in the second, etc", "multiple": 0, "actionlink": "none", "default": "off"},
       "NLIST" : { "type": "flag", "description": " Use a neighbor list of ligand-protein atom pairs to speed up the calculating of the distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "optional", "description": "Neighbor list cut-off for the distances of ligand-protein atom pairs", "multiple": 0, "actionlink": "none"},
       "NL_STRIDE" : { "type": "optional", "description": "Update stride for the ligand-protein atom pairs in the neighbor list", "multiple": 0, "actionlink": "none"},
       "LOSS" : { "type": "optional", "description": "Loss function describing ligand-protein interactions required by every optimizer", "multiple": 0, "actionlink": "none"},
       "LIGAND" : { "type": "atoms", "description": "Indices of ligand atoms", "multiple": 1, "actionlink": "none"},
       "PROTEIN" : { "type": "atoms", "description": "Indices of protein atoms", "multiple": 1, "actionlink": "none"},
       "OPTIMIZER_STRIDE" : { "type": "compulsory", "description": "Optimizer stride", "multiple": 0, "actionlink": "none"},
       "R_MIN" : { "type": "compulsory", "description": "Minimal distance traveled before sampling a new direction of biasing", "multiple": 0, "actionlink": "none"},
       "output" : {
         "x" : {
           "flag": "default",
           "type": "scalar",
           "description": "Optimal biasing direction; x component"
         },
         "y" : {
           "flag": "default",
           "type": "scalar",
           "description": "Optimal biasing direction; y component"
         },
         "z" : {
           "flag": "default",
           "type": "scalar",
           "description": "Optimal biasing direction; z component"
         },
         "loss" : {
           "flag": "default",
           "type": "scalar",
           "description": "Loss function value defined by the provided pairing function"
         },
         "sr" : {
           "flag": "default",
           "type": "scalar",
           "description": "Sampling radius"
         },
         "dist" : {
           "flag": "default",
           "type": "scalar",
           "description": "Distance traveled in one sampling interval"
         },
         "tdist" : {
           "flag": "default",
           "type": "scalar",
           "description": "Total distance traveled by biased atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                 LIGAND - Indices of ligand atoms.. For more information on how to \n                          specify lists of atoms see \ref Group \n                PROTEIN - Indices of protein atoms.. For more information on how to \n                          specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n       OPTIMIZER_STRIDE - Optimizer stride. Sets up a callback function that launches \n                          the optimization process every OPTIMIZER_STRIDE. \n                  R_MIN - Minimal distance traveled before sampling a new direction \n                          of biasing. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 SERIAL - ( default=off ) Perform the simulation in serial -- used \n                          only for debugging purposes, should not be used otherwise. \n                   PAIR - ( default=off ) Pair only the 1st element of the 1st group \n                          with the 1st element in the second, etc. \n                  NLIST - ( default=off ) Use a neighbor list of ligand-protein atom \n                          pairs to speed up the calculating of the distances. \n              NL_CUTOFF - Neighbor list cut-off for the distances of ligand-protein \n                          atom pairs. \n              NL_STRIDE - Update stride for the ligand-protein atom pairs in the \n                          neighbor list. \n                   LOSS - Loss function describing ligand-protein interactions \n                          required by every optimizer. \n\n"
  },
  "MAZE_RANDOM_WALK": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MAZE_RANDOM_WALK",
    "description" : "Fake optimizer that can be used for debugging.",
    "module" : "maze",
    "displayname" : "MAZE_RANDOM_WALK",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "SERIAL" : { "type": "flag", "description": " Perform the simulation in serial -- used only for debugging purposes, should not be used otherwise", "multiple": 0, "actionlink": "none", "default": "off"},
       "PAIR" : { "type": "flag", "description": " Pair only the 1st element of the 1st group with the 1st element in the second, etc", "multiple": 0, "actionlink": "none", "default": "off"},
       "NLIST" : { "type": "flag", "description": " Use a neighbor list of ligand-protein atom pairs to speed up the calculating of the distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "optional", "description": "Neighbor list cut-off for the distances of ligand-protein atom pairs", "multiple": 0, "actionlink": "none"},
       "NL_STRIDE" : { "type": "optional", "description": "Update stride for the ligand-protein atom pairs in the neighbor list", "multiple": 0, "actionlink": "none"},
       "LOSS" : { "type": "optional", "description": "Loss function describing ligand-protein interactions required by every optimizer", "multiple": 0, "actionlink": "none"},
       "LIGAND" : { "type": "atoms", "description": "Indices of ligand atoms", "multiple": 1, "actionlink": "none"},
       "PROTEIN" : { "type": "atoms", "description": "Indices of protein atoms", "multiple": 1, "actionlink": "none"},
       "OPTIMIZER_STRIDE" : { "type": "compulsory", "description": "Optimizer stride", "multiple": 0, "actionlink": "none"},
       "output" : {
         "x" : {
           "flag": "default",
           "type": "scalar",
           "description": "Optimal biasing direction; x component"
         },
         "y" : {
           "flag": "default",
           "type": "scalar",
           "description": "Optimal biasing direction; y component"
         },
         "z" : {
           "flag": "default",
           "type": "scalar",
           "description": "Optimal biasing direction; z component"
         },
         "loss" : {
           "flag": "default",
           "type": "scalar",
           "description": "Loss function value defined by the provided pairing function"
         },
         "sr" : {
           "flag": "default",
           "type": "scalar",
           "description": "Sampling radius"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                 LIGAND - Indices of ligand atoms.. For more information on how to \n                          specify lists of atoms see \ref Group \n                PROTEIN - Indices of protein atoms.. For more information on how to \n                          specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n       OPTIMIZER_STRIDE - Optimizer stride. Sets up a callback function that launches \n                          the optimization process every OPTIMIZER_STRIDE. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 SERIAL - ( default=off ) Perform the simulation in serial -- used \n                          only for debugging purposes, should not be used otherwise. \n                   PAIR - ( default=off ) Pair only the 1st element of the 1st group \n                          with the 1st element in the second, etc. \n                  NLIST - ( default=off ) Use a neighbor list of ligand-protein atom \n                          pairs to speed up the calculating of the distances. \n              NL_CUTOFF - Neighbor list cut-off for the distances of ligand-protein \n                          atom pairs. \n              NL_STRIDE - Update stride for the ligand-protein atom pairs in the \n                          neighbor list. \n                   LOSS - Loss function describing ligand-protein interactions \n                          required by every optimizer. \n\n"
  },
  "MAZE_SIMULATED_ANNEALING": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MAZE_SIMULATED_ANNEALING",
    "description" : "Calculates the biasing direction along which the ligand unbinds by minimizing",
    "module" : "maze",
    "displayname" : "MAZE_SIMULATED_ANNEALING",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "SERIAL" : { "type": "flag", "description": " Perform the simulation in serial -- used only for debugging purposes, should not be used otherwise", "multiple": 0, "actionlink": "none", "default": "off"},
       "PAIR" : { "type": "flag", "description": " Pair only the 1st element of the 1st group with the 1st element in the second, etc", "multiple": 0, "actionlink": "none", "default": "off"},
       "NLIST" : { "type": "flag", "description": " Use a neighbor list of ligand-protein atom pairs to speed up the calculating of the distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "optional", "description": "Neighbor list cut-off for the distances of ligand-protein atom pairs", "multiple": 0, "actionlink": "none"},
       "NL_STRIDE" : { "type": "optional", "description": "Update stride for the ligand-protein atom pairs in the neighbor list", "multiple": 0, "actionlink": "none"},
       "N_ITER" : { "type": "compulsory", "description": "Number of optimization steps", "multiple": 0, "actionlink": "none"},
       "LOSS" : { "type": "optional", "description": "Loss function describing ligand-protein interactions required by every optimizer", "multiple": 0, "actionlink": "none"},
       "LIGAND" : { "type": "atoms", "description": "Indices of ligand atoms", "multiple": 1, "actionlink": "none"},
       "PROTEIN" : { "type": "atoms", "description": "Indices of protein atoms", "multiple": 1, "actionlink": "none"},
       "OPTIMIZER_STRIDE" : { "type": "compulsory", "description": "Optimizer stride", "multiple": 0, "actionlink": "none"},
       "PROBABILITY_DECREASER" : { "type": "compulsory", "description": "Temperature-like parameter that is decreased during optimization to modify the Metropolis-Hastings acceptance probability", "multiple": 0, "actionlink": "none"},
       "COOLING" : { "type": "compulsory", "description": "Reduction factor for PROBABILITY_DECREASER, should be in (0, 1]", "multiple": 0, "actionlink": "none"},
       "COOLING_SCHEME" : { "type": "compulsory", "description": "Cooling scheme: geometric", "multiple": 0, "actionlink": "none"},
       "output" : {
         "x" : {
           "flag": "default",
           "type": "scalar",
           "description": "Optimal biasing direction; x component"
         },
         "y" : {
           "flag": "default",
           "type": "scalar",
           "description": "Optimal biasing direction; y component"
         },
         "z" : {
           "flag": "default",
           "type": "scalar",
           "description": "Optimal biasing direction; z component"
         },
         "loss" : {
           "flag": "default",
           "type": "scalar",
           "description": "Loss function value defined by the provided pairing function"
         },
         "sr" : {
           "flag": "default",
           "type": "scalar",
           "description": "Sampling radius"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                 LIGAND - Indices of ligand atoms.. For more information on how to \n                          specify lists of atoms see \ref Group \n                PROTEIN - Indices of protein atoms.. For more information on how to \n                          specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                 N_ITER - Number of optimization steps. Required only for optimizers, \n                          do not pass this keyword to the fake optimizers (results in \n                          crash) , e.g., random walk, steered MD, or random acceleration MD. \n       OPTIMIZER_STRIDE - Optimizer stride. Sets up a callback function that launches \n                          the optimization process every OPTIMIZER_STRIDE. \n  PROBABILITY_DECREASER - Temperature-like parameter that is decreased during \n                          optimization to modify the Metropolis-Hastings acceptance probability. \n                COOLING - Reduction factor for PROBABILITY_DECREASER, should be in \n                          (0, 1]. \n         COOLING_SCHEME - Cooling scheme: geometric. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 SERIAL - ( default=off ) Perform the simulation in serial -- used \n                          only for debugging purposes, should not be used otherwise. \n                   PAIR - ( default=off ) Pair only the 1st element of the 1st group \n                          with the 1st element in the second, etc. \n                  NLIST - ( default=off ) Use a neighbor list of ligand-protein atom \n                          pairs to speed up the calculating of the distances. \n              NL_CUTOFF - Neighbor list cut-off for the distances of ligand-protein \n                          atom pairs. \n              NL_STRIDE - Update stride for the ligand-protein atom pairs in the \n                          neighbor list. \n                   LOSS - Loss function describing ligand-protein interactions \n                          required by every optimizer. \n\n"
  },
  "MAZE_STEERED_MD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MAZE_STEERED_MD",
    "description" : "Performs a linear unbinding along a predefined biasing direction that",
    "module" : "maze",
    "displayname" : "MAZE_STEERED_MD",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "SERIAL" : { "type": "flag", "description": " Perform the simulation in serial -- used only for debugging purposes, should not be used otherwise", "multiple": 0, "actionlink": "none", "default": "off"},
       "PAIR" : { "type": "flag", "description": " Pair only the 1st element of the 1st group with the 1st element in the second, etc", "multiple": 0, "actionlink": "none", "default": "off"},
       "NLIST" : { "type": "flag", "description": " Use a neighbor list of ligand-protein atom pairs to speed up the calculating of the distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "optional", "description": "Neighbor list cut-off for the distances of ligand-protein atom pairs", "multiple": 0, "actionlink": "none"},
       "NL_STRIDE" : { "type": "optional", "description": "Update stride for the ligand-protein atom pairs in the neighbor list", "multiple": 0, "actionlink": "none"},
       "LOSS" : { "type": "optional", "description": "Loss function describing ligand-protein interactions required by every optimizer", "multiple": 0, "actionlink": "none"},
       "LIGAND" : { "type": "atoms", "description": "Indices of ligand atoms", "multiple": 1, "actionlink": "none"},
       "PROTEIN" : { "type": "atoms", "description": "Indices of protein atoms", "multiple": 1, "actionlink": "none"},
       "OPTIMIZER_STRIDE" : { "type": "compulsory", "description": "Optimizer stride", "multiple": 0, "actionlink": "none"},
       "PULLING" : { "type": "compulsory", "description": "Constant biasing direction", "multiple": 0, "actionlink": "none"},
       "output" : {
         "x" : {
           "flag": "default",
           "type": "scalar",
           "description": "Optimal biasing direction; x component"
         },
         "y" : {
           "flag": "default",
           "type": "scalar",
           "description": "Optimal biasing direction; y component"
         },
         "z" : {
           "flag": "default",
           "type": "scalar",
           "description": "Optimal biasing direction; z component"
         },
         "loss" : {
           "flag": "default",
           "type": "scalar",
           "description": "Loss function value defined by the provided pairing function"
         },
         "sr" : {
           "flag": "default",
           "type": "scalar",
           "description": "Sampling radius"
         },
         "tdist" : {
           "flag": "default",
           "type": "scalar",
           "description": "Total distance traveled by biased atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                 LIGAND - Indices of ligand atoms.. For more information on how to \n                          specify lists of atoms see \ref Group \n                PROTEIN - Indices of protein atoms.. For more information on how to \n                          specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n       OPTIMIZER_STRIDE - Optimizer stride. Sets up a callback function that launches \n                          the optimization process every OPTIMIZER_STRIDE. \n                PULLING - Constant biasing direction. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 SERIAL - ( default=off ) Perform the simulation in serial -- used \n                          only for debugging purposes, should not be used otherwise. \n                   PAIR - ( default=off ) Pair only the 1st element of the 1st group \n                          with the 1st element in the second, etc. \n                  NLIST - ( default=off ) Use a neighbor list of ligand-protein atom \n                          pairs to speed up the calculating of the distances. \n              NL_CUTOFF - Neighbor list cut-off for the distances of ligand-protein \n                          atom pairs. \n              NL_STRIDE - Update stride for the ligand-protein atom pairs in the \n                          neighbor list. \n                   LOSS - Loss function describing ligand-protein interactions \n                          required by every optimizer. \n\n"
  },
  "MEAN": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MEAN",
    "description" : "Calculate the arithmetic mean of the elements in a vector",
    "module" : "function",
    "displayname" : "MEAN",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the vector/matrix/grid whose elements shuld be added together", "multiple": 0, "actionlink": "none", "argtype": "vector/matrix/grid"},
       "PERIODIC" : { "type": "compulsory", "description": "if the output of your function is periodic then you should specify the periodicity of the function", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs ", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the MEAN of the elements in the input value"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the vector/matrix/grid whose elements shuld be added \n                          together \n               PERIODIC - if the output of your function is periodic then you should \n                          specify the periodicity of the function. If the output is not \n                          periodic you must state this using PERIODIC=NO \n"
  },
  "MEMFUSIONP": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MEMFUSIONP",
    "description" : "Calculate a CV that can induce the formation of the hemifusion stalk between two initially flat and planar bilayers.",
    "module" : "membranefusion",
    "displayname" : "MEMFUSIONP",
     "dois" : ["10.1021/acs.jctc.7b00106", "10.1039/D1SC06711G"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "UMEMBRANE" : { "type": "atoms", "description": "all the beads of the upper membrane", "multiple": 1, "actionlink": "none"},
       "LMEMBRANE" : { "type": "atoms", "description": "all the beads of the lower membrane", "multiple": 1, "actionlink": "none"},
       "TAILS" : { "type": "atoms", "description": "all the tail beads of the system", "multiple": 1, "actionlink": "none"},
       "NSMEM" : { "type": "compulsory", "description": "the number of slices of the membrane fusion cylinder in such a way that when the bilayers are flat and parallel the CV is equal to 0", "multiple": 0, "actionlink": "none"},
       "DSMEM" : { "type": "optional", "description": " thickness of the slices of the membrane fusion cylinder", "multiple": 0, "actionlink": "none", "default": "0."},
       "HMEM" : { "type": "optional", "description": " parameter of the step function θ(x,h) for the membrane fusion", "multiple": 0, "actionlink": "none", "default": "0.25"},
       "RCYLMEM" : { "type": "optional", "description": " the radius of the membrane fusion cylinder", "multiple": 0, "actionlink": "none", "default": "1.75"},
       "ZETAMEM" : { "type": "optional", "description": " occupation factor", "multiple": 0, "actionlink": "none", "default": "0.5"},
       "ONEOVERS2C2CUTOFF" : { "type": "optional", "description": " cut off large values for the derivative of the atan2 function", "multiple": 0, "actionlink": "none", "default": "500"},
       "XCYL" : { "type": "optional", "description": "X coordinate of the fixed cylinder, if not present this will be calculated", "multiple": 0, "actionlink": "none"},
       "YCYL" : { "type": "optional", "description": "Y coordinate of the fixed cylinder, if not present this will be calculated", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the value of the CV"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n              UMEMBRANE - all the beads of the upper membrane. For more information \n                          on how to specify lists of atoms see \ref Group \n              LMEMBRANE - all the beads of the lower membrane. For more information \n                          on how to specify lists of atoms see \ref Group \n                  TAILS - all the tail beads of the system. For more information on \n                          how to specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                  NSMEM - the number of slices of the membrane fusion cylinder in \n                          such a way that when the bilayers are flat and parallel the CV \n                          is equal to 0.2. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                  DSMEM - ( default=0.1) thickness of the slices of the membrane \n                          fusion cylinder. \n                   HMEM - ( default=0.25 ) parameter of the step function θ(x,h) for \n                          the membrane fusion. \n                RCYLMEM - ( default=1.75 ) the radius of the membrane fusion \n                          cylinder. \n                ZETAMEM - ( default=0.5 ) occupation factor. \n      ONEOVERS2C2CUTOFF - ( default=500 ) cut off large values for the derivative of \n                          the atan2 function. \n                   XCYL - X coordinate of the fixed cylinder, if not present this \n                          will be calculated. \n                   YCYL - Y coordinate of the fixed cylinder, if not present this \n                          will be calculated. \n\n"
  },
  "METAD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/METAD",
    "description" : "Used to performed metadynamics on one or more collective variables.",
    "module" : "bias",
    "displayname" : "METAD",
     "dois" : ["10.1073/pnas.202427399", "10.1063/1.2844595", "10.1103/PhysRevLett.100.020603", "10.1021/ct3002464", "10.2174/1877946811202010079", "10.1021/jp054359r", "10.1021/jp504920s", "10.1021/ct5009087", "10.1103/PhysRevLett.111.230602", "10.1063/1.5024679", "10.1021/acs.jctc.5b00178", "10.1016/j.bpj.2015.05.024", "10.1021/acs.jctc.6b00299", "10.1103/PhysRevLett.112.240602"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "SIGMA" : { "type": "compulsory", "description": "the widths of the Gaussian hills", "multiple": 0, "actionlink": "none"},
       "PACE" : { "type": "compulsory", "description": "the frequency for hill addition", "multiple": 0, "actionlink": "none"},
       "FILE" : { "type": "compulsory", "description": " a file in which the list of added hills is stored", "multiple": 0, "actionlink": "none", "default": "HILLS"},
       "HEIGHT" : { "type": "optional", "description": "the heights of the Gaussian hills", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "optional", "description": "specify format for HILLS files (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "BIASFACTOR" : { "type": "optional", "description": "use well tempered metadynamics and use this bias factor", "multiple": 0, "actionlink": "none"},
       "CALC_WORK" : { "type": "flag", "description": " calculate the total accumulated work done by the bias since last restart", "multiple": 0, "actionlink": "none", "default": "off"},
       "RECT" : { "type": "optional", "description": "list of bias factors for all the replicas", "multiple": 0, "actionlink": "none"},
       "DAMPFACTOR" : { "type": "optional", "description": "damp hills with exp(-max(V)/(kT*DAMPFACTOR)", "multiple": 0, "actionlink": "none"},
       "TTBIASFACTOR" : { "type": "optional", "description": "use transition tempered metadynamics with this bias factor", "multiple": 0, "actionlink": "none"},
       "TTBIASTHRESHOLD" : { "type": "optional", "description": "use transition tempered metadynamics with this bias threshold", "multiple": 0, "actionlink": "none"},
       "TTALPHA" : { "type": "optional", "description": "use transition tempered metadynamics with this hill size decay exponent parameter", "multiple": 0, "actionlink": "none"},
       "TARGET" : { "type": "optional", "description": "target to a predefined distribution", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "the system temperature - this is only needed if you are doing well-tempered metadynamics", "multiple": 0, "actionlink": "none"},
       "TAU" : { "type": "optional", "description": "in well tempered metadynamics, sets height to (k_B Delta T*pace*timestep)/tau", "multiple": 0, "actionlink": "none"},
       "CALC_RCT" : { "type": "flag", "description": " calculate the c(t) reweighting factor and use that to obtain the normalized bias [rbias=bias-rct]", "multiple": 0, "actionlink": "none", "default": "off"},
       "RCT_USTRIDE" : { "type": "optional", "description": "the update stride for calculating the c(t) reweighting factor", "multiple": 0, "actionlink": "none"},
       "GRID_MIN" : { "type": "optional", "description": "the lower bounds for the grid", "multiple": 0, "actionlink": "none"},
       "GRID_MAX" : { "type": "optional", "description": "the upper bounds for the grid", "multiple": 0, "actionlink": "none"},
       "GRID_BIN" : { "type": "optional", "description": "the number of bins for the grid", "multiple": 0, "actionlink": "none"},
       "GRID_SPACING" : { "type": "optional", "description": "the approximate grid spacing (to be used as an alternative or together with GRID_BIN)", "multiple": 0, "actionlink": "none"},
       "GRID_SPARSE" : { "type": "flag", "description": " use a sparse grid to store hills", "multiple": 0, "actionlink": "none", "default": "off"},
       "GRID_NOSPLINE" : { "type": "flag", "description": " don't use spline interpolation with grids", "multiple": 0, "actionlink": "none", "default": "off"},
       "GRID_WSTRIDE" : { "type": "optional", "description": "write the grid to a file every N steps", "multiple": 0, "actionlink": "none"},
       "GRID_WFILE" : { "type": "optional", "description": "the file on which to write the grid", "multiple": 0, "actionlink": "none"},
       "GRID_RFILE" : { "type": "optional", "description": "a grid file from which the bias should be read at the initial step of the simulation", "multiple": 0, "actionlink": "none"},
       "STORE_GRIDS" : { "type": "flag", "description": " store all the grid files the calculation generates", "multiple": 0, "actionlink": "none", "default": "off"},
       "NLIST" : { "type": "flag", "description": " Use neighbor list for kernels summation, faster but experimental", "multiple": 0, "actionlink": "none", "default": "off"},
       "NLIST_PARAMETERS" : { "type": "optional", "description": " the two cutoff parameters for the Gaussians neighbor list", "multiple": 0, "actionlink": "none", "default": "6.,0."},
       "ADAPTIVE" : { "type": "optional", "description": "use a geometric (=GEOM) or diffusion (=DIFF) based hills width scheme", "multiple": 0, "actionlink": "none"},
       "SIGMA_MAX" : { "type": "optional", "description": "the upper bounds for the sigmas (in CV units) when using adaptive hills", "multiple": 0, "actionlink": "none"},
       "SIGMA_MIN" : { "type": "optional", "description": "the lower bounds for the sigmas (in CV units) when using adaptive hills", "multiple": 0, "actionlink": "none"},
       "WALKERS_ID" : { "type": "optional", "description": "walker id", "multiple": 0, "actionlink": "none"},
       "WALKERS_N" : { "type": "optional", "description": "number of walkers", "multiple": 0, "actionlink": "none"},
       "WALKERS_DIR" : { "type": "optional", "description": "shared directory with the hills files from all the walkers", "multiple": 0, "actionlink": "none"},
       "WALKERS_RSTRIDE" : { "type": "optional", "description": "stride for reading hills files", "multiple": 0, "actionlink": "none"},
       "WALKERS_MPI" : { "type": "flag", "description": " Switch on MPI version of multiple walkers - not compatible with WALKERS_* options other than WALKERS_DIR", "multiple": 0, "actionlink": "none", "default": "off"},
       "INTERVAL" : { "type": "optional", "description": "one dimensional lower and upper limits, outside the limits the system will not feel the biasing force", "multiple": 0, "actionlink": "none"},
       "FLYING_GAUSSIAN" : { "type": "flag", "description": " Switch on flying Gaussian method, must be used with WALKERS_MPI", "multiple": 0, "actionlink": "none", "default": "off"},
       "ACCELERATION" : { "type": "flag", "description": " Set to TRUE if you want to compute the metadynamics acceleration factor", "multiple": 0, "actionlink": "none", "default": "off"},
       "ACCELERATION_RFILE" : { "type": "optional", "description": "a data file from which the acceleration should be read at the initial step of the simulation", "multiple": 0, "actionlink": "none"},
       "CALC_MAX_BIAS" : { "type": "flag", "description": " Set to TRUE if you want to compute the maximum of the metadynamics V(s, t)", "multiple": 0, "actionlink": "none", "default": "off"},
       "CALC_TRANSITION_BIAS" : { "type": "flag", "description": " Set to TRUE if you want to compute a metadynamics transition bias V*(t)", "multiple": 0, "actionlink": "none", "default": "off"},
       "TRANSITIONWELL" : { "type": "optional", "description": "This keyword appears multiple times as TRANSITIONWELL followed by an integer", "multiple": 1, "actionlink": "none"},
       "FREQUENCY_ADAPTIVE" : { "type": "flag", "description": " Set to TRUE if you want to enable frequency adaptive metadynamics such that the frequency for hill addition to change dynamically based on the acceleration factor", "multiple": 0, "actionlink": "none", "default": "off"},
       "FA_UPDATE_FREQUENCY" : { "type": "optional", "description": "the frequency for updating the hill addition pace in frequency adaptive metadynamics, by default this is equal to the value given in PACE", "multiple": 0, "actionlink": "none"},
       "FA_MAX_PACE" : { "type": "optional", "description": "the maximum hill addition frequency allowed in frequency adaptive metadynamics", "multiple": 0, "actionlink": "none"},
       "FA_MIN_ACCELERATION" : { "type": "optional", "description": "only update the hill addition pace in frequency adaptive metadynamics after reaching the minimum acceleration factor given here", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "rbias" : {
           "flag": "CALC_RCT",
           "type": "scalar",
           "description": "the instantaneous value of the bias normalized using the c(t) reweighting factor [rbias=bias-rct]"
         },
         "rct" : {
           "flag": "CALC_RCT",
           "type": "scalar",
           "description": "the reweighting factor c(t)"
         },
         "work" : {
           "flag": "CALC_WORK",
           "type": "scalar",
           "description": "accumulator for work"
         },
         "acc" : {
           "flag": "ACCELERATION",
           "type": "scalar",
           "description": "the metadynamics acceleration factor"
         },
         "maxbias" : {
           "flag": "CALC_MAX_BIAS",
           "type": "scalar",
           "description": "the maximum of the metadynamics V(s, t)"
         },
         "transbias" : {
           "flag": "CALC_TRANSITION_BIAS",
           "type": "scalar",
           "description": "the metadynamics transition bias V*(t)"
         },
         "pace" : {
           "flag": "FREQUENCY_ADAPTIVE",
           "type": "scalar",
           "description": "the hill addition frequency when employing frequency adaptive metadynamics"
         },
         "nlker" : {
           "flag": "NLIST",
           "type": "scalar",
           "description": "number of hills in the neighbor list"
         },
         "nlsteps" : {
           "flag": "NLIST",
           "type": "scalar",
           "description": "number of steps from last neighbor list update"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n                  SIGMA - the widths of the Gaussian hills \n                   PACE - the frequency for hill addition \n                   FILE - ( default=HILLS ) a file in which the list of added hills \n                          is stored \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n              CALC_WORK - ( default=off ) calculate the total accumulated work done \n                          by the bias since last restart \n               CALC_RCT - ( default=off ) calculate the c(t) reweighting factor and \n                          use that to obtain the normalized bias [rbias=bias-rct].This \n                          method is not compatible with metadynamics not on a grid. \n            GRID_SPARSE - ( default=off ) use a sparse grid to store hills \n          GRID_NOSPLINE - ( default=off ) don't use spline interpolation with grids \n            STORE_GRIDS - ( default=off ) store all the grid files the calculation \n                          generates. They will be deleted if this keyword is not present \n                  NLIST - ( default=off ) Use neighbor list for kernels summation, \n                          faster but experimental \n            WALKERS_MPI - ( default=off ) Switch on MPI version of multiple walkers - \n                          not compatible with WALKERS_* options other than WALKERS_DIR \n        FLYING_GAUSSIAN - ( default=off ) Switch on flying Gaussian method, must be \n                          used with WALKERS_MPI \n           ACCELERATION - ( default=off ) Set to TRUE if you want to compute the \n                          metadynamics acceleration factor. \n          CALC_MAX_BIAS - ( default=off ) Set to TRUE if you want to compute the \n                          maximum of the metadynamics V(s, t) \n   CALC_TRANSITION_BIAS - ( default=off ) Set to TRUE if you want to compute a \n                          metadynamics transition bias V*(t) \n     FREQUENCY_ADAPTIVE - ( default=off ) Set to TRUE if you want to enable frequency \n                          adaptive metadynamics such that the frequency for hill addition to \n                          change dynamically based on the acceleration factor. \n                 HEIGHT - the heights of the Gaussian hills. Compulsory unless TAU \n                          and either BIASFACTOR or DAMPFACTOR are given \n                    FMT - specify format for HILLS files (useful for decrease the \n                          number of digits in regtests) \n             BIASFACTOR - use well tempered metadynamics and use this bias factor. \n                          Please note you must also specify temp \n                   RECT - list of bias factors for all the replicas \n             DAMPFACTOR - damp hills with exp(-max(V)/(kT*DAMPFACTOR) \n           TTBIASFACTOR - use transition tempered metadynamics with this bias factor. \n                          Please note you must also specify temp \n        TTBIASTHRESHOLD - use transition tempered metadynamics with this bias \n                          threshold. Please note you must also specify TTBIASFACTOR \n                TTALPHA - use transition tempered metadynamics with this hill size \n                          decay exponent parameter. Please note you must also specify \n                          TTBIASFACTOR \n                 TARGET - target to a predefined distribution \n                   TEMP - the system temperature - this is only needed if you are \n                          doing well-tempered metadynamics \n                    TAU - in well tempered metadynamics, sets height to (k_B Delta \n                          T*pace*timestep)/tau \n            RCT_USTRIDE - the update stride for calculating the c(t) reweighting \n                          factor.The default 1, so c(t) is updated every time the bias is \n                          updated. \n               GRID_MIN - the lower bounds for the grid \n               GRID_MAX - the upper bounds for the grid \n               GRID_BIN - the number of bins for the grid \n           GRID_SPACING - the approximate grid spacing (to be used as an alternative \n                          or together with GRID_BIN) \n           GRID_WSTRIDE - write the grid to a file every N steps \n             GRID_WFILE - the file on which to write the grid \n             GRID_RFILE - a grid file from which the bias should be read at the \n                          initial step of the simulation \n       NLIST_PARAMETERS - (default=6.,0.5) the two cutoff parameters for the \n                          Gaussians neighbor list \n               ADAPTIVE - use a geometric (=GEOM) or diffusion (=DIFF) based hills \n                          width scheme. Sigma is one number that has distance units or time \n                          step dimensions \n              SIGMA_MAX - the upper bounds for the sigmas (in CV units) when using \n                          adaptive hills. Negative number means no bounds \n              SIGMA_MIN - the lower bounds for the sigmas (in CV units) when using \n                          adaptive hills. Negative number means no bounds \n             WALKERS_ID - walker id \n              WALKERS_N - number of walkers \n            WALKERS_DIR - shared directory with the hills files from all the walkers \n        WALKERS_RSTRIDE - stride for reading hills files \n               INTERVAL - one dimensional lower and upper limits, outside the limits \n                          the system will not feel the biasing force. \n     ACCELERATION_RFILE - a data file from which the acceleration should be read at \n                          the initial step of the simulation \n         TRANSITIONWELL - This keyword appears multiple times as TRANSITIONWELL \n                          followed by an integer. Each specifies the coordinates for one well \n                          as in transition-tempered metadynamics. At least one must be \n                          provided.. You can use multiple instances of this keyword i.e. \n                          TRANSITIONWELL1, TRANSITIONWELL2, TRANSITIONWELL3... \n    FA_UPDATE_FREQUENCY - the frequency for updating the hill addition pace in \n                          frequency adaptive metadynamics, by default this is equal to the \n                          value given in PACE \n            FA_MAX_PACE - the maximum hill addition frequency allowed in frequency \n                          adaptive metadynamics. By default there is no maximum value. \n    FA_MIN_ACCELERATION - only update the hill addition pace in frequency adaptive \n                          metadynamics after reaching the minimum acceleration factor given here. \n                          By default it is 1.0. \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \n\n"
  },
  "METAINFERENCE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/METAINFERENCE",
    "description" : "Calculates the Metainference energy for a set of experimental data.",
    "module" : "isdb",
    "displayname" : "METAINFERENCE",
     "dois" : ["10.1126/sciadv.1501177", "10.1038/srep31232", "10.1063/1.4981211"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "PARARG" : { "type": "optional", "description": "reference values for the experimental data, these can be provided as arguments without derivatives", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "PARAMETERS" : { "type": "optional", "description": "reference values for the experimental data", "multiple": 0, "actionlink": "none"},
       "NOENSEMBLE" : { "type": "flag", "description": " don't perform any replica-averaging", "multiple": 0, "actionlink": "none", "default": "off"},
       "REWEIGHT" : { "type": "flag", "description": " simple REWEIGHT using the latest ARG as energy", "multiple": 0, "actionlink": "none", "default": "off"},
       "AVERAGING" : { "type": "optional", "description": "Stride for calculation of averaged weights and sigma_mean", "multiple": 0, "actionlink": "none"},
       "NOISETYPE" : { "type": "compulsory", "description": " functional form of the noise (GAUSS,MGAUSS,OUTLIERS,MOUTLIERS,GENERIC)", "multiple": 0, "actionlink": "none", "default": "MGAUSS"},
       "LIKELIHOOD" : { "type": "compulsory", "description": " the likelihood for the GENERIC metainference model, GAUSS or LOGN", "multiple": 0, "actionlink": "none", "default": "GAUSS"},
       "DFTILDE" : { "type": "compulsory", "description": " fraction of sigma_mean used to evolve ftilde", "multiple": 0, "actionlink": "none", "default": "0.1"},
       "SCALEDATA" : { "type": "flag", "description": " Set to TRUE if you want to sample a scaling factor common to all values and replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALE0" : { "type": "compulsory", "description": " initial value of the scaling factor", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SCALE_PRIOR" : { "type": "compulsory", "description": " either FLAT or GAUSSIAN", "multiple": 0, "actionlink": "none", "default": "FLAT"},
       "SCALE_MIN" : { "type": "optional", "description": "minimum value of the scaling factor", "multiple": 0, "actionlink": "none"},
       "SCALE_MAX" : { "type": "optional", "description": "maximum value of the scaling factor", "multiple": 0, "actionlink": "none"},
       "DSCALE" : { "type": "optional", "description": "maximum MC move of the scaling factor", "multiple": 0, "actionlink": "none"},
       "ADDOFFSET" : { "type": "flag", "description": " Set to TRUE if you want to sample an offset common to all values and replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "OFFSET0" : { "type": "compulsory", "description": " initial value of the offset", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "OFFSET_PRIOR" : { "type": "compulsory", "description": " either FLAT or GAUSSIAN", "multiple": 0, "actionlink": "none", "default": "FLAT"},
       "OFFSET_MIN" : { "type": "optional", "description": "minimum value of the offset", "multiple": 0, "actionlink": "none"},
       "OFFSET_MAX" : { "type": "optional", "description": "maximum value of the offset", "multiple": 0, "actionlink": "none"},
       "DOFFSET" : { "type": "optional", "description": "maximum MC move of the offset", "multiple": 0, "actionlink": "none"},
       "REGRES_ZERO" : { "type": "optional", "description": "stride for regression with zero offset", "multiple": 0, "actionlink": "none"},
       "SIGMA0" : { "type": "compulsory", "description": " initial value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SIGMA_MIN" : { "type": "compulsory", "description": " minimum value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "SIGMA_MAX" : { "type": "compulsory", "description": " maximum value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "10."},
       "DSIGMA" : { "type": "optional", "description": "maximum MC move of the uncertainty parameter", "multiple": 0, "actionlink": "none"},
       "OPTSIGMAMEAN" : { "type": "compulsory", "description": " Set to NONE/SEM to manually set sigma mean, or to estimate it on the fly", "multiple": 0, "actionlink": "none", "default": "NONE"},
       "SIGMA_MEAN0" : { "type": "optional", "description": "starting value for the uncertainty in the mean estimate", "multiple": 0, "actionlink": "none"},
       "SIGMA_MAX_STEPS" : { "type": "optional", "description": "Number of steps used to optimise SIGMA_MAX, before that the SIGMA_MAX value is used", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "the system temperature - this is only needed if code doesn't pass the temperature to plumed", "multiple": 0, "actionlink": "none"},
       "MC_STEPS" : { "type": "optional", "description": "number of MC steps", "multiple": 0, "actionlink": "none"},
       "MC_CHUNKSIZE" : { "type": "optional", "description": "MC chunksize", "multiple": 0, "actionlink": "none"},
       "STATUS_FILE" : { "type": "optional", "description": "write a file with all the data useful for restart/continuation of Metainference", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "optional", "description": "specify format for HILLS files (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "WRITE_STRIDE" : { "type": "compulsory", "description": " write the status to a file every N steps, this can be used for restart/continuation", "multiple": 0, "actionlink": "none", "default": "10000"},
       "SELECTOR" : { "type": "optional", "description": "name of selector", "multiple": 0, "actionlink": "none"},
       "NSELECT" : { "type": "optional", "description": "range of values for selector [0, N-1]", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "sigma" : {
           "flag": "default",
           "type": "scalar",
           "description": "uncertainty parameter"
         },
         "sigmaMean" : {
           "flag": "default",
           "type": "scalar",
           "description": "uncertainty in the mean estimate"
         },
         "neff" : {
           "flag": "default",
           "type": "scalar",
           "description": "effective number of replicas"
         },
         "acceptSigma" : {
           "flag": "default",
           "type": "scalar",
           "description": "MC acceptance for sigma values"
         },
         "acceptScale" : {
           "flag": "SCALEDATA",
           "type": "scalar",
           "description": "MC acceptance for scale value"
         },
         "acceptFT" : {
           "flag": "GENERIC",
           "type": "scalar",
           "description": "MC acceptance for general metainference f tilde value"
         },
         "weight" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "weights of the weighted average"
         },
         "biasDer" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "derivatives with respect to the bias"
         },
         "scale" : {
           "flag": "SCALEDATA",
           "type": "scalar",
           "description": "scale parameter"
         },
         "offset" : {
           "flag": "ADDOFFSET",
           "type": "scalar",
           "description": "offset parameter"
         },
         "ftilde" : {
           "flag": "GENERIC",
           "type": "scalar",
           "description": "ensemble average estimator"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n              NOISETYPE - ( default=MGAUSS ) functional form of the noise \n                          (GAUSS,MGAUSS,OUTLIERS,MOUTLIERS,GENERIC) \n             LIKELIHOOD - ( default=GAUSS ) the likelihood for the GENERIC \n                          metainference model, GAUSS or LOGN \n                DFTILDE - ( default=0.1 ) fraction of sigma_mean used to evolve \n                          ftilde \n                 SCALE0 - ( default=1.0 ) initial value of the scaling factor \n            SCALE_PRIOR - ( default=FLAT ) either FLAT or GAUSSIAN \n                OFFSET0 - ( default=0.0 ) initial value of the offset \n           OFFSET_PRIOR - ( default=FLAT ) either FLAT or GAUSSIAN \n                 SIGMA0 - ( default=1.0 ) initial value of the uncertainty parameter \n              SIGMA_MIN - ( default=0.0 ) minimum value of the uncertainty parameter \n              SIGMA_MAX - ( default=10. ) maximum value of the uncertainty parameter \n           OPTSIGMAMEAN - ( default=NONE ) Set to NONE/SEM to manually set sigma \n                          mean, or to estimate it on the fly \n           WRITE_STRIDE - ( default=10000 ) write the status to a file every N steps, \n                          this can be used for restart/continuation \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n             NOENSEMBLE - ( default=off ) don't perform any replica-averaging \n               REWEIGHT - ( default=off ) simple REWEIGHT using the latest ARG as \n                          energy \n              SCALEDATA - ( default=off ) Set to TRUE if you want to sample a scaling \n                          factor common to all values and replicas \n              ADDOFFSET - ( default=off ) Set to TRUE if you want to sample an offset \n                          common to all values and replicas \n                 PARARG - reference values for the experimental data, these can be \n                          provided as arguments without derivatives \n             PARAMETERS - reference values for the experimental data \n              AVERAGING - Stride for calculation of averaged weights and sigma_mean \n              SCALE_MIN - minimum value of the scaling factor \n              SCALE_MAX - maximum value of the scaling factor \n                 DSCALE - maximum MC move of the scaling factor \n             OFFSET_MIN - minimum value of the offset \n             OFFSET_MAX - maximum value of the offset \n                DOFFSET - maximum MC move of the offset \n            REGRES_ZERO - stride for regression with zero offset \n                 DSIGMA - maximum MC move of the uncertainty parameter \n            SIGMA_MEAN0 - starting value for the uncertainty in the mean estimate \n        SIGMA_MAX_STEPS - Number of steps used to optimise SIGMA_MAX, before that the \n                          SIGMA_MAX value is used \n                   TEMP - the system temperature - this is only needed if code \n                          doesn't pass the temperature to plumed \n               MC_STEPS - number of MC steps \n           MC_CHUNKSIZE - MC chunksize \n            STATUS_FILE - write a file with all the data useful for \n                          restart/continuation of Metainference \n                    FMT - specify format for HILLS files (useful for decrease the \n                          number of digits in regtests) \n               SELECTOR - name of selector \n                NSELECT - range of values for selector [0, N-1] \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n\n"
  },
  "METATOMIC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/METATOMIC",
    "description" : "Use arbitrary machine learning models as collective variables.",
    "module" : "metatomic",
    "displayname" : "METATOMIC",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "MODEL" : { "type": "compulsory", "description": "path to the exported metatomic model", "multiple": 0, "actionlink": "none"},
       "EXTENSIONS_DIRECTORY" : { "type": "optional", "description": "path to the directory containing TorchScript extensions to load", "multiple": 0, "actionlink": "none"},
       "DEVICE" : { "type": "optional", "description": "Torch device to use for the calculations", "multiple": 0, "actionlink": "none"},
       "CHECK_CONSISTENCY" : { "type": "flag", "description": " should we enable internal consistency checks when executing the model", "multiple": 0, "actionlink": "none", "default": "off"},
       "SPECIES" : { "type": "atoms", "description": "the indices of atoms in each PLUMED species", "multiple": 1, "actionlink": "none"},
       "SELECTED_ATOMS" : { "type": "atoms", "description": "subset of atoms that should be used for the calculation", "multiple": 1, "actionlink": "none"},
       "SPECIES_TO_TYPES" : { "type": "optional", "description": "mapping from PLUMED SPECIES to metatomic's atom types", "multiple": 0, "actionlink": "none"},
       "output" : {
         "outputs" : {
           "flag": "default",
           "type": "scalar",
           "description": "collective variable created by the metatomic model"
         },
         "value" : {
           "flag": "default",
           "type": "scalar/vector/matrix",
           "description": "collective variable created by the metatomic model"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - the indices of atoms in each PLUMED species. You can use \n                          multiple instances of this keyword i.e. SPECIES1, SPECIES2, \n                          SPECIES3... \n         SELECTED_ATOMS - subset of atoms that should be used for the calculation \n\nThe following arguments are compulsory: \n\n                  MODEL - path to the exported metatomic model \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n      CHECK_CONSISTENCY - ( default=off ) should we enable internal consistency \n                          checks when executing the model \n   EXTENSIONS_DIRECTORY - path to the directory containing TorchScript extensions to \n                          load \n                 DEVICE - Torch device to use for the calculations \n       SPECIES_TO_TYPES - mapping from PLUMED SPECIES to metatomic's atom types \n\n"
  },
  "MFILTER_LESS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MFILTER_LESS",
    "description" : "Apply a switching function to the input vector.",
    "module" : "multicolvar",
    "displayname" : "MFILTER_LESS",
    "replacement" : "LESS_THAN",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "DATA" : { "type": "compulsory", "description": "the vector you wish to transform", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "compulsory", "description": "the switching function that transform", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "a vector that has the same dimension as the input vector with elements equal to one if the corresponding component of the vector is less than a tolerance and zero otherwise"
         }
       }
    },
    "needs" : ["GROUP", "LESS_THAN"],
    "help" : "\nThe following arguments are compulsory: \n\n                   DATA - the vector you wish to transform \n                 SWITCH - the switching function that transform \n"
  },
  "MFILTER_MORE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MFILTER_MORE",
    "description" : "Apply one minus a switching function to the input vector.",
    "module" : "multicolvar",
    "displayname" : "MFILTER_MORE",
    "replacement" : "MORE_THAN",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "DATA" : { "type": "compulsory", "description": "the vector you wish to transform", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "compulsory", "description": "the switching function that transform", "multiple": 0, "actionlink": "none"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         }
       }
    },
    "needs" : ["CUSTOM", "GROUP", "MORE_THAN", "HIGHEST"],
    "help" : "\nThe following arguments are compulsory: \n\n                   DATA - the vector you wish to transform \n                 SWITCH - the switching function that transform \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n"
  },
  "MOLINFO": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO",
    "description" : "This command is used to provide information on the molecules that are present in your system.",
    "module" : "generic",
    "displayname" : "MOLINFO",
     "dois" : [],
    "syntax" : {
       "STRUCTURE" : { "type": "compulsory", "description": "a file in pdb format containing a reference structure", "multiple": 0, "actionlink": "none"},
       "MOLTYPE" : { "type": "compulsory", "description": " what kind of molecule is contained in the pdb file - usually not needed since protein/RNA/DNA are compatible", "multiple": 0, "actionlink": "none", "default": "protein"},
       "PYTHON_BIN" : { "type": "compulsory", "description": " python interpreter", "multiple": 0, "actionlink": "none", "default": "default"},
       "CHAIN" : { "type": "atoms", "description": "(for masochists ( mostly Davide Branduardi ) ) The atoms involved in each of the chains of interest in the structure", "multiple": 1, "actionlink": "none"},
       "STRIDE" : { "type": "hidden", "description": "frequency for resetting the python interpreter", "multiple": 0, "actionlink": "none"},
       "WHOLE" : { "type": "flag", "description": " The reference structure is whole, i", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  CHAIN - (for masochists ( mostly Davide Branduardi ) ) The atoms \n                          involved in each of the chains of interest in the structure.. For \n                          more information on how to specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n              STRUCTURE - a file in pdb format containing a reference structure. This \n                          is used to defines the atoms in the various residues, chains, \n                          etc . For more details on the PDB file format visit \n                          http://www.wwpdb.org/docs.html \n                MOLTYPE - ( default=protein ) what kind of molecule is contained in \n                          the pdb file - usually not needed since protein/RNA/DNA are \n                          compatible \n             PYTHON_BIN - ( default=default ) python interpreter \n\nIn addition you may use the following options: \n\n                  WHOLE - ( default=off ) The reference structure is whole, i.e. not \n                          broken by PBC \n"
  },
  "MOMENTS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MOMENTS",
    "description" : "Calculate central moments from the distribution of input quantities",
    "module" : "function",
    "displayname" : "MOMENTS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "POWERS" : { "type": "compulsory", "description": "calculate the central moments of the distribution of collective variables", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the values input to this function", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "output" : {
         "moment" : {
           "flag": "default",
           "type": "scalar",
           "description": "the central moments of the distribution of values"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                 POWERS - calculate the central moments of the distribution of \n                          collective variables. \n                    ARG - the values input to this function \n"
  },
  "MOMENTS_ONEARG": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MOMENTS_ONEARG",
    "description" : "",
    "module" : "function",
    "displayname" : "MOMENTS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the vector/matrix that is being used in input", "multiple": 0, "actionlink": "none", "argtype": "vector/matrix"},
       "POWERS" : { "type": "compulsory", "description": "calculate the central moments of the distribution of collective variables", "multiple": 0, "actionlink": "none"},
       "output" : {
         "moment" : {
           "flag": "default",
           "type": "scalar",
           "description": "the central moments of the distribution of values"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the vector/matrix that is being used in input \n                 POWERS - calculate the central moments of the distribution of \n                          collective variables. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n"
  },
  "MOMENTS_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MOMENTS_SCALAR",
    "description" : "",
    "module" : "function",
    "displayname" : "MOMENTS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "POWERS" : { "type": "compulsory", "description": "calculate the central moments of the distribution of collective variables", "multiple": 0, "actionlink": "none"},
       "output" : {
         "moment" : {
           "flag": "default",
           "type": "scalar",
           "description": "the central moments of the distribution of values"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n                 POWERS - calculate the central moments of the distribution of \n                          collective variables. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n"
  },
  "MOMENTS_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MOMENTS_VECTOR",
    "description" : "",
    "module" : "function",
    "displayname" : "MOMENTS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and vector that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "POWERS" : { "type": "compulsory", "description": "calculate the central moments of the distribution of collective variables", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "moment" : {
           "flag": "default",
           "type": "scalar",
           "description": "the central moments of the distribution of values"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and vector that on which the \n                          function is being calculated elementwise \n                 POWERS - calculate the central moments of the distribution of \n                          collective variables. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                 USEGPU - ( default=off ) run this calculation on the GPU \n"
  },
  "MORE_THAN": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MORE_THAN",
    "description" : "Use a switching function to determine how many of the input variables are more than a certain cutoff.",
    "module" : "function",
    "displayname" : "MORE_THAN",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "This keyword is used if you want to employ an alternative to the continuous swiching function defined above", "multiple": 0, "actionlink": "none"},
       "SQUARED" : { "type": "flag", "description": " is the input quantity the square of the value that you would like to apply the switching function to", "multiple": 0, "actionlink": "none", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the values input to this function", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector/matrix that should be used to determine which elements of the vector/matrix should be computed", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector/matrix",
           "description": "a function that is one if the if the input is more than a threshold"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n                    ARG - the values input to this function \n\nIn addition you may use the following options: \n\n                SQUARED - ( default=off ) is the input quantity the square of the \n                          value that you would like to apply the switching function to \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous swiching function defined above. The \n                          following provides information on the \ref switchingfunction that are \n                          available. When this keyword is present you no longer need the NN, MM, \n                          D_0 and R_0 keywords. \n                   MASK - the label for a sparse vector/matrix that should be used to \n                          determine which elements of the vector/matrix should be computed \n\n"
  },
  "MORE_THAN_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MORE_THAN_MATRIX",
    "description" : "",
    "module" : "function",
    "displayname" : "MORE_THAN",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and matrices that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/matrix"},
       "MASK" : { "type": "optional", "description": "a matrix that is used to used to determine which elements of the output matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "This keyword is used if you want to employ an alternative to the continuous swiching function defined above", "multiple": 0, "actionlink": "none"},
       "SQUARED" : { "type": "flag", "description": " is the input quantity the square of the value that you would like to apply the switching function to", "multiple": 0, "actionlink": "none", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "the matrix obtained by doing an element-wise application of a function that is one if the if the input is more than a threshold to the input matrix"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and matrices that on which the \n                          function is being calculated elementwise \n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                SQUARED - ( default=off ) is the input quantity the square of the \n                          value that you would like to apply the switching function to \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a matrix that is used to used to determine which elements \n                          of the output matrix to compute \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous swiching function defined above. The \n                          following provides information on the \ref switchingfunction that are \n                          available. When this keyword is present you no longer need the NN, MM, \n                          D_0 and R_0 keywords. \n\n"
  },
  "MORE_THAN_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MORE_THAN_SCALAR",
    "description" : "",
    "module" : "function",
    "displayname" : "MORE_THAN",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "This keyword is used if you want to employ an alternative to the continuous swiching function defined above", "multiple": 0, "actionlink": "none"},
       "SQUARED" : { "type": "flag", "description": " is the input quantity the square of the value that you would like to apply the switching function to", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector/matrix",
           "description": "a function that is one if the if the input is more than a threshold"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                SQUARED - ( default=off ) is the input quantity the square of the \n                          value that you would like to apply the switching function to \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous swiching function defined above. The \n                          following provides information on the \ref switchingfunction that are \n                          available. When this keyword is present you no longer need the NN, MM, \n                          D_0 and R_0 keywords. \n\n"
  },
  "MORE_THAN_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MORE_THAN_VECTOR",
    "description" : "",
    "module" : "function",
    "displayname" : "MORE_THAN",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and vector that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "This keyword is used if you want to employ an alternative to the continuous swiching function defined above", "multiple": 0, "actionlink": "none"},
       "SQUARED" : { "type": "flag", "description": " is the input quantity the square of the value that you would like to apply the switching function to", "multiple": 0, "actionlink": "none", "default": "off"},
       "MASK" : { "type": "optional", "description": "the label for a sparse matrix that should be used to determine which elements of the matrix should be computed", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the vector obtained by doing an element-wise application of a function that is one if the if the input is more than a threshold to the input vectors"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and vector that on which the \n                          function is being calculated elementwise \n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                SQUARED - ( default=off ) is the input quantity the square of the \n                          value that you would like to apply the switching function to \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous swiching function defined above. The \n                          following provides information on the \ref switchingfunction that are \n                          available. When this keyword is present you no longer need the NN, MM, \n                          D_0 and R_0 keywords. \n                   MASK - the label for a sparse matrix that should be used to \n                          determine which elements of the matrix should be computed \n\n"
  },
  "MOVINGRESTRAINT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MOVINGRESTRAINT",
    "description" : "Add a time-dependent, harmonic restraint on one or more variables.",
    "module" : "bias",
    "displayname" : "MOVINGRESTRAINT",
     "dois" : ["10.1126/science.271.5251.997", "10.1103/PhysRevLett.78.2690"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "VERSE" : { "type": "compulsory", "description": " Tells plumed whether the restraint is only acting for CV larger (U) or smaller (L) than the restraint or whether it is acting on both sides (B)", "multiple": 0, "actionlink": "none", "default": "B"},
       "STEP" : { "type": "compulsory", "description": "This keyword appears multiple times as STEPx with x=0,1,2,", "multiple": 1, "actionlink": "none"},
       "AT" : { "type": "compulsory", "description": "ATx is equal to the position of the restraint at time STEPx", "multiple": 1, "actionlink": "none"},
       "KAPPA" : { "type": "compulsory", "description": "KAPPAx is equal to the value of the force constants at time STEPx", "multiple": 1, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "work" : {
           "flag": "default",
           "type": "scalar",
           "description": "the total work performed changing this restraint"
         },
         "force2" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the squared force due to this bias potential"
         },
         "_cntr" : {
           "flag": "default",
           "type": "scalar",
           "description": "one or multiple instances of this quantity can be referenced elsewhere in the input file"
         },
         "_work" : {
           "flag": "default",
           "type": "scalar",
           "description": "one or multiple instances of this quantity can be referenced elsewhere in the input file"
         },
         "_kappa" : {
           "flag": "default",
           "type": "scalar",
           "description": "one or multiple instances of this quantity can be referenced elsewhere in the input file"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n                  VERSE - ( default=B ) Tells plumed whether the restraint is only \n                          acting for CV larger (U) or smaller (L) than the restraint or \n                          whether it is acting on both sides (B) \n                   STEP - This keyword appears multiple times as STEPx with \n                          x=0,1,2,...,n. Each value given represents the MD step at which the \n                          restraint parameters take the values KAPPAx and ATx.. You can use \n                          multiple instances of this keyword i.e. STEP1, STEP2, STEP3... \n                     AT - ATx is equal to the position of the restraint at time \n                          STEPx. For intermediate times this parameter is linearly \n                          interpolated. If no ATx is specified for STEPx then the values of AT are \n                          kept constant during the interval of time between STEP(x-1) and \n                          STEPx.. You can use multiple instances of this keyword i.e. AT1, \n                          AT2, AT3... \n                  KAPPA - KAPPAx is equal to the value of the force constants at time \n                          STEPx. For intermediate times this parameter is linearly \n                          interpolated. If no KAPPAx is specified for STEPx then the values of \n                          KAPPAx are kept constant during the interval of time between \n                          STEP(x-1) and STEPx.. You can use multiple instances of this keyword \n                          i.e. KAPPA1, KAPPA2, KAPPA3... \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n"
  },
  "MULTICOLVARDENS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MULTICOLVARDENS",
    "description" : "Evaluate the average value of a multicolvar on a grid.",
    "module" : "gridtools",
    "displayname" : "MULTICOLVARDENS",
    "replacement" : "KDE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which to accumulate the densities", "multiple": 0, "actionlink": "none", "default": "1"},
       "CLEAR" : { "type": "compulsory", "description": " the frequency with which to clear the density", "multiple": 0, "actionlink": "none", "default": "0"},
       "ORIGIN" : { "type": "compulsory", "description": "we will use the position of this atom as the origin", "multiple": 0, "actionlink": "none"},
       "DIR" : { "type": "compulsory", "description": "the direction in which to calculate the density profile", "multiple": 0, "actionlink": "none"},
       "BANDWIDTH" : { "type": "optional", "description": "the bandwidths for kernel density esimtation", "multiple": 0, "actionlink": "none"},
       "KERNEL" : { "type": "compulsory", "description": " the kernel function you are using", "multiple": 0, "actionlink": "none", "default": "GAUSSIAN"},
       "NBINS" : { "type": "optional", "description": "the number of bins to use in each direction (alternative to GRID_NBIN)", "multiple": 0, "actionlink": "none"},
       "GRID_MIN" : { "type": "optional", "description": "the lower bounds for the grid (default boxlengths)", "multiple": 0, "actionlink": "none"},
       "GRID_MAX" : { "type": "optional", "description": "the upper bounds for the grid (default boxlengths)", "multiple": 0, "actionlink": "none"},
       "DATA" : { "type": "optional", "description": "the multicolvar which you would like to calculate the density profile for", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "optional", "description": "if you are calculating a atomic density you use this keyword to specify the atoms that are involved", "multiple": 0, "actionlink": "none"},
       "UNORMALIZED" : { "type": "flag", "description": " do not divide by the density", "multiple": 0, "actionlink": "none", "default": "off"},
       "NORMALIZATION" : { "type": "optional", "description": "set true/false to determine how to the data is normalised", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "grid",
           "description": "the average value of the order parameters at each point on the grid"
         }
       }
    },
    "needs" : ["DISTANCES", "KDE", "ACCUMULATE", "CUSTOM", "ONES"],
    "help" : "\nThe following arguments are compulsory: \n\n                 STRIDE - ( default=1 ) the frequency with which to accumulate the \n                          densities \n                  CLEAR - ( default=0 ) the frequency with which to clear the density \n                 ORIGIN - we will use the position of this atom as the origin \n                    DIR - the direction in which to calculate the density profile \n                 KERNEL - ( default=GAUSSIAN ) the kernel function you are using. \n                          More details on the kernels available in plumed plumed can be \n                          found in \ref kernelfunctions. \n\nIn addition you may use the following options: \n\n            UNORMALIZED - ( default=off ) do not divide by the density \n              BANDWIDTH - the bandwidths for kernel density esimtation \n                  NBINS - the number of bins to use in each direction (alternative to \n                          GRID_NBIN) \n               GRID_MIN - the lower bounds for the grid (default boxlengths) \n               GRID_MAX - the upper bounds for the grid (default boxlengths) \n                   DATA - the multicolvar which you would like to calculate the \n                          density profile for \n                  ATOMS - if you are calculating a atomic density you use this \n                          keyword to specify the atoms that are involved \n          NORMALIZATION - set true/false to determine how to the data is normalised \n\n"
  },
  "MULTI_RMSD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/MULTI_RMSD",
    "description" : "Calculate RMSD distances for different domains and combine them.",
    "module" : "colvar",
    "displayname" : "MULTI_RMSD",
    "replacement" : "RMSD",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "compulsory", "description": "a file in pdb format containing the reference structure and the atoms involved in the CV", "multiple": 0, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " the manner in which RMSD alignment is performed", "multiple": 0, "actionlink": "none", "default": "SIMPLE"},
       "SQUARED" : { "type": "flag", "description": "  This should be set if you want the mean squared displacement instead of the root mean squared displacement", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOPBC" : { "type": "flag", "description": " don't use periodic boundary conditions", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the sum of the multiple RMSD distances"
         }
       }
    },
    "needs" : ["CONSTANT", "WHOLEMOLECULES", "POSITION", "CONCATENATE", "RMSD_VECTOR", "COMBINE", "CUSTOM"],
    "help" : "\nThe following arguments are compulsory: \n\n              REFERENCE - a file in pdb format containing the reference structure and \n                          the atoms involved in the CV. \n                   TYPE - ( default=SIMPLE ) the manner in which RMSD alignment is \n                          performed. Should be MULTI-OPTIMAL, MULTI-OPTIMAL-FAST, MULTI-SIMPLE \n                          or MULTI-DRMSD. \n\nIn addition you may use the following options: \n\n                SQUARED - ( default=off ) This should be set if you want the mean \n                          squared displacement instead of the root mean squared displacement \n                  NOPBC - ( default=off ) don't use periodic boundary conditions \n"
  },
  "NEIGHBORS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/NEIGHBORS",
    "description" : "Build a matrix with ones in for the N nearest neighbours of an atom",
    "module" : "adjmat",
    "displayname" : "NEIGHBORS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the label of an adjacency/distance matrix that will be used to find the nearest neighbors", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "NLOWEST" : { "type": "compulsory", "description": " in each row of the output matrix set the elements that correspond to the n lowest elements in each row of the input matrix equal to one", "multiple": 0, "actionlink": "none", "default": "0"},
       "NHIGHEST" : { "type": "compulsory", "description": " in each row of the output matrix set the elements that correspond to the n highest elements in each row of the input matrix equal to one", "multiple": 0, "actionlink": "none", "default": "0"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "a matrix in which the ij element is one if the ij-element of the input matrix is one of the NLOWEST/NHIGHEST elements on that row of the input matrix and zero otherwise"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label of an adjacency/distance matrix that will be used \n                          to find the nearest neighbors \n                NLOWEST - ( default=0 ) in each row of the output matrix set the \n                          elements that correspond to the n lowest elements in each row of the \n                          input matrix equal to one \n               NHIGHEST - ( default=0 ) in each row of the output matrix set the \n                          elements that correspond to the n highest elements in each row of \n                          the input matrix equal to one \n"
  },
  "NEIGHBORS_1HIGH": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/NEIGHBORS_1HIGH",
    "description" : "",
    "module" : "adjmat",
    "displayname" : "NEIGHBORS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the label of an adjacency/distance matrix that will be used to find the nearest neighbors", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "N" : { "type": "compulsory", "description": "the number of non-zero elements in each row of the output matrix", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "a matrix in which the ij element is one if the ij-element of the input matrix is one of the NLOWEST/NHIGHEST elements on that row of the input matrix and zero otherwise"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label of an adjacency/distance matrix that will be used \n                          to find the nearest neighbors \n                      N - the number of non-zero elements in each row of the output \n                          matrix \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n"
  },
  "NEIGHBORS_1LOW": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/NEIGHBORS_1LOW",
    "description" : "",
    "module" : "adjmat",
    "displayname" : "NEIGHBORS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the label of an adjacency/distance matrix that will be used to find the nearest neighbors", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "N" : { "type": "compulsory", "description": "the number of non-zero elements in each row of the output matrix", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "a matrix in which the ij element is one if the ij-element of the input matrix is one of the NLOWEST/NHIGHEST elements on that row of the input matrix and zero otherwise"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label of an adjacency/distance matrix that will be used \n                          to find the nearest neighbors \n                      N - the number of non-zero elements in each row of the output \n                          matrix \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n"
  },
  "NEIGHBORS_NHIGH": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/NEIGHBORS_NHIGH",
    "description" : "",
    "module" : "adjmat",
    "displayname" : "NEIGHBORS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the label of an adjacency/distance matrix that will be used to find the nearest neighbors", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "N" : { "type": "compulsory", "description": "the number of non-zero elements in each row of the output matrix", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "a matrix in which the ij element is one if the ij-element of the input matrix is one of the NLOWEST/NHIGHEST elements on that row of the input matrix and zero otherwise"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label of an adjacency/distance matrix that will be used \n                          to find the nearest neighbors \n                      N - the number of non-zero elements in each row of the output \n                          matrix \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n"
  },
  "NEIGHBORS_NLOW": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/NEIGHBORS_NLOW",
    "description" : "",
    "module" : "adjmat",
    "displayname" : "NEIGHBORS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the label of an adjacency/distance matrix that will be used to find the nearest neighbors", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "N" : { "type": "compulsory", "description": "the number of non-zero elements in each row of the output matrix", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "a matrix in which the ij element is one if the ij-element of the input matrix is one of the NLOWEST/NHIGHEST elements on that row of the input matrix and zero otherwise"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label of an adjacency/distance matrix that will be used \n                          to find the nearest neighbors \n                      N - the number of non-zero elements in each row of the output \n                          matrix \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n"
  },
  "NEMATIC_ORDER": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/NEMATIC_ORDER",
    "description" : "Calculate the nematic order parameter.",
    "module" : "liquid_crystal",
    "displayname" : "NEMATIC_ORDER",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "MOLECULE_STARTS" : { "type": "atoms", "description": "The atoms where the molecular axis starts", "multiple": 1, "actionlink": "none"},
       "MOLECULE_ENDS" : { "type": "atoms", "description": "The atoms where the molecular axis ends", "multiple": 1, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the modulus of the average vector"
         }
       }
    },
    "needs" : ["CONSTANT", "CUSTOM", "DIAGONALIZE", "DISTANCE", "MATRIX_PRODUCT", "TRANSPOSE", "VSTACK"],
    "help" : "The input trajectory can be in any of the following formats: \n\n        MOLECULE_STARTS - The atoms where the molecular axis starts.. For more \n                          information on how to specify lists of atoms see \ref Group \n          MOLECULE_ENDS - The atoms where the molecular axis ends.. For more \n                          information on how to specify lists of atoms see \ref Group \n"
  },
  "NOE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/NOE",
    "description" : "Calculates NOE intensities as sums of 1/r^6, also averaging over multiple equivalent atoms",
    "module" : "isdb",
    "displayname" : "NOE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "DOSCORE" : { "type": "flag", "description": " activate metainference", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOENSEMBLE" : { "type": "flag", "description": " don't perform any replica-averaging", "multiple": 0, "actionlink": "none", "default": "off"},
       "REWEIGHT" : { "type": "flag", "description": " simple REWEIGHT using the ARG as energy", "multiple": 0, "actionlink": "none", "default": "off"},
       "AVERAGING" : { "type": "optional", "description": "Stride for calculation of averaged weights and sigma_mean", "multiple": 0, "actionlink": "none"},
       "NOISETYPE" : { "type": "compulsory", "description": " functional form of the noise (GAUSS,MGAUSS,OUTLIERS,MOUTLIERS,GENERIC)", "multiple": 0, "actionlink": "none", "default": "MGAUSS"},
       "LIKELIHOOD" : { "type": "compulsory", "description": " the likelihood for the GENERIC metainference model, GAUSS or LOGN", "multiple": 0, "actionlink": "none", "default": "GAUSS"},
       "DFTILDE" : { "type": "compulsory", "description": " fraction of sigma_mean used to evolve ftilde", "multiple": 0, "actionlink": "none", "default": "0.1"},
       "SCALEDATA" : { "type": "flag", "description": " Set to TRUE if you want to sample a scaling factor common to all values and replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALE0" : { "type": "compulsory", "description": " initial value of the scaling factor", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SCALE_PRIOR" : { "type": "compulsory", "description": " either FLAT or GAUSSIAN", "multiple": 0, "actionlink": "none", "default": "FLAT"},
       "SCALE_MIN" : { "type": "optional", "description": "minimum value of the scaling factor", "multiple": 0, "actionlink": "none"},
       "SCALE_MAX" : { "type": "optional", "description": "maximum value of the scaling factor", "multiple": 0, "actionlink": "none"},
       "DSCALE" : { "type": "optional", "description": "maximum MC move of the scaling factor", "multiple": 0, "actionlink": "none"},
       "ADDOFFSET" : { "type": "flag", "description": " Set to TRUE if you want to sample an offset common to all values and replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "OFFSET0" : { "type": "compulsory", "description": " initial value of the offset", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "OFFSET_PRIOR" : { "type": "compulsory", "description": " either FLAT or GAUSSIAN", "multiple": 0, "actionlink": "none", "default": "FLAT"},
       "OFFSET_MIN" : { "type": "optional", "description": "minimum value of the offset", "multiple": 0, "actionlink": "none"},
       "OFFSET_MAX" : { "type": "optional", "description": "maximum value of the offset", "multiple": 0, "actionlink": "none"},
       "DOFFSET" : { "type": "optional", "description": "maximum MC move of the offset", "multiple": 0, "actionlink": "none"},
       "REGRES_ZERO" : { "type": "optional", "description": "stride for regression with zero offset", "multiple": 0, "actionlink": "none"},
       "SIGMA0" : { "type": "compulsory", "description": " initial value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SIGMA_MIN" : { "type": "compulsory", "description": " minimum value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "SIGMA_MAX" : { "type": "compulsory", "description": " maximum value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "10."},
       "DSIGMA" : { "type": "optional", "description": "maximum MC move of the uncertainty parameter", "multiple": 0, "actionlink": "none"},
       "OPTSIGMAMEAN" : { "type": "compulsory", "description": " Set to NONE/SEM to manually set sigma mean, or to estimate it on the fly", "multiple": 0, "actionlink": "none", "default": "NONE"},
       "SIGMA_MEAN0" : { "type": "optional", "description": "starting value for the uncertainty in the mean estimate", "multiple": 0, "actionlink": "none"},
       "SIGMA_MAX_STEPS" : { "type": "optional", "description": "Number of steps used to optimise SIGMA_MAX, before that the SIGMA_MAX value is used", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "the system temperature - this is only needed if code doesn't pass the temperature to plumed", "multiple": 0, "actionlink": "none"},
       "MC_STEPS" : { "type": "optional", "description": "number of MC steps", "multiple": 0, "actionlink": "none"},
       "MC_CHUNKSIZE" : { "type": "optional", "description": "MC chunksize", "multiple": 0, "actionlink": "none"},
       "STATUS_FILE" : { "type": "optional", "description": "write a file with all the data useful for restart/continuation of Metainference", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "optional", "description": "specify format for HILLS files (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "WRITE_STRIDE" : { "type": "compulsory", "description": " write the status to a file every N steps, this can be used for restart/continuation", "multiple": 0, "actionlink": "none", "default": "10000"},
       "SELECTOR" : { "type": "optional", "description": "name of selector", "multiple": 0, "actionlink": "none"},
       "NSELECT" : { "type": "optional", "description": "range of values for selector [0, N-1]", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "GROUPA" : { "type": "atoms", "description": "the atoms involved in each of the contacts you wish to calculate", "multiple": 1, "actionlink": "none"},
       "GROUPB" : { "type": "atoms", "description": "the atoms involved in each of the contacts you wish to calculate", "multiple": 1, "actionlink": "none"},
       "NOEDIST" : { "type": "optional", "description": "Add an experimental value for each NOE", "multiple": 1, "actionlink": "none"},
       "output" : {
         "score" : {
           "flag": "default",
           "type": "scalar",
           "description": "the Metainference score"
         },
         "sigma" : {
           "flag": "default",
           "type": "scalar",
           "description": "uncertainty parameter"
         },
         "sigmaMean" : {
           "flag": "default",
           "type": "scalar",
           "description": "uncertainty in the mean estimate"
         },
         "neff" : {
           "flag": "default",
           "type": "scalar",
           "description": "effective number of replicas"
         },
         "acceptSigma" : {
           "flag": "default",
           "type": "scalar",
           "description": "MC acceptance for sigma values"
         },
         "acceptScale" : {
           "flag": "SCALEDATA",
           "type": "scalar",
           "description": "MC acceptance for scale value"
         },
         "acceptFT" : {
           "flag": "GENERIC",
           "type": "scalar",
           "description": "MC acceptance for general metainference f tilde value"
         },
         "weight" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "weights of the weighted average"
         },
         "biasDer" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "derivatives with respect to the bias"
         },
         "scale" : {
           "flag": "SCALEDATA",
           "type": "scalar",
           "description": "scale parameter"
         },
         "offset" : {
           "flag": "ADDOFFSET",
           "type": "scalar",
           "description": "offset parameter"
         },
         "ftilde" : {
           "flag": "GENERIC",
           "type": "scalar",
           "description": "ensemble average estimator"
         },
         "noe" : {
           "flag": "default",
           "type": "scalar",
           "description": "the # NOE"
         },
         "exp" : {
           "flag": "NOEDIST",
           "type": "scalar",
           "description": "the # NOE experimental distance"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                 GROUPA - the atoms involved in each of the contacts you wish to \n                          calculate. Keywords like GROUPA1, GROUPA2, GROUPA3,... should be \n                          listed and one contact will be calculated for each ATOM keyword \n                          you specify.. You can use multiple instances of this keyword \n                          i.e. GROUPA1, GROUPA2, GROUPA3... \n                 GROUPB - the atoms involved in each of the contacts you wish to \n                          calculate. Keywords like GROUPB1, GROUPB2, GROUPB3,... should be \n                          listed and one contact will be calculated for each ATOM keyword \n                          you specify.. You can use multiple instances of this keyword \n                          i.e. GROUPB1, GROUPB2, GROUPB3... \n\nThe following arguments are compulsory: \n\n              NOISETYPE - ( default=MGAUSS ) functional form of the noise \n                          (GAUSS,MGAUSS,OUTLIERS,MOUTLIERS,GENERIC) \n             LIKELIHOOD - ( default=GAUSS ) the likelihood for the GENERIC \n                          metainference model, GAUSS or LOGN \n                DFTILDE - ( default=0.1 ) fraction of sigma_mean used to evolve \n                          ftilde \n                 SCALE0 - ( default=1.0 ) initial value of the scaling factor \n            SCALE_PRIOR - ( default=FLAT ) either FLAT or GAUSSIAN \n                OFFSET0 - ( default=0.0 ) initial value of the offset \n           OFFSET_PRIOR - ( default=FLAT ) either FLAT or GAUSSIAN \n                 SIGMA0 - ( default=1.0 ) initial value of the uncertainty parameter \n              SIGMA_MIN - ( default=0.0 ) minimum value of the uncertainty parameter \n              SIGMA_MAX - ( default=10. ) maximum value of the uncertainty parameter \n           OPTSIGMAMEAN - ( default=NONE ) Set to NONE/SEM to manually set sigma \n                          mean, or to estimate it on the fly \n           WRITE_STRIDE - ( default=10000 ) write the status to a file every N steps, \n                          this can be used for restart/continuation \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                DOSCORE - ( default=off ) activate metainference \n             NOENSEMBLE - ( default=off ) don't perform any replica-averaging \n               REWEIGHT - ( default=off ) simple REWEIGHT using the ARG as energy \n              SCALEDATA - ( default=off ) Set to TRUE if you want to sample a scaling \n                          factor common to all values and replicas \n              ADDOFFSET - ( default=off ) Set to TRUE if you want to sample an offset \n                          common to all values and replicas \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                    ARG - the labels of the values from which the function is \n                          calculated \n              AVERAGING - Stride for calculation of averaged weights and sigma_mean \n              SCALE_MIN - minimum value of the scaling factor \n              SCALE_MAX - maximum value of the scaling factor \n                 DSCALE - maximum MC move of the scaling factor \n             OFFSET_MIN - minimum value of the offset \n             OFFSET_MAX - maximum value of the offset \n                DOFFSET - maximum MC move of the offset \n            REGRES_ZERO - stride for regression with zero offset \n                 DSIGMA - maximum MC move of the uncertainty parameter \n            SIGMA_MEAN0 - starting value for the uncertainty in the mean estimate \n        SIGMA_MAX_STEPS - Number of steps used to optimise SIGMA_MAX, before that the \n                          SIGMA_MAX value is used \n                   TEMP - the system temperature - this is only needed if code \n                          doesn't pass the temperature to plumed \n               MC_STEPS - number of MC steps \n           MC_CHUNKSIZE - MC chunksize \n            STATUS_FILE - write a file with all the data useful for \n                          restart/continuation of Metainference \n                    FMT - specify format for HILLS files (useful for decrease the \n                          number of digits in regtests) \n               SELECTOR - name of selector \n                NSELECT - range of values for selector [0, N-1] \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n                NOEDIST - Add an experimental value for each NOE.. You can use \n                          multiple instances of this keyword i.e. NOEDIST1, NOEDIST2, \n                          NOEDIST3... \n\n"
  },
  "NORMALIZED_EUCLIDEAN_DISTANCE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/NORMALIZED_EUCLIDEAN_DISTANCE",
    "description" : "Calculate the normalised euclidean distance between two points in CV space",
    "module" : "refdist",
    "displayname" : "NORMALIZED_EUCLIDEAN_DISTANCE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG1" : { "type": "compulsory", "description": "The poin that we are calculating the distance from", "multiple": 0, "actionlink": "none"},
       "ARG2" : { "type": "compulsory", "description": "The point that we are calculating the distance to", "multiple": 0, "actionlink": "none"},
       "METRIC" : { "type": "compulsory", "description": "The inverse covariance matrix that should be used when calculating the distance", "multiple": 0, "actionlink": "none"},
       "SQUARED" : { "type": "flag", "description": " The squared distance should be calculated", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the normalized euclidean distances between the input vectors"
         }
       }
    },
    "needs" : ["DISPLACEMENT", "CUSTOM", "OUTER_PRODUCT", "TRANSPOSE", "MATRIX_PRODUCT_DIAGONAL", "ONES"],
    "help" : "\nThe following arguments are compulsory: \n\n                   ARG1 - The poin that we are calculating the distance from \n                   ARG2 - The point that we are calculating the distance to \n                 METRIC - The inverse covariance matrix that should be used when \n                          calculating the distance \n\nIn addition you may use the following options: \n\n                SQUARED - ( default=off ) The squared distance should be calculated \n"
  },
  "ONES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ONES",
    "description" : "Create a constant vector with all elements equal to one",
    "module" : "generic",
    "displayname" : "ONES",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SIZE" : { "type": "compulsory", "description": "the number of ones that you would like to create", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "a vector of ones with the required number of elements"
         }
       }
    },
    "needs" : ["CONSTANT"],
    "help" : "\nThe following arguments are compulsory: \n\n                   SIZE - the number of ones that you would like to create \n"
  },
  "OPES_EXPANDED": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/OPES_EXPANDED",
    "description" : "On-the-fly probability enhanced sampling with expanded ensembles for the target distribution.",
    "module" : "opes",
    "displayname" : "OPES_EXPANDED",
     "dois" : ["10.1103/PhysRevX.10.041034"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the label of the ECVs that define the expansion", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "PACE" : { "type": "compulsory", "description": "how often the bias is updated", "multiple": 0, "actionlink": "none"},
       "OBSERVATION_STEPS" : { "type": "compulsory", "description": " number of unbiased initial PACE steps to collect statistics for initialization", "multiple": 0, "actionlink": "none", "default": "100"},
       "FILE" : { "type": "compulsory", "description": " a file with the estimate of the relative Delta F for each component of the target and of the global c(t)", "multiple": 0, "actionlink": "none", "default": "DELTAFS"},
       "PRINT_STRIDE" : { "type": "compulsory", "description": " stride for printing to DELTAFS file, in units of PACE", "multiple": 0, "actionlink": "none", "default": "100"},
       "FMT" : { "type": "optional", "description": "specify format for DELTAFS file", "multiple": 0, "actionlink": "none"},
       "STATE_RFILE" : { "type": "optional", "description": "read from this file the Delta F estimates and all the info needed to RESTART the simulation", "multiple": 0, "actionlink": "none"},
       "STATE_WFILE" : { "type": "optional", "description": "write to this file the Delta F estimates and all the info needed to RESTART the simulation", "multiple": 0, "actionlink": "none"},
       "STATE_WSTRIDE" : { "type": "optional", "description": "number of MD steps between writing the STATE_WFILE", "multiple": 0, "actionlink": "none"},
       "STORE_STATES" : { "type": "flag", "description": " append to STATE_WFILE instead of ovewriting it each time", "multiple": 0, "actionlink": "none", "default": "off"},
       "CALC_WORK" : { "type": "flag", "description": " calculate the total accumulated work done by the bias since last restart", "multiple": 0, "actionlink": "none", "default": "off"},
       "WALKERS_MPI" : { "type": "flag", "description": " switch on MPI version of multiple walkers", "multiple": 0, "actionlink": "none", "default": "off"},
       "SERIAL" : { "type": "flag", "description": " perform calculations in serial", "multiple": 0, "actionlink": "none", "default": "off"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "work" : {
           "flag": "CALC_WORK",
           "type": "scalar",
           "description": "total accumulated work done by the bias"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label of the ECVs that define the expansion. You can \n                          use an * to make sure all the output components of the ECVs are \n                          used, as in the examples above \n                   PACE - how often the bias is updated \n      OBSERVATION_STEPS - ( default=100 ) number of unbiased initial PACE steps to \n                          collect statistics for initialization \n                   FILE - ( default=DELTAFS ) a file with the estimate of the \n                          relative Delta F for each component of the target and of the global \n                          c(t) \n           PRINT_STRIDE - ( default=100 ) stride for printing to DELTAFS file, in \n                          units of PACE \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n           STORE_STATES - ( default=off ) append to STATE_WFILE instead of ovewriting \n                          it each time \n              CALC_WORK - ( default=off ) calculate the total accumulated work done \n                          by the bias since last restart \n            WALKERS_MPI - ( default=off ) switch on MPI version of multiple walkers \n                 SERIAL - ( default=off ) perform calculations in serial \n                    FMT - specify format for DELTAFS file \n            STATE_RFILE - read from this file the Delta F estimates and all the info \n                          needed to RESTART the simulation \n            STATE_WFILE - write to this file the Delta F estimates and all the info \n                          needed to RESTART the simulation \n          STATE_WSTRIDE - number of MD steps between writing the STATE_WFILE. Default \n                          is only on CPT events (but not all MD codes set them) \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \n\n"
  },
  "OPES_METAD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/OPES_METAD",
    "description" : "On-the-fly probability enhanced sampling with metadynamics-like target distribution.",
    "module" : "opes",
    "displayname" : "OPES_METAD",
     "dois" : ["10.1021/acs.jpclett.0c00497", "10.1016/j.revip.2017.05.001"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "compulsory", "description": " temperature", "multiple": 0, "actionlink": "none", "default": "-1"},
       "PACE" : { "type": "compulsory", "description": "the frequency for kernel deposition", "multiple": 0, "actionlink": "none"},
       "SIGMA" : { "type": "compulsory", "description": " the initial widths of the kernels", "multiple": 0, "actionlink": "none", "default": "ADAPTIVE"},
       "BARRIER" : { "type": "compulsory", "description": "the free energy barrier to be overcome", "multiple": 0, "actionlink": "none"},
       "COMPRESSION_THRESHOLD" : { "type": "compulsory", "description": " merge kernels if closer than this threshold, in units of sigma", "multiple": 0, "actionlink": "none", "default": "1"},
       "ADAPTIVE_SIGMA_STRIDE" : { "type": "optional", "description": "number of steps for measuring adaptive sigma", "multiple": 0, "actionlink": "none"},
       "SIGMA_MIN" : { "type": "optional", "description": "never reduce SIGMA below this value", "multiple": 0, "actionlink": "none"},
       "BIASFACTOR" : { "type": "optional", "description": "the gamma bias factor used for the well-tempered target distribution", "multiple": 0, "actionlink": "none"},
       "EPSILON" : { "type": "optional", "description": "the value of the regularization constant for the probability", "multiple": 0, "actionlink": "none"},
       "KERNEL_CUTOFF" : { "type": "optional", "description": "truncate kernels at this distance, in units of sigma", "multiple": 0, "actionlink": "none"},
       "NLIST_PARAMETERS" : { "type": "optional", "description": " the two cutoff parameters for the kernels neighbor list", "multiple": 0, "actionlink": "none", "default": "3.0,0.5"},
       "NLIST" : { "type": "flag", "description": " use neighbor list for kernels summation, faster but experimental", "multiple": 0, "actionlink": "none", "default": "off"},
       "NLIST_PACE_RESET" : { "type": "flag", "description": " force the reset of the neighbor list at each PACE", "multiple": 0, "actionlink": "none", "default": "off"},
       "FIXED_SIGMA" : { "type": "flag", "description": " do not decrease sigma as the simulation proceeds", "multiple": 0, "actionlink": "none", "default": "off"},
       "RECURSIVE_MERGE_OFF" : { "type": "flag", "description": " do not recursively attempt kernel merging when a new one is added", "multiple": 0, "actionlink": "none", "default": "off"},
       "NO_ZED" : { "type": "flag", "description": " do not normalize over the explored CV space, Z_n=1", "multiple": 0, "actionlink": "none", "default": "off"},
       "FILE" : { "type": "compulsory", "description": " a file in which the list of all deposited kernels is stored", "multiple": 0, "actionlink": "none", "default": "KERNELS"},
       "FMT" : { "type": "optional", "description": "specify format for KERNELS file", "multiple": 0, "actionlink": "none"},
       "STATE_RFILE" : { "type": "optional", "description": "read from this file the compressed kernels and all the info needed to RESTART the simulation", "multiple": 0, "actionlink": "none"},
       "STATE_WFILE" : { "type": "optional", "description": "write to this file the compressed kernels and all the info needed to RESTART the simulation", "multiple": 0, "actionlink": "none"},
       "STATE_WSTRIDE" : { "type": "optional", "description": "number of MD steps between writing the STATE_WFILE", "multiple": 0, "actionlink": "none"},
       "STORE_STATES" : { "type": "flag", "description": " append to STATE_WFILE instead of ovewriting it each time", "multiple": 0, "actionlink": "none", "default": "off"},
       "EXCLUDED_REGION" : { "type": "optional", "description": "kernels are not deposited when the action provided here has a nonzero value, see example above", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "EXTRA_BIAS" : { "type": "optional", "description": "consider also these other bias potentials for the internal reweighting", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "CALC_WORK" : { "type": "flag", "description": " calculate the total accumulated work done by the bias since last restart", "multiple": 0, "actionlink": "none", "default": "off"},
       "WALKERS_MPI" : { "type": "flag", "description": " switch on MPI version of multiple walkers", "multiple": 0, "actionlink": "none", "default": "off"},
       "SERIAL" : { "type": "flag", "description": " perform calculations in serial", "multiple": 0, "actionlink": "none", "default": "off"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "rct" : {
           "flag": "default",
           "type": "scalar",
           "description": "estimate of c(t)"
         },
         "zed" : {
           "flag": "default",
           "type": "scalar",
           "description": "estimate of Z_n"
         },
         "neff" : {
           "flag": "default",
           "type": "scalar",
           "description": "effective sample size"
         },
         "nker" : {
           "flag": "default",
           "type": "scalar",
           "description": "total number of compressed kernels used to represent the bias"
         },
         "work" : {
           "flag": "CALC_WORK",
           "type": "scalar",
           "description": "total accumulated work done by the bias"
         },
         "nlker" : {
           "flag": "NLIST",
           "type": "scalar",
           "description": "number of kernels in the neighbor list"
         },
         "nlsteps" : {
           "flag": "NLIST",
           "type": "scalar",
           "description": "number of steps from last neighbor list update"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n                   TEMP - ( default=-1 ) temperature. If not set, it is taken from MD \n                          engine, but not all MD codes provide it \n                   PACE - the frequency for kernel deposition \n                  SIGMA - ( default=ADAPTIVE ) the initial widths of the kernels. If \n                          not set, an adaptive sigma will be used with the given \n                          ADAPTIVE_SIGMA_STRIDE \n                BARRIER - the free energy barrier to be overcome. It is used to set \n                          BIASFACTOR, EPSILON, and KERNEL_CUTOFF to reasonable values \n  COMPRESSION_THRESHOLD - ( default=1 ) merge kernels if closer than this threshold, \n                          in units of sigma \n                   FILE - ( default=KERNELS ) a file in which the list of all \n                          deposited kernels is stored \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NLIST - ( default=off ) use neighbor list for kernels summation, \n                          faster but experimental \n       NLIST_PACE_RESET - ( default=off ) force the reset of the neighbor list at \n                          each PACE. Can be useful with WALKERS_MPI \n            FIXED_SIGMA - ( default=off ) do not decrease sigma as the simulation \n                          proceeds. Can be added in a RESTART, to keep in check the number of \n                          compressed kernels \n    RECURSIVE_MERGE_OFF - ( default=off ) do not recursively attempt kernel merging \n                          when a new one is added \n                 NO_ZED - ( default=off ) do not normalize over the explored CV \n                          space, Z_n=1 \n           STORE_STATES - ( default=off ) append to STATE_WFILE instead of ovewriting \n                          it each time \n              CALC_WORK - ( default=off ) calculate the total accumulated work done \n                          by the bias since last restart \n            WALKERS_MPI - ( default=off ) switch on MPI version of multiple walkers \n                 SERIAL - ( default=off ) perform calculations in serial \n  ADAPTIVE_SIGMA_STRIDE - number of steps for measuring adaptive sigma. Default is \n                          10xPACE \n              SIGMA_MIN - never reduce SIGMA below this value \n             BIASFACTOR - the gamma bias factor used for the well-tempered target \n                          distribution. Set to 'inf' for uniform flat target \n                EPSILON - the value of the regularization constant for the \n                          probability \n          KERNEL_CUTOFF - truncate kernels at this distance, in units of sigma \n       NLIST_PARAMETERS - ( default=3.0,0.5 ) the two cutoff parameters for the \n                          kernels neighbor list \n                    FMT - specify format for KERNELS file \n            STATE_RFILE - read from this file the compressed kernels and all the info \n                          needed to RESTART the simulation \n            STATE_WFILE - write to this file the compressed kernels and all the info \n                          needed to RESTART the simulation \n          STATE_WSTRIDE - number of MD steps between writing the STATE_WFILE. Default \n                          is only on CPT events (but not all MD codes set them) \n        EXCLUDED_REGION - kernels are not deposited when the action provided here has \n                          a nonzero value, see example above \n             EXTRA_BIAS - consider also these other bias potentials for the internal \n                          reweighting. This can be used e.g. for sampling a custom target \n                          distribution (see example above) \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \n\n"
  },
  "OPES_METAD_EXPLORE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/OPES_METAD_EXPLORE",
    "description" : "On-the-fly probability enhanced sampling with well-tempered target distribution in exploreation mode.",
    "module" : "opes",
    "displayname" : "OPES_METAD_EXPLORE",
     "dois" : ["10.1021/acs.jctc.2c00152"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "compulsory", "description": " temperature", "multiple": 0, "actionlink": "none", "default": "-1"},
       "PACE" : { "type": "compulsory", "description": "the frequency for kernel deposition", "multiple": 0, "actionlink": "none"},
       "SIGMA" : { "type": "compulsory", "description": " the initial widths of the kernels, divided by the square root of gamma", "multiple": 0, "actionlink": "none", "default": "ADAPTIVE"},
       "BARRIER" : { "type": "compulsory", "description": "the free energy barrier to be overcome", "multiple": 0, "actionlink": "none"},
       "COMPRESSION_THRESHOLD" : { "type": "compulsory", "description": " merge kernels if closer than this threshold, in units of sigma", "multiple": 0, "actionlink": "none", "default": "1"},
       "ADAPTIVE_SIGMA_STRIDE" : { "type": "optional", "description": "number of steps for measuring adaptive sigma", "multiple": 0, "actionlink": "none"},
       "SIGMA_MIN" : { "type": "optional", "description": "never reduce SIGMA below this value", "multiple": 0, "actionlink": "none"},
       "BIASFACTOR" : { "type": "optional", "description": "the gamma bias factor used for the well-tempered target distribution", "multiple": 0, "actionlink": "none"},
       "EPSILON" : { "type": "optional", "description": "the value of the regularization constant for the probability", "multiple": 0, "actionlink": "none"},
       "KERNEL_CUTOFF" : { "type": "optional", "description": "truncate kernels at this distance, in units of sigma", "multiple": 0, "actionlink": "none"},
       "NLIST_PARAMETERS" : { "type": "optional", "description": " the two cutoff parameters for the kernels neighbor list", "multiple": 0, "actionlink": "none", "default": "3.0,0.5"},
       "NLIST" : { "type": "flag", "description": " use neighbor list for kernels summation, faster but experimental", "multiple": 0, "actionlink": "none", "default": "off"},
       "NLIST_PACE_RESET" : { "type": "flag", "description": " force the reset of the neighbor list at each PACE", "multiple": 0, "actionlink": "none", "default": "off"},
       "FIXED_SIGMA" : { "type": "flag", "description": " do not decrease sigma as the simulation proceeds", "multiple": 0, "actionlink": "none", "default": "off"},
       "RECURSIVE_MERGE_OFF" : { "type": "flag", "description": " do not recursively attempt kernel merging when a new one is added", "multiple": 0, "actionlink": "none", "default": "off"},
       "NO_ZED" : { "type": "flag", "description": " do not normalize over the explored CV space, Z_n=1", "multiple": 0, "actionlink": "none", "default": "off"},
       "FILE" : { "type": "compulsory", "description": " a file in which the list of all deposited kernels is stored", "multiple": 0, "actionlink": "none", "default": "KERNELS"},
       "FMT" : { "type": "optional", "description": "specify format for KERNELS file", "multiple": 0, "actionlink": "none"},
       "STATE_RFILE" : { "type": "optional", "description": "read from this file the compressed kernels and all the info needed to RESTART the simulation", "multiple": 0, "actionlink": "none"},
       "STATE_WFILE" : { "type": "optional", "description": "write to this file the compressed kernels and all the info needed to RESTART the simulation", "multiple": 0, "actionlink": "none"},
       "STATE_WSTRIDE" : { "type": "optional", "description": "number of MD steps between writing the STATE_WFILE", "multiple": 0, "actionlink": "none"},
       "STORE_STATES" : { "type": "flag", "description": " append to STATE_WFILE instead of ovewriting it each time", "multiple": 0, "actionlink": "none", "default": "off"},
       "EXCLUDED_REGION" : { "type": "optional", "description": "kernels are not deposited when the action provided here has a nonzero value, see example above", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "CALC_WORK" : { "type": "flag", "description": " calculate the total accumulated work done by the bias since last restart", "multiple": 0, "actionlink": "none", "default": "off"},
       "WALKERS_MPI" : { "type": "flag", "description": " switch on MPI version of multiple walkers", "multiple": 0, "actionlink": "none", "default": "off"},
       "SERIAL" : { "type": "flag", "description": " perform calculations in serial", "multiple": 0, "actionlink": "none", "default": "off"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "rct" : {
           "flag": "default",
           "type": "scalar",
           "description": "estimate of c(t)"
         },
         "zed" : {
           "flag": "default",
           "type": "scalar",
           "description": "estimate of Z_n"
         },
         "neff" : {
           "flag": "default",
           "type": "scalar",
           "description": "effective sample size"
         },
         "nker" : {
           "flag": "default",
           "type": "scalar",
           "description": "total number of compressed kernels used to represent the bias"
         },
         "work" : {
           "flag": "CALC_WORK",
           "type": "scalar",
           "description": "total accumulated work done by the bias"
         },
         "nlker" : {
           "flag": "NLIST",
           "type": "scalar",
           "description": "number of kernels in the neighbor list"
         },
         "nlsteps" : {
           "flag": "NLIST",
           "type": "scalar",
           "description": "number of steps from last neighbor list update"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n                   TEMP - ( default=-1 ) temperature. If not set, it is taken from MD \n                          engine, but not all MD codes provide it \n                   PACE - the frequency for kernel deposition \n                  SIGMA - ( default=ADAPTIVE ) the initial widths of the kernels, \n                          divided by the square root of gamma. If not set, an adaptive sigma \n                          will be used with the given ADAPTIVE_SIGMA_STRIDE \n                BARRIER - the free energy barrier to be overcome. It is used to set \n                          BIASFACTOR, EPSILON, and KERNEL_CUTOFF to reasonable values \n  COMPRESSION_THRESHOLD - ( default=1 ) merge kernels if closer than this threshold, \n                          in units of sigma \n                   FILE - ( default=KERNELS ) a file in which the list of all \n                          deposited kernels is stored \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NLIST - ( default=off ) use neighbor list for kernels summation, \n                          faster but experimental \n       NLIST_PACE_RESET - ( default=off ) force the reset of the neighbor list at \n                          each PACE. Can be useful with WALKERS_MPI \n            FIXED_SIGMA - ( default=off ) do not decrease sigma as the simulation \n                          proceeds. Can be added in a RESTART, to keep in check the number of \n                          compressed kernels \n    RECURSIVE_MERGE_OFF - ( default=off ) do not recursively attempt kernel merging \n                          when a new one is added \n                 NO_ZED - ( default=off ) do not normalize over the explored CV \n                          space, Z_n=1 \n           STORE_STATES - ( default=off ) append to STATE_WFILE instead of ovewriting \n                          it each time \n              CALC_WORK - ( default=off ) calculate the total accumulated work done \n                          by the bias since last restart \n            WALKERS_MPI - ( default=off ) switch on MPI version of multiple walkers \n                 SERIAL - ( default=off ) perform calculations in serial \n  ADAPTIVE_SIGMA_STRIDE - number of steps for measuring adaptive sigma. Default is \n                          10xPACE \n              SIGMA_MIN - never reduce SIGMA below this value \n             BIASFACTOR - the gamma bias factor used for the well-tempered target \n                          distribution. Cannot be 'inf' \n                EPSILON - the value of the regularization constant for the \n                          probability \n          KERNEL_CUTOFF - truncate kernels at this distance, in units of sigma \n       NLIST_PARAMETERS - ( default=3.0,0.5 ) the two cutoff parameters for the \n                          kernels neighbor list \n                    FMT - specify format for KERNELS file \n            STATE_RFILE - read from this file the compressed kernels and all the info \n                          needed to RESTART the simulation \n            STATE_WFILE - write to this file the compressed kernels and all the info \n                          needed to RESTART the simulation \n          STATE_WSTRIDE - number of MD steps between writing the STATE_WFILE. Default \n                          is only on CPT events (but not all MD codes set them) \n        EXCLUDED_REGION - kernels are not deposited when the action provided here has \n                          a nonzero value, see example above \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \n\n"
  },
  "OPT_ADAM": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/OPT_ADAM",
    "description" : "Adaptive moment estimation (ADAM) optimizer.",
    "module" : "ves",
    "displayname" : "OPT_ADAM",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "BIAS" : { "type": "compulsory", "description": "the label of the VES bias to be optimized", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": "the frequency of updating the coefficients given in the number of MD steps", "multiple": 0, "actionlink": "none"},
       "COEFFS_FILE" : { "type": "compulsory", "description": " the name of output file for the coefficients", "multiple": 0, "actionlink": "none", "default": "coeffs.data"},
       "COEFFS_OUTPUT" : { "type": "compulsory", "description": " how often the coefficients should be written to file", "multiple": 0, "actionlink": "none", "default": "100"},
       "COEFFS_FMT" : { "type": "optional", "description": "specify format for coefficient file(s) (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "COEFFS_SET_ID_PREFIX" : { "type": "optional", "description": "suffix to add to the filename given in FILE to identify the bias, should only be given if a single filename is given in FILE when optimizing multiple biases", "multiple": 0, "actionlink": "none"},
       "INITIAL_COEFFS" : { "type": "optional", "description": "the name(s) of file(s) with the initial coefficients", "multiple": 0, "actionlink": "none"},
       "GRADIENT_FILE" : { "type": "hidden", "description": "the name of output file for the gradient", "multiple": 0, "actionlink": "none"},
       "GRADIENT_OUTPUT" : { "type": "hidden", "description": "how often the gradient should be written to file", "multiple": 0, "actionlink": "none"},
       "GRADIENT_FMT" : { "type": "hidden", "description": "specify format for gradient file(s) (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "MONITOR_INSTANTANEOUS_GRADIENT" : { "type": "flag", "description": " if quantities related to the instantaneous gradient should be outputted", "multiple": 0, "actionlink": "none", "default": "off"},
       "TARGETDIST_AVERAGES_FILE" : { "type": "optional", "description": "the name of output file for the target distribution averages", "multiple": 0, "actionlink": "none"},
       "TARGETDIST_AVERAGES_OUTPUT" : { "type": "optional", "description": "how often the target distribution averages should be written out to file", "multiple": 0, "actionlink": "none"},
       "TARGETDIST_AVERAGES_FMT" : { "type": "hidden", "description": "specify format for target distribution averages file(s) (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "BIAS_OUTPUT" : { "type": "optional", "description": "how often the bias(es) should be written out to file", "multiple": 0, "actionlink": "none"},
       "FES_OUTPUT" : { "type": "optional", "description": "how often the FES(s) should be written out to file", "multiple": 0, "actionlink": "none"},
       "FES_PROJ_OUTPUT" : { "type": "optional", "description": "how often the projections of the FES(s) should be written out to file", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"},
       "STEPSIZE" : { "type": "compulsory", "description": "the step size used for the optimization", "multiple": 0, "actionlink": "none"},
       "MULTIPLE_WALKERS" : { "type": "flag", "description": " if optimization is to be performed using multiple walkers connected via MPI", "multiple": 0, "actionlink": "none", "default": "off"},
       "MASK_FILE" : { "type": "optional", "description": "read in a mask file which allows one to employ different step sizes for different coefficients and/or deactivate the optimization of certain coefficients (by putting values of 0", "multiple": 0, "actionlink": "none"},
       "OUTPUT_MASK_FILE" : { "type": "optional", "description": "Name of the file to write out the mask resulting from using the MASK_FILE keyword", "multiple": 0, "actionlink": "none"},
       "TARGETDIST_STRIDE" : { "type": "optional", "description": "stride for updating a target distribution that is iteratively updated during the optimization", "multiple": 0, "actionlink": "none"},
       "TARGETDIST_OUTPUT" : { "type": "optional", "description": "how often the dynamic target distribution(s) should be written out to file", "multiple": 0, "actionlink": "none"},
       "TARGETDIST_PROJ_OUTPUT" : { "type": "optional", "description": "how often the projections of the dynamic target distribution(s) should be written out to file", "multiple": 0, "actionlink": "none"},
       "BETA_1" : { "type": "optional", "description": "Parameter for the first moment estimate", "multiple": 0, "actionlink": "none"},
       "BETA_2" : { "type": "optional", "description": "Parameter for the second moment estimate", "multiple": 0, "actionlink": "none"},
       "EPSILON" : { "type": "optional", "description": "Small parameter to avoid division by zero", "multiple": 0, "actionlink": "none"},
       "ADAMW_WEIGHT_DECAY" : { "type": "optional", "description": "Weight decay parameter for the AdamW variant", "multiple": 0, "actionlink": "none"},
       "AMSGRAD" : { "type": "flag", "description": " Use the AMSGrad variant", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "gradrms" : {
           "flag": "MONITOR_INSTANTANEOUS_GRADIENT",
           "type": "scalar",
           "description": "the root mean square value of the coefficient gradient"
         },
         "gradmax" : {
           "flag": "MONITOR_INSTANTANEOUS_GRADIENT",
           "type": "scalar",
           "description": "the largest absolute value of the coefficient gradient"
         },
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "a scalar"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                   BIAS - the label of the VES bias to be optimized \n                 STRIDE - the frequency of updating the coefficients given in the \n                          number of MD steps. \n            COEFFS_FILE - ( default=coeffs.data ) the name of output file for the \n                          coefficients \n          COEFFS_OUTPUT - ( default=100 ) how often the coefficients should be \n                          written to file. This parameter is given as the number of \n                          iterations. \n               STEPSIZE - the step size used for the optimization \n\nIn addition you may use the following options: \n\nMONITOR_INSTANTANEOUS_GRADIENT - ( default=off ) if quantities related to the instantaneous \n                          gradient should be outputted. \n       MULTIPLE_WALKERS - ( default=off ) if optimization is to be performed using \n                          multiple walkers connected via MPI \n                AMSGRAD - ( default=off ) Use the AMSGrad variant \n             COEFFS_FMT - specify format for coefficient file(s) (useful for decrease \n                          the number of digits in regtests) \n   COEFFS_SET_ID_PREFIX - suffix to add to the filename given in FILE to identify the \n                          bias, should only be given if a single filename is given in FILE \n                          when optimizing multiple biases. \n         INITIAL_COEFFS - the name(s) of file(s) with the initial coefficients \nTARGETDIST_AVERAGES_FILE - the name of output file for the target distribution \n                          averages. By default it is targetdist-averages.data. \nTARGETDIST_AVERAGES_OUTPUT - how often the target distribution averages should be \n                          written out to file. Note that the value is given in terms of \n                          coefficient iterations. If no value is given are the averages only \n                          written at the beginning of the optimization \n            BIAS_OUTPUT - how often the bias(es) should be written out to file. Note \n                          that the value is given in terms of coefficient iterations. \n             FES_OUTPUT - how often the FES(s) should be written out to file. Note \n                          that the value is given in terms of coefficient iterations. \n        FES_PROJ_OUTPUT - how often the projections of the FES(s) should be written \n                          out to file. Note that the value is given in terms of \n                          coefficient iterations. \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \n              MASK_FILE - read in a mask file which allows one to employ different \n                          step sizes for different coefficients and/or deactivate the \n                          optimization of certain coefficients (by putting values of 0.0). One can \n                          write out the resulting mask by using the OUTPUT_MASK_FILE \n                          keyword. \n       OUTPUT_MASK_FILE - Name of the file to write out the mask resulting from using \n                          the MASK_FILE keyword. Can also be used to generate a template \n                          mask file. \n      TARGETDIST_STRIDE - stride for updating a target distribution that is \n                          iteratively updated during the optimization. Note that the value is \n                          given in terms of coefficient iterations. \n      TARGETDIST_OUTPUT - how often the dynamic target distribution(s) should be \n                          written out to file. Note that the value is given in terms of \n                          coefficient iterations. \n TARGETDIST_PROJ_OUTPUT - how often the projections of the dynamic target \n                          distribution(s) should be written out to file. Note that the value is given \n                          in terms of coefficient iterations. \n                 BETA_1 - Parameter for the first moment estimate. Defaults to 0.9 \n                 BETA_2 - Parameter for the second moment estimate. Defaults to 0.999 \n                EPSILON - Small parameter to avoid division by zero. Defaults to 1e-8 \n     ADAMW_WEIGHT_DECAY - Weight decay parameter for the AdamW variant. Defaults to 0 \n\n"
  },
  "OPT_AVERAGED_SGD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/OPT_AVERAGED_SGD",
    "description" : "Averaged stochastic gradient decent with fixed step size.",
    "module" : "ves",
    "displayname" : "OPT_AVERAGED_SGD",
     "dois" : ["10.1021/acs.jctc.5b00076"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "BIAS" : { "type": "compulsory", "description": "the label of the VES bias to be optimized", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": "the frequency of updating the coefficients given in the number of MD steps", "multiple": 0, "actionlink": "none"},
       "COEFFS_FILE" : { "type": "compulsory", "description": " the name of output file for the coefficients", "multiple": 0, "actionlink": "none", "default": "coeffs.data"},
       "COEFFS_OUTPUT" : { "type": "compulsory", "description": " how often the coefficients should be written to file", "multiple": 0, "actionlink": "none", "default": "100"},
       "COEFFS_FMT" : { "type": "optional", "description": "specify format for coefficient file(s) (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "COEFFS_SET_ID_PREFIX" : { "type": "optional", "description": "suffix to add to the filename given in FILE to identify the bias, should only be given if a single filename is given in FILE when optimizing multiple biases", "multiple": 0, "actionlink": "none"},
       "INITIAL_COEFFS" : { "type": "optional", "description": "the name(s) of file(s) with the initial coefficients", "multiple": 0, "actionlink": "none"},
       "GRADIENT_FILE" : { "type": "hidden", "description": "the name of output file for the gradient", "multiple": 0, "actionlink": "none"},
       "GRADIENT_OUTPUT" : { "type": "hidden", "description": "how often the gradient should be written to file", "multiple": 0, "actionlink": "none"},
       "GRADIENT_FMT" : { "type": "hidden", "description": "specify format for gradient file(s) (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "MONITOR_INSTANTANEOUS_GRADIENT" : { "type": "flag", "description": " if quantities related to the instantaneous gradient should be outputted", "multiple": 0, "actionlink": "none", "default": "off"},
       "TARGETDIST_AVERAGES_FILE" : { "type": "optional", "description": "the name of output file for the target distribution averages", "multiple": 0, "actionlink": "none"},
       "TARGETDIST_AVERAGES_OUTPUT" : { "type": "optional", "description": "how often the target distribution averages should be written out to file", "multiple": 0, "actionlink": "none"},
       "TARGETDIST_AVERAGES_FMT" : { "type": "hidden", "description": "specify format for target distribution averages file(s) (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "BIAS_OUTPUT" : { "type": "optional", "description": "how often the bias(es) should be written out to file", "multiple": 0, "actionlink": "none"},
       "FES_OUTPUT" : { "type": "optional", "description": "how often the FES(s) should be written out to file", "multiple": 0, "actionlink": "none"},
       "FES_PROJ_OUTPUT" : { "type": "optional", "description": "how often the projections of the FES(s) should be written out to file", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"},
       "STEPSIZE" : { "type": "compulsory", "description": "the step size used for the optimization", "multiple": 0, "actionlink": "none"},
       "MULTIPLE_WALKERS" : { "type": "flag", "description": " if optimization is to be performed using multiple walkers connected via MPI", "multiple": 0, "actionlink": "none", "default": "off"},
       "HESSIAN_FILE" : { "type": "hidden", "description": "the name of output file for the Hessian", "multiple": 0, "actionlink": "none"},
       "HESSIAN_OUTPUT" : { "type": "hidden", "description": "how often the Hessian should be written to file", "multiple": 0, "actionlink": "none"},
       "HESSIAN_FMT" : { "type": "hidden", "description": "specify format for hessian file(s) (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "MASK_FILE" : { "type": "optional", "description": "read in a mask file which allows one to employ different step sizes for different coefficients and/or deactivate the optimization of certain coefficients (by putting values of 0", "multiple": 0, "actionlink": "none"},
       "OUTPUT_MASK_FILE" : { "type": "optional", "description": "Name of the file to write out the mask resulting from using the MASK_FILE keyword", "multiple": 0, "actionlink": "none"},
       "START_OPTIMIZATION_AFRESH" : { "type": "flag", "description": " if the iterations should be started afresh when a restart has been triggered by the RESTART keyword or the MD code", "multiple": 0, "actionlink": "none", "default": "off"},
       "MONITOR_AVERAGE_GRADIENT" : { "type": "flag", "description": " if the averaged gradient should be monitored and quantities related to it should be outputted", "multiple": 0, "actionlink": "none", "default": "off"},
       "MONITOR_AVERAGES_GRADIENT_EXP_DECAY" : { "type": "optional", "description": "use an exponentially decaying averaging with a given time constant when monitoring the averaged gradient", "multiple": 0, "actionlink": "none"},
       "TARGETDIST_STRIDE" : { "type": "optional", "description": "stride for updating a target distribution that is iteratively updated during the optimization", "multiple": 0, "actionlink": "none"},
       "TARGETDIST_OUTPUT" : { "type": "optional", "description": "how often the dynamic target distribution(s) should be written out to file", "multiple": 0, "actionlink": "none"},
       "TARGETDIST_PROJ_OUTPUT" : { "type": "optional", "description": "how often the projections of the dynamic target distribution(s) should be written out to file", "multiple": 0, "actionlink": "none"},
       "COMBINED_GRADIENT_FILE" : { "type": "hidden", "description": "the name of output file for the combined gradient (gradient + Hessian term)", "multiple": 0, "actionlink": "none"},
       "COMBINED_GRADIENT_OUTPUT" : { "type": "hidden", "description": "how often the combined gradient should be written to file", "multiple": 0, "actionlink": "none"},
       "COMBINED_GRADIENT_FMT" : { "type": "hidden", "description": "specify format for combined gradient file(s) (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "EXP_DECAYING_AVER" : { "type": "optional", "description": "calculate the averaged coefficients using exponentially decaying averaging using the decaying constant given here in the number of iterations", "multiple": 0, "actionlink": "none"},
       "output" : {
         "gradrms" : {
           "flag": "MONITOR_INSTANTANEOUS_GRADIENT",
           "type": "scalar",
           "description": "the root mean square value of the coefficient gradient"
         },
         "gradmax" : {
           "flag": "MONITOR_INSTANTANEOUS_GRADIENT",
           "type": "scalar",
           "description": "the largest absolute value of the coefficient gradient"
         },
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "a scalar"
         },
         "avergradrms" : {
           "flag": "MONITOR_AVERAGE_GRADIENT",
           "type": "scalar",
           "description": "the root mean square value of the averaged coefficient gradient"
         },
         "avergradmax" : {
           "flag": "MONITOR_AVERAGE_GRADIENT",
           "type": "scalar",
           "description": "the largest absolute value of the averaged coefficient gradient"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                   BIAS - the label of the VES bias to be optimized \n                 STRIDE - the frequency of updating the coefficients given in the \n                          number of MD steps. \n            COEFFS_FILE - ( default=coeffs.data ) the name of output file for the \n                          coefficients \n          COEFFS_OUTPUT - ( default=100 ) how often the coefficients should be \n                          written to file. This parameter is given as the number of \n                          iterations. \n               STEPSIZE - the step size used for the optimization \n\nIn addition you may use the following options: \n\nMONITOR_INSTANTANEOUS_GRADIENT - ( default=off ) if quantities related to the instantaneous \n                          gradient should be outputted. \n       MULTIPLE_WALKERS - ( default=off ) if optimization is to be performed using \n                          multiple walkers connected via MPI \nSTART_OPTIMIZATION_AFRESH - ( default=off ) if the iterations should be started afresh \n                          when a restart has been triggered by the RESTART keyword or the \n                          MD code. \nMONITOR_AVERAGE_GRADIENT - ( default=off ) if the averaged gradient should be \n                          monitored and quantities related to it should be outputted. \n             COEFFS_FMT - specify format for coefficient file(s) (useful for decrease \n                          the number of digits in regtests) \n   COEFFS_SET_ID_PREFIX - suffix to add to the filename given in FILE to identify the \n                          bias, should only be given if a single filename is given in FILE \n                          when optimizing multiple biases. \n         INITIAL_COEFFS - the name(s) of file(s) with the initial coefficients \nTARGETDIST_AVERAGES_FILE - the name of output file for the target distribution \n                          averages. By default it is targetdist-averages.data. \nTARGETDIST_AVERAGES_OUTPUT - how often the target distribution averages should be \n                          written out to file. Note that the value is given in terms of \n                          coefficient iterations. If no value is given are the averages only \n                          written at the beginning of the optimization \n            BIAS_OUTPUT - how often the bias(es) should be written out to file. Note \n                          that the value is given in terms of coefficient iterations. \n             FES_OUTPUT - how often the FES(s) should be written out to file. Note \n                          that the value is given in terms of coefficient iterations. \n        FES_PROJ_OUTPUT - how often the projections of the FES(s) should be written \n                          out to file. Note that the value is given in terms of \n                          coefficient iterations. \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \n              MASK_FILE - read in a mask file which allows one to employ different \n                          step sizes for different coefficients and/or deactivate the \n                          optimization of certain coefficients (by putting values of 0.0). One can \n                          write out the resulting mask by using the OUTPUT_MASK_FILE \n                          keyword. \n       OUTPUT_MASK_FILE - Name of the file to write out the mask resulting from using \n                          the MASK_FILE keyword. Can also be used to generate a template \n                          mask file. \nMONITOR_AVERAGES_GRADIENT_EXP_DECAY - use an exponentially decaying averaging with a given time \n                          constant when monitoring the averaged gradient \n      TARGETDIST_STRIDE - stride for updating a target distribution that is \n                          iteratively updated during the optimization. Note that the value is \n                          given in terms of coefficient iterations. \n      TARGETDIST_OUTPUT - how often the dynamic target distribution(s) should be \n                          written out to file. Note that the value is given in terms of \n                          coefficient iterations. \n TARGETDIST_PROJ_OUTPUT - how often the projections of the dynamic target \n                          distribution(s) should be written out to file. Note that the value is given \n                          in terms of coefficient iterations. \n      EXP_DECAYING_AVER - calculate the averaged coefficients using exponentially \n                          decaying averaging using the decaying constant given here in the \n                          number of iterations \n\n"
  },
  "OPT_DUMMY": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/OPT_DUMMY",
    "description" : "Dummy optimizer for debugging.",
    "module" : "ves",
    "displayname" : "OPT_DUMMY",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "BIAS" : { "type": "compulsory", "description": "the label of the VES bias to be optimized", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": "the frequency of updating the coefficients given in the number of MD steps", "multiple": 0, "actionlink": "none"},
       "COEFFS_FILE" : { "type": "compulsory", "description": " the name of output file for the coefficients", "multiple": 0, "actionlink": "none", "default": "coeffs.data"},
       "COEFFS_OUTPUT" : { "type": "compulsory", "description": " how often the coefficients should be written to file", "multiple": 0, "actionlink": "none", "default": "100"},
       "COEFFS_FMT" : { "type": "optional", "description": "specify format for coefficient file(s) (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "COEFFS_SET_ID_PREFIX" : { "type": "optional", "description": "suffix to add to the filename given in FILE to identify the bias, should only be given if a single filename is given in FILE when optimizing multiple biases", "multiple": 0, "actionlink": "none"},
       "INITIAL_COEFFS" : { "type": "optional", "description": "the name(s) of file(s) with the initial coefficients", "multiple": 0, "actionlink": "none"},
       "GRADIENT_FILE" : { "type": "hidden", "description": "the name of output file for the gradient", "multiple": 0, "actionlink": "none"},
       "GRADIENT_OUTPUT" : { "type": "hidden", "description": "how often the gradient should be written to file", "multiple": 0, "actionlink": "none"},
       "GRADIENT_FMT" : { "type": "hidden", "description": "specify format for gradient file(s) (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "MONITOR_INSTANTANEOUS_GRADIENT" : { "type": "flag", "description": " if quantities related to the instantaneous gradient should be outputted", "multiple": 0, "actionlink": "none", "default": "off"},
       "TARGETDIST_AVERAGES_FILE" : { "type": "optional", "description": "the name of output file for the target distribution averages", "multiple": 0, "actionlink": "none"},
       "TARGETDIST_AVERAGES_OUTPUT" : { "type": "optional", "description": "how often the target distribution averages should be written out to file", "multiple": 0, "actionlink": "none"},
       "TARGETDIST_AVERAGES_FMT" : { "type": "hidden", "description": "specify format for target distribution averages file(s) (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "BIAS_OUTPUT" : { "type": "optional", "description": "how often the bias(es) should be written out to file", "multiple": 0, "actionlink": "none"},
       "FES_OUTPUT" : { "type": "optional", "description": "how often the FES(s) should be written out to file", "multiple": 0, "actionlink": "none"},
       "FES_PROJ_OUTPUT" : { "type": "optional", "description": "how often the projections of the FES(s) should be written out to file", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"},
       "MULTIPLE_WALKERS" : { "type": "flag", "description": " if optimization is to be performed using multiple walkers connected via MPI", "multiple": 0, "actionlink": "none", "default": "off"},
       "HESSIAN_FILE" : { "type": "hidden", "description": "the name of output file for the Hessian", "multiple": 0, "actionlink": "none"},
       "HESSIAN_OUTPUT" : { "type": "hidden", "description": "how often the Hessian should be written to file", "multiple": 0, "actionlink": "none"},
       "HESSIAN_FMT" : { "type": "hidden", "description": "specify format for hessian file(s) (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "MONITOR_AVERAGE_GRADIENT" : { "type": "flag", "description": " if the averaged gradient should be monitored and quantities related to it should be outputted", "multiple": 0, "actionlink": "none", "default": "off"},
       "MONITOR_AVERAGES_GRADIENT_EXP_DECAY" : { "type": "optional", "description": "use an exponentially decaying averaging with a given time constant when monitoring the averaged gradient", "multiple": 0, "actionlink": "none"},
       "MONITOR_HESSIAN" : { "type": "flag", "description": " also monitor the Hessian", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "gradrms" : {
           "flag": "MONITOR_INSTANTANEOUS_GRADIENT",
           "type": "scalar",
           "description": "the root mean square value of the coefficient gradient"
         },
         "gradmax" : {
           "flag": "MONITOR_INSTANTANEOUS_GRADIENT",
           "type": "scalar",
           "description": "the largest absolute value of the coefficient gradient"
         },
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "a scalar"
         },
         "avergradrms" : {
           "flag": "MONITOR_AVERAGE_GRADIENT",
           "type": "scalar",
           "description": "the root mean square value of the averaged coefficient gradient"
         },
         "avergradmax" : {
           "flag": "MONITOR_AVERAGE_GRADIENT",
           "type": "scalar",
           "description": "the largest absolute value of the averaged coefficient gradient"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                   BIAS - the label of the VES bias to be optimized \n                 STRIDE - the frequency of updating the coefficients given in the \n                          number of MD steps. \n            COEFFS_FILE - ( default=coeffs.data ) the name of output file for the \n                          coefficients \n          COEFFS_OUTPUT - ( default=100 ) how often the coefficients should be \n                          written to file. This parameter is given as the number of \n                          iterations. \n\nIn addition you may use the following options: \n\nMONITOR_INSTANTANEOUS_GRADIENT - ( default=off ) if quantities related to the instantaneous \n                          gradient should be outputted. \n       MULTIPLE_WALKERS - ( default=off ) if optimization is to be performed using \n                          multiple walkers connected via MPI \nMONITOR_AVERAGE_GRADIENT - ( default=off ) if the averaged gradient should be \n                          monitored and quantities related to it should be outputted. \n        MONITOR_HESSIAN - ( default=off ) also monitor the Hessian \n             COEFFS_FMT - specify format for coefficient file(s) (useful for decrease \n                          the number of digits in regtests) \n   COEFFS_SET_ID_PREFIX - suffix to add to the filename given in FILE to identify the \n                          bias, should only be given if a single filename is given in FILE \n                          when optimizing multiple biases. \n         INITIAL_COEFFS - the name(s) of file(s) with the initial coefficients \nTARGETDIST_AVERAGES_FILE - the name of output file for the target distribution \n                          averages. By default it is targetdist-averages.data. \nTARGETDIST_AVERAGES_OUTPUT - how often the target distribution averages should be \n                          written out to file. Note that the value is given in terms of \n                          coefficient iterations. If no value is given are the averages only \n                          written at the beginning of the optimization \n            BIAS_OUTPUT - how often the bias(es) should be written out to file. Note \n                          that the value is given in terms of coefficient iterations. \n             FES_OUTPUT - how often the FES(s) should be written out to file. Note \n                          that the value is given in terms of coefficient iterations. \n        FES_PROJ_OUTPUT - how often the projections of the FES(s) should be written \n                          out to file. Note that the value is given in terms of \n                          coefficient iterations. \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \nMONITOR_AVERAGES_GRADIENT_EXP_DECAY - use an exponentially decaying averaging with a given time \n                          constant when monitoring the averaged gradient \n\n"
  },
  "OPT_ROBBINS_MONRO_SGD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/OPT_ROBBINS_MONRO_SGD",
    "description" : "Robbins-Monro stochastic gradient decent.",
    "module" : "ves",
    "displayname" : "OPT_ROBBINS_MONRO_SGD",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "BIAS" : { "type": "compulsory", "description": "the label of the VES bias to be optimized", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": "the frequency of updating the coefficients given in the number of MD steps", "multiple": 0, "actionlink": "none"},
       "COEFFS_FILE" : { "type": "compulsory", "description": " the name of output file for the coefficients", "multiple": 0, "actionlink": "none", "default": "coeffs.data"},
       "COEFFS_OUTPUT" : { "type": "compulsory", "description": " how often the coefficients should be written to file", "multiple": 0, "actionlink": "none", "default": "100"},
       "COEFFS_FMT" : { "type": "optional", "description": "specify format for coefficient file(s) (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "COEFFS_SET_ID_PREFIX" : { "type": "optional", "description": "suffix to add to the filename given in FILE to identify the bias, should only be given if a single filename is given in FILE when optimizing multiple biases", "multiple": 0, "actionlink": "none"},
       "INITIAL_COEFFS" : { "type": "optional", "description": "the name(s) of file(s) with the initial coefficients", "multiple": 0, "actionlink": "none"},
       "GRADIENT_FILE" : { "type": "hidden", "description": "the name of output file for the gradient", "multiple": 0, "actionlink": "none"},
       "GRADIENT_OUTPUT" : { "type": "hidden", "description": "how often the gradient should be written to file", "multiple": 0, "actionlink": "none"},
       "GRADIENT_FMT" : { "type": "hidden", "description": "specify format for gradient file(s) (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "MONITOR_INSTANTANEOUS_GRADIENT" : { "type": "flag", "description": " if quantities related to the instantaneous gradient should be outputted", "multiple": 0, "actionlink": "none", "default": "off"},
       "TARGETDIST_AVERAGES_FILE" : { "type": "optional", "description": "the name of output file for the target distribution averages", "multiple": 0, "actionlink": "none"},
       "TARGETDIST_AVERAGES_OUTPUT" : { "type": "optional", "description": "how often the target distribution averages should be written out to file", "multiple": 0, "actionlink": "none"},
       "TARGETDIST_AVERAGES_FMT" : { "type": "hidden", "description": "specify format for target distribution averages file(s) (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "BIAS_OUTPUT" : { "type": "optional", "description": "how often the bias(es) should be written out to file", "multiple": 0, "actionlink": "none"},
       "FES_OUTPUT" : { "type": "optional", "description": "how often the FES(s) should be written out to file", "multiple": 0, "actionlink": "none"},
       "FES_PROJ_OUTPUT" : { "type": "optional", "description": "how often the projections of the FES(s) should be written out to file", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"},
       "INITIAL_STEPSIZE" : { "type": "compulsory", "description": "the initial step size used for the optimization", "multiple": 0, "actionlink": "none"},
       "MULTIPLE_WALKERS" : { "type": "flag", "description": " if optimization is to be performed using multiple walkers connected via MPI", "multiple": 0, "actionlink": "none", "default": "off"},
       "MASK_FILE" : { "type": "optional", "description": "read in a mask file which allows one to employ different step sizes for different coefficients and/or deactivate the optimization of certain coefficients (by putting values of 0", "multiple": 0, "actionlink": "none"},
       "OUTPUT_MASK_FILE" : { "type": "optional", "description": "Name of the file to write out the mask resulting from using the MASK_FILE keyword", "multiple": 0, "actionlink": "none"},
       "START_OPTIMIZATION_AFRESH" : { "type": "flag", "description": " if the iterations should be started afresh when a restart has been triggered by the RESTART keyword or the MD code", "multiple": 0, "actionlink": "none", "default": "off"},
       "TARGETDIST_STRIDE" : { "type": "optional", "description": "stride for updating a target distribution that is iteratively updated during the optimization", "multiple": 0, "actionlink": "none"},
       "TARGETDIST_OUTPUT" : { "type": "optional", "description": "how often the dynamic target distribution(s) should be written out to file", "multiple": 0, "actionlink": "none"},
       "TARGETDIST_PROJ_OUTPUT" : { "type": "optional", "description": "how often the projections of the dynamic target distribution(s) should be written out to file", "multiple": 0, "actionlink": "none"},
       "DECAY_CONSTANT" : { "type": "optional", "description": "the decay constant used for the step size", "multiple": 0, "actionlink": "none"},
       "output" : {
         "gradrms" : {
           "flag": "MONITOR_INSTANTANEOUS_GRADIENT",
           "type": "scalar",
           "description": "the root mean square value of the coefficient gradient"
         },
         "gradmax" : {
           "flag": "MONITOR_INSTANTANEOUS_GRADIENT",
           "type": "scalar",
           "description": "the largest absolute value of the coefficient gradient"
         },
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "a scalar"
         },
         "stepsize" : {
           "flag": "default",
           "type": "scalar",
           "description": "the current value of step size used to update the coefficients"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                   BIAS - the label of the VES bias to be optimized \n                 STRIDE - the frequency of updating the coefficients given in the \n                          number of MD steps. \n            COEFFS_FILE - ( default=coeffs.data ) the name of output file for the \n                          coefficients \n          COEFFS_OUTPUT - ( default=100 ) how often the coefficients should be \n                          written to file. This parameter is given as the number of \n                          iterations. \n       INITIAL_STEPSIZE - the initial step size used for the optimization \n\nIn addition you may use the following options: \n\nMONITOR_INSTANTANEOUS_GRADIENT - ( default=off ) if quantities related to the instantaneous \n                          gradient should be outputted. \n       MULTIPLE_WALKERS - ( default=off ) if optimization is to be performed using \n                          multiple walkers connected via MPI \nSTART_OPTIMIZATION_AFRESH - ( default=off ) if the iterations should be started afresh \n                          when a restart has been triggered by the RESTART keyword or the \n                          MD code. \n             COEFFS_FMT - specify format for coefficient file(s) (useful for decrease \n                          the number of digits in regtests) \n   COEFFS_SET_ID_PREFIX - suffix to add to the filename given in FILE to identify the \n                          bias, should only be given if a single filename is given in FILE \n                          when optimizing multiple biases. \n         INITIAL_COEFFS - the name(s) of file(s) with the initial coefficients \nTARGETDIST_AVERAGES_FILE - the name of output file for the target distribution \n                          averages. By default it is targetdist-averages.data. \nTARGETDIST_AVERAGES_OUTPUT - how often the target distribution averages should be \n                          written out to file. Note that the value is given in terms of \n                          coefficient iterations. If no value is given are the averages only \n                          written at the beginning of the optimization \n            BIAS_OUTPUT - how often the bias(es) should be written out to file. Note \n                          that the value is given in terms of coefficient iterations. \n             FES_OUTPUT - how often the FES(s) should be written out to file. Note \n                          that the value is given in terms of coefficient iterations. \n        FES_PROJ_OUTPUT - how often the projections of the FES(s) should be written \n                          out to file. Note that the value is given in terms of \n                          coefficient iterations. \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \n              MASK_FILE - read in a mask file which allows one to employ different \n                          step sizes for different coefficients and/or deactivate the \n                          optimization of certain coefficients (by putting values of 0.0). One can \n                          write out the resulting mask by using the OUTPUT_MASK_FILE \n                          keyword. \n       OUTPUT_MASK_FILE - Name of the file to write out the mask resulting from using \n                          the MASK_FILE keyword. Can also be used to generate a template \n                          mask file. \n      TARGETDIST_STRIDE - stride for updating a target distribution that is \n                          iteratively updated during the optimization. Note that the value is \n                          given in terms of coefficient iterations. \n      TARGETDIST_OUTPUT - how often the dynamic target distribution(s) should be \n                          written out to file. Note that the value is given in terms of \n                          coefficient iterations. \n TARGETDIST_PROJ_OUTPUT - how often the projections of the dynamic target \n                          distribution(s) should be written out to file. Note that the value is given \n                          in terms of coefficient iterations. \n         DECAY_CONSTANT - the decay constant used for the step size. \n\n"
  },
  "OUTER_PRODUCT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/OUTER_PRODUCT",
    "description" : "Calculate the outer product matrix of two vectors",
    "module" : "matrixtools",
    "displayname" : "OUTER_PRODUCT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the two vectors from which the outer product is being computed", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "MASK" : { "type": "optional", "description": "a matrix that is used to used to determine which elements of the output matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "FUNC" : { "type": "compulsory", "description": " the function of the input vectors that should be put in the elements of the outer product", "multiple": 0, "actionlink": "none", "default": "x*y"},
       "ELEMENTS_ON_DIAGONAL_ARE_ZERO" : { "type": "flag", "description": " set all diagonal elements to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "a matrix containing the outer product of the two input vectors that was obtained using the function that was input"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the two vectors from which the outer product \n                          is being computed \n                   FUNC - ( default=x*y ) the function of the input vectors that \n                          should be put in the elements of the outer product \n\nIn addition you may use the following options: \n\nELEMENTS_ON_DIAGONAL_ARE_ZERO - ( default=off ) set all diagonal elements to zero \n                   MASK - a matrix that is used to used to determine which elements \n                          of the output matrix to compute \n\n"
  },
  "OUTER_PRODUCT_FUNC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/OUTER_PRODUCT_FUNC",
    "description" : "",
    "module" : "matrixtools",
    "displayname" : "OUTER_PRODUCT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the labels of the two vectors from which the outer product is being computed", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "MASK" : { "type": "optional", "description": "a matrix that is used to used to determine which elements of the output matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "FUNC" : { "type": "compulsory", "description": " the function of the input vectors that should be put in the elements of the outer product", "multiple": 0, "actionlink": "none", "default": "x*y"},
       "ELEMENTS_ON_DIAGONAL_ARE_ZERO" : { "type": "flag", "description": " set all diagonal elements to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "a matrix containing the outer product of the two input vectors that was obtained using the function that was input"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the two vectors from which the outer product \n                          is being computed \n                   FUNC - ( default=x*y ) the function of the input vectors that \n                          should be put in the elements of the outer product \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \nELEMENTS_ON_DIAGONAL_ARE_ZERO - ( default=off ) set all diagonal elements to zero \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a matrix that is used to used to determine which elements \n                          of the output matrix to compute \n\n"
  },
  "OUTER_PRODUCT_MAX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/OUTER_PRODUCT_MAX",
    "description" : "",
    "module" : "matrixtools",
    "displayname" : "OUTER_PRODUCT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the labels of the two vectors from which the outer product is being computed", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "MASK" : { "type": "optional", "description": "a matrix that is used to used to determine which elements of the output matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "FUNC" : { "type": "compulsory", "description": " the function of the input vectors that should be put in the elements of the outer product", "multiple": 0, "actionlink": "none", "default": "x*y"},
       "ELEMENTS_ON_DIAGONAL_ARE_ZERO" : { "type": "flag", "description": " set all diagonal elements to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "a matrix containing the outer product of the two input vectors that was obtained using the function that was input"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the two vectors from which the outer product \n                          is being computed \n                   FUNC - ( default=x*y ) the function of the input vectors that \n                          should be put in the elements of the outer product \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \nELEMENTS_ON_DIAGONAL_ARE_ZERO - ( default=off ) set all diagonal elements to zero \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a matrix that is used to used to determine which elements \n                          of the output matrix to compute \n\n"
  },
  "OUTER_PRODUCT_MIN": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/OUTER_PRODUCT_MIN",
    "description" : "",
    "module" : "matrixtools",
    "displayname" : "OUTER_PRODUCT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the labels of the two vectors from which the outer product is being computed", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "MASK" : { "type": "optional", "description": "a matrix that is used to used to determine which elements of the output matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "FUNC" : { "type": "compulsory", "description": " the function of the input vectors that should be put in the elements of the outer product", "multiple": 0, "actionlink": "none", "default": "x*y"},
       "ELEMENTS_ON_DIAGONAL_ARE_ZERO" : { "type": "flag", "description": " set all diagonal elements to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "a matrix containing the outer product of the two input vectors that was obtained using the function that was input"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the two vectors from which the outer product \n                          is being computed \n                   FUNC - ( default=x*y ) the function of the input vectors that \n                          should be put in the elements of the outer product \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \nELEMENTS_ON_DIAGONAL_ARE_ZERO - ( default=off ) set all diagonal elements to zero \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a matrix that is used to used to determine which elements \n                          of the output matrix to compute \n\n"
  },
  "OUTPUT_CLUSTER": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/OUTPUT_CLUSTER",
    "description" : "Output the indices of the atoms in one of the clusters identified by a clustering object",
    "module" : "clusters",
    "displayname" : "OUTPUT_CLUSTER",
     "dois" : ["https://doi.org/10.1021/acs.jctc.6b01073"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "compulsory", "description": "the atoms for which clustering were performed", "multiple": 0, "actionlink": "none"},
       "CLUSTERS" : { "type": "compulsory", "description": "the action that performed the clustering", "multiple": 0, "actionlink": "none"},
       "CLUSTER" : { "type": "compulsory", "description": " which cluster would you like to look at 1 is the largest cluster, 2 is the second largest, 3 is the the third largest and so on", "multiple": 0, "actionlink": "none", "default": "1"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which you would like to output the atoms in the cluster", "multiple": 0, "actionlink": "none", "default": "1"},
       "FILE" : { "type": "compulsory", "description": "the name of the file on which to output the details of the cluster", "multiple": 0, "actionlink": "none"}
    },
    "needs" : ["PRINT_NDX"],
    "help" : "\nThe following arguments are compulsory: \n\n                  ATOMS - the atoms for which clustering were performed \n               CLUSTERS - the action that performed the clustering \n                CLUSTER - ( default=1 ) which cluster would you like to look at 1 is \n                          the largest cluster, 2 is the second largest, 3 is the the \n                          third largest and so on \n                 STRIDE - ( default=1 ) the frequency with which you would like to \n                          output the atoms in the cluster \n                   FILE - the name of the file on which to output the details of the \n                          cluster \n"
  },
  "PAIRENTROPIES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PAIRENTROPIES",
    "description" : "Calculate the KL entropy from the RDF around each of the atoms",
    "module" : "gridtools",
    "displayname" : "PAIRENTROPIES",
     "dois" : ["10.1063/1.4998408"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "GRID_BIN" : { "type": "compulsory", "description": "the number of bins to use when computing the RDF", "multiple": 0, "actionlink": "none"},
       "KERNEL" : { "type": "compulsory", "description": " the type of kernel to use for computing the histograms for the RDF", "multiple": 0, "actionlink": "none", "default": "GAUSSIAN"},
       "CUTOFF" : { "type": "compulsory", "description": " the cutoff at which to stop evaluating the kernel functions is set equal to sqrt(2*x)*bandwidth in each direction where x is this number", "multiple": 0, "actionlink": "none", "default": "6.25"},
       "MAXR" : { "type": "compulsory", "description": "the maximum distance to use for the rdf", "multiple": 0, "actionlink": "none"},
       "BANDWIDTH" : { "type": "compulsory", "description": "the bandwidths for kernel density esimtation", "multiple": 0, "actionlink": "none"},
       "CLEAR" : { "type": "compulsory", "description": " the frequency with which to clear the estimate of the rdf", "multiple": 0, "actionlink": "none", "default": "1"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which to compute the rdf and accumulate averages", "multiple": 0, "actionlink": "none", "default": "1"},
       "DENSITY" : { "type": "optional", "description": "the reference density to use when normalizing the RDF", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "hidden", "description": "this is the label of the reference objects", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the atoms that you would like to compute the entropies for", "multiple": 1, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the a vector containing the KL-entropy that is computed from the radial distribution function around each of the atoms in the input"
         }
       }
    },
    "needs" : ["REFERENCE_GRID", "VOLUME", "DISTANCE_MATRIX", "CUSTOM", "KDE", "ACCUMULATE", "CONSTANT", "PAIRENTROPY", "INTERPOLATE_GRID", "INTEGRATE_GRID", "CONCATENATE"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the atoms that you would like to compute the entropies for. \n                          For more information on how to specify lists of atoms see \ref \n                          Group \n\nThe following arguments are compulsory: \n\n               GRID_BIN - the number of bins to use when computing the RDF \n                 KERNEL - ( default=GAUSSIAN ) the type of kernel to use for \n                          computing the histograms for the RDF \n                 CUTOFF - ( default=6.25 ) the cutoff at which to stop evaluating the \n                          kernel functions is set equal to sqrt(2*x)*bandwidth in each \n                          direction where x is this number \n                   MAXR - the maximum distance to use for the rdf \n              BANDWIDTH - the bandwidths for kernel density esimtation \n                  CLEAR - ( default=1 ) the frequency with which to clear the \n                          estimate of the rdf. Set equal to 0 if you want to compute an rdf \n                          over the whole trajectory \n                 STRIDE - ( default=1 ) the frequency with which to compute the rdf \n                          and accumulate averages \n                DENSITY - the reference density to use when normalizing the RDF \n\n"
  },
  "PAIRENTROPY": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PAIRENTROPY",
    "description" : "Calculate the KL Entropy from the radial distribution function",
    "module" : "gridtools",
    "displayname" : "PAIRENTROPY",
     "dois" : ["10.1103/PhysRevLett.119.015701"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "GROUP" : { "type": "atoms", "description": "the atoms that are being used to calculate the RDF", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the atoms that are being used to calculate the RDF", "multiple": 1, "actionlink": "none"},
       "GROUPA" : { "type": "atoms", "description": "the atoms that you would like to compute the RDF about", "multiple": 1, "actionlink": "none"},
       "GROUPB" : { "type": "atoms", "description": "the atoms that you would like to to use when computing the RDF around the atoms that were specified with GROUPA", "multiple": 1, "actionlink": "none"},
       "GRID_BIN" : { "type": "compulsory", "description": "the number of bins to use when computing the RDF", "multiple": 0, "actionlink": "none"},
       "KERNEL" : { "type": "compulsory", "description": " the type of kernel to use for computing the histograms for the RDF", "multiple": 0, "actionlink": "none", "default": "GAUSSIAN"},
       "CUTOFF" : { "type": "compulsory", "description": " the cutoff at which to stop evaluating the kernel functions is set equal to sqrt(2*x)*bandwidth in each direction where x is this number", "multiple": 0, "actionlink": "none", "default": "6.25"},
       "MAXR" : { "type": "compulsory", "description": "the maximum distance to use for the rdf", "multiple": 0, "actionlink": "none"},
       "BANDWIDTH" : { "type": "compulsory", "description": "the bandwidths for kernel density esimtation", "multiple": 0, "actionlink": "none"},
       "CLEAR" : { "type": "compulsory", "description": " the frequency with which to clear the estimate of the rdf", "multiple": 0, "actionlink": "none", "default": "1"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which to compute the rdf and accumulate averages", "multiple": 0, "actionlink": "none", "default": "1"},
       "DENSITY" : { "type": "optional", "description": "the reference density to use when normalizing the RDF", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "hidden", "description": "this is the label of the reference objects", "multiple": 0, "actionlink": "none"},
       "SIGMA" : { "type": "compulsory", "description": " an alternative method for specifying the bandwidth instead of using the BANDWIDTH keyword", "multiple": 0, "actionlink": "none", "default": "use bandwidth"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the KL-entropy that is computed from the radial distribution function"
         }
       }
    },
    "needs" : ["REFERENCE_GRID", "VOLUME", "DISTANCE_MATRIX", "CUSTOM", "KDE", "ACCUMULATE", "CONSTANT", "RDF", "INTERPOLATE_GRID", "INTEGRATE_GRID"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - the atoms that are being used to calculate the RDF. For \n                          more information on how to specify lists of atoms see \ref Group \n                  ATOMS - the atoms that are being used to calculate the RDF. For \n                          more information on how to specify lists of atoms see \ref Group \n                 GROUPA - the atoms that you would like to compute the RDF about. \n                          Must be used with GROUPB. \n                 GROUPB - the atoms that you would like to to use when computing the \n                          RDF around the atoms that were specified with GROUPA \n\nThe following arguments are compulsory: \n\n               GRID_BIN - the number of bins to use when computing the RDF \n                 KERNEL - ( default=GAUSSIAN ) the type of kernel to use for \n                          computing the histograms for the RDF \n                 CUTOFF - ( default=6.25 ) the cutoff at which to stop evaluating the \n                          kernel functions is set equal to sqrt(2*x)*bandwidth in each \n                          direction where x is this number \n                   MAXR - the maximum distance to use for the rdf \n              BANDWIDTH - the bandwidths for kernel density esimtation \n                  CLEAR - ( default=1 ) the frequency with which to clear the \n                          estimate of the rdf. Set equal to 0 if you want to compute an rdf \n                          over the whole trajectory \n                 STRIDE - ( default=1 ) the frequency with which to compute the rdf \n                          and accumulate averages \n                  SIGMA - ( default=use bandwidth ) an alternative method for \n                          specifying the bandwidth instead of using the BANDWIDTH keyword \n                DENSITY - the reference density to use when normalizing the RDF \n\n"
  },
  "PAMM": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PAMM",
    "description" : "Probabilistic analysis of molecular motifs.",
    "module" : "pamm",
    "displayname" : "PAMM",
     "dois" : ["10.1063/1.4900655", "10.1021/acs.jctc.7b00993"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the vectors from which the pamm coordinates are calculated", "multiple": 0, "actionlink": "none"},
       "CLUSTERS" : { "type": "compulsory", "description": "the name of the file that contains the definitions of all the clusters", "multiple": 0, "actionlink": "none"},
       "REGULARISE" : { "type": "compulsory", "description": " don't allow the denominator to be smaller then this value", "multiple": 0, "actionlink": "none", "default": "0.001"},
       "KERNELS" : { "type": "compulsory", "description": " which kernels are we computing the PAMM values for", "multiple": 0, "actionlink": "none", "default": "all"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "KERNEL", "COMBINE"],
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the vectors from which the pamm coordinates are calculated \n               CLUSTERS - the name of the file that contains the definitions of all \n                          the clusters \n             REGULARISE - ( default=0.001 ) don't allow the denominator to be smaller \n                          then this value \n                KERNELS - ( default=all ) which kernels are we computing the PAMM \n                          values for \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "PARABETARMSD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PARABETARMSD",
    "description" : "Probe the parallel beta sheet content of your protein structure.",
    "module" : "secondarystructure",
    "displayname" : "PARABETARMSD",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions", "multiple": 0, "actionlink": "none", "default": "off"},
       "MASK" : { "type": "optional", "description": "a vector which is used to determine which elements of the secondary structure variable should be computed", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "RESIDUES" : { "type": "atoms", "description": "this command is used to specify the set of residues that could conceivably form part of the secondary structure", "multiple": 1, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " the manner in which RMSD alignment is performed", "multiple": 0, "actionlink": "none", "default": "DRMSD"},
       "VERBOSE" : { "type": "flag", "description": " write a more detailed output", "multiple": 0, "actionlink": "none", "default": "off"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of a residue segments that are within a certain target distance of this secondary structure type", "multiple": 0, "actionlink": "none"},
       "R_0" : { "type": "optional", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "8"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "12"},
       "ALIGN_STRANDS" : { "type": "flag", "description": " ensure that the two halves of a beta sheet are not broken by the periodic boundaries before doing alignment", "multiple": 0, "actionlink": "none", "default": "off"},
       "STYLE" : { "type": "compulsory", "description": " Parallel beta sheets can either form in a single chain or from a pair of chains", "multiple": 0, "actionlink": "none", "default": "all"},
       "STRANDS_CUTOFF" : { "type": "optional", "description": "If in a segment of protein the two strands are further apart then the calculation of the actual RMSD is skipped as the structure is very far from being beta-sheet like", "multiple": 0, "actionlink": "none"},
       "output" : {
         "struct" : {
           "flag": "default",
           "type": "scalar",
           "description": "the vectors containing the rmsd distances between the residues and each of the reference structures"
         },
         "lessthan" : {
           "flag": "default",
           "type": "scalar",
           "description": "the number blocks of residues that have an RMSD from the secondary structure that is less than the threshold"
         },
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "if LESS_THAN is present the RMSD distance between each residue and the ideal parallel beta sheet"
         }
       }
    },
    "needs" : ["SECONDARY_STRUCTURE_RMSD", "SECONDARY_STRUCTURE_DRMSD", "LESS_THAN", "SUM", "LOWEST", "DISTANCE", "CUSTOM"],
    "help" : "The input trajectory can be in any of the following formats: \n\n               RESIDUES - this command is used to specify the set of residues that \n                          could conceivably form part of the secondary structure. It is \n                          possible to use residues numbers as the various chains and residues \n                          should have been identified else using an instance of the \ref \n                          MOLINFO action. If you wish to use all the residues from all the \n                          chains in your system you can do so by specifying all. \n                          Alternatively, if you wish to use a subset of the residues you can specify \n                          the particular residues you are interested in as a list of \n                          numbers. Please be aware that to form secondary structure elements \n                          your chain must contain at least N residues, where N is \n                          dependent on the particular secondary structure you are interested \n                          in. As such if you define portions of the chain with fewer than \n                          N residues the code will crash. \n\nThe following arguments are compulsory: \n\n                   TYPE - ( default=DRMSD ) the manner in which RMSD alignment is \n                          performed. Should be OPTIMAL, SIMPLE or DRMSD. For more details on the \n                          OPTIMAL and SIMPLE methods see \ref RMSD. For more details on the \n                          DRMSD method see \ref DRMSD. \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                     NN - ( default=8 ) The n parameter of the switching function \n                     MM - ( default=12 ) The m parameter of the switching function \n                  STYLE - ( default=all ) Parallel beta sheets can either form in a \n                          single chain or from a pair of chains. If STYLE=all all chain \n                          configuration with the appropriate geometry are counted. If STYLE=inter \n                          only sheet-like configurations involving two chains are counted, \n                          while if STYLE=intra only sheet-like configurations involving a \n                          single chain are counted \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                VERBOSE - ( default=off ) write a more detailed output \n          ALIGN_STRANDS - ( default=off ) ensure that the two halves of a beta sheet \n                          are not broken by the periodic boundaries before doing \n                          alignment \n                   MASK - a vector which is used to determine which elements of the \n                          secondary structure variable should be computed \n              LESS_THAN - calculate the number of a residue segments that are within \n                          a certain target distance of this secondary structure type. \n                    R_0 - The r_0 parameter of the switching function. \n         STRANDS_CUTOFF - If in a segment of protein the two strands are further \n                          apart then the calculation of the actual RMSD is skipped as the \n                          structure is very far from being beta-sheet like. This keyword speeds \n                          up the calculation enormously when you are using the LESS_THAN \n                          option. However, if you are using some other option, then this \n                          cannot be used \n\n"
  },
  "PATH": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PATH",
    "description" : "Path collective variables with a more flexible framework for the distance metric being used.",
    "module" : "mapping",
    "displayname" : "PATH",
     "dois" : ["10.1063/1.2432340", "10.1063/1.3660208"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "compulsory", "description": "a pdb file containing the set of reference configurations", "multiple": 0, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " the manner in which distances are calculated", "multiple": 0, "actionlink": "none", "default": "OPTIMAL-FAST"},
       "ARG" : { "type": "optional", "description": "the list of arguments you would like to use in your definition of the path", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "COEFFICIENTS" : { "type": "optional", "description": "the coefficients of the displacements along each argument that should be used when calculating the euclidean distance", "multiple": 0, "actionlink": "none"},
       "NOSPATH" : { "type": "flag", "description": " do not calculate the spath CV", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOZPATH" : { "type": "flag", "description": " do not calculate the zpath CV", "multiple": 0, "actionlink": "none", "default": "off"},
       "GPATH" : { "type": "flag", "description": " calculate the trigonometric path", "multiple": 0, "actionlink": "none", "default": "off"},
       "PROPERTY" : { "type": "optional", "description": "the property to be used in the index", "multiple": 0, "actionlink": "none"},
       "LAMBDA" : { "type": "compulsory", "description": "the lambda parameter is needed for smoothing, is in the units of plumed", "multiple": 0, "actionlink": "none"},
       "output" : {
         "gspath" : {
           "flag": "GPATH",
           "type": "scalar",
           "description": "the position along the path calculated using the geometric formula"
         },
         "gzpath" : {
           "flag": "GPATH",
           "type": "scalar",
           "description": "the distance from the path calculated using the geometric formula"
         },
         "spath" : {
           "flag": "default",
           "type": "scalar",
           "description": "the position along the path calculated"
         },
         "zpath" : {
           "flag": "default",
           "type": "scalar",
           "description": "the distance from the path calculated"
         }
       }
    },
    "needs" : ["DRMSD", "RMSD", "LOWEST", "GPATH", "EUCLIDEAN_DISTANCE", "CUSTOM", "SUM", "COMBINE", "NORMALIZED_EUCLIDEAN_DISTANCE", "PDB2CONSTANT", "CONSTANT"],
    "help" : "\nThe following arguments are compulsory: \n\n              REFERENCE - a pdb file containing the set of reference configurations \n                   TYPE - ( default=OPTIMAL-FAST ) the manner in which distances are \n                          calculated. More information on the different metrics that are \n                          available in PLUMED can be found in the section of the manual on \ref \n                          dists \n                 LAMBDA - the lambda parameter is needed for smoothing, is in the \n                          units of plumed \n\nIn addition you may use the following options: \n\n                NOSPATH - ( default=off ) do not calculate the spath CV \n                NOZPATH - ( default=off ) do not calculate the zpath CV \n                  GPATH - ( default=off ) calculate the trigonometric path \n                    ARG - the list of arguments you would like to use in your \n                          definition of the path \n           COEFFICIENTS - the coefficients of the displacements along each argument \n                          that should be used when calculating the euclidean distance \n               PROPERTY - the property to be used in the index. This should be in the \n                          REMARK of the reference \n\n"
  },
  "PATHMSD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PATHMSD",
    "description" : "This Colvar calculates path collective variables.",
    "module" : "colvar",
    "displayname" : "PATHMSD",
     "dois" : ["10.1063/1.2432340"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "LAMBDA" : { "type": "compulsory", "description": "the lambda parameter is needed for smoothing, is in the units of plumed", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "compulsory", "description": "the pdb is needed to provide the various milestones", "multiple": 0, "actionlink": "none"},
       "NEIGH_SIZE" : { "type": "optional", "description": "size of the neighbor list", "multiple": 0, "actionlink": "none"},
       "NEIGH_STRIDE" : { "type": "optional", "description": "how often the neighbor list needs to be calculated in time units", "multiple": 0, "actionlink": "none"},
       "EPSILON" : { "type": "optional", "description": " the maximum distance between the close and the current structure, the positive value turn on the close structure method", "multiple": 0, "actionlink": "none", "default": "-"},
       "LOG_CLOSE" : { "type": "optional", "description": " value 1 enables logging regarding the close structure", "multiple": 0, "actionlink": "none"},
       "DEBUG_CLOSE" : { "type": "optional", "description": " value 1 enables extensive debugging info regarding the close structure, the simulation will run much slower", "multiple": 0, "actionlink": "none"},
       "output" : {
         "sss" : {
           "flag": "default",
           "type": "scalar",
           "description": "the position on the path"
         },
         "zzz" : {
           "flag": "default",
           "type": "scalar",
           "description": "the distance from the path"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                 LAMBDA - the lambda parameter is needed for smoothing, is in the \n                          units of plumed \n              REFERENCE - the pdb is needed to provide the various milestones \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n             NEIGH_SIZE - size of the neighbor list \n           NEIGH_STRIDE - how often the neighbor list needs to be calculated in time \n                          units \n                EPSILON - (default=-1) the maximum distance between the close and the \n                          current structure, the positive value turn on the close structure \n                          method \n              LOG_CLOSE - (default=0) value 1 enables logging regarding the close \n                          structure \n            DEBUG_CLOSE - (default=0) value 1 enables extensive debugging info \n                          regarding the close structure, the simulation will run much slower \n\n"
  },
  "PBC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PBC",
    "description" : "Pass the cell vectors into PLUMED.",
    "module" : "core",
    "displayname" : "PBC",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"}
    },
    "help" : ""
  },
  "PBMETAD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PBMETAD",
    "description" : "Used to performed Parallel Bias metadynamics.",
    "module" : "bias",
    "displayname" : "PBMETAD",
     "dois" : ["10.1021/acs.jctc.5b00846", "10.1103/PhysRevLett.100.020603", "10.1021/ct3002464", "10.2174/1877946811202010079", "10.1021/acs.jctc.8b00448", "10.1021/jp054359r"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "SIGMA" : { "type": "compulsory", "description": "the widths of the Gaussian hills", "multiple": 0, "actionlink": "none"},
       "PACE" : { "type": "compulsory", "description": "the frequency for hill addition, one for all biases", "multiple": 0, "actionlink": "none"},
       "FILE" : { "type": "optional", "description": "files in which the lists of added hills are stored, default names are assigned using arguments if FILE is not found", "multiple": 0, "actionlink": "none"},
       "HEIGHT" : { "type": "optional", "description": "the height of the Gaussian hills, one for all biases", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "optional", "description": "specify format for HILLS files (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "BIASFACTOR" : { "type": "optional", "description": "use well tempered metadynamics with this bias factor, one for all biases", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "the system temperature - this is only needed if you are doing well-tempered metadynamics", "multiple": 0, "actionlink": "none"},
       "TAU" : { "type": "optional", "description": "in well tempered metadynamics, sets height to (k_B Delta T*pace*timestep)/tau", "multiple": 0, "actionlink": "none"},
       "GRID_MIN" : { "type": "optional", "description": "the lower bounds for the grid", "multiple": 0, "actionlink": "none"},
       "GRID_MAX" : { "type": "optional", "description": "the upper bounds for the grid", "multiple": 0, "actionlink": "none"},
       "GRID_BIN" : { "type": "optional", "description": "the number of bins for the grid", "multiple": 0, "actionlink": "none"},
       "GRID_SPACING" : { "type": "optional", "description": "the approximate grid spacing (to be used as an alternative or together with GRID_BIN)", "multiple": 0, "actionlink": "none"},
       "GRID_SPARSE" : { "type": "flag", "description": " use a sparse grid to store hills", "multiple": 0, "actionlink": "none", "default": "off"},
       "GRID_NOSPLINE" : { "type": "flag", "description": " don't use spline interpolation with grids", "multiple": 0, "actionlink": "none", "default": "off"},
       "GRID_WSTRIDE" : { "type": "optional", "description": "frequency for dumping the grid", "multiple": 0, "actionlink": "none"},
       "GRID_WFILES" : { "type": "optional", "description": "dump grid for the bias, default names are used if GRID_WSTRIDE is used without GRID_WFILES", "multiple": 0, "actionlink": "none"},
       "GRID_RFILES" : { "type": "optional", "description": "read grid for the bias", "multiple": 0, "actionlink": "none"},
       "ADAPTIVE" : { "type": "optional", "description": "use a geometric (=GEOM) or diffusion (=DIFF) based hills width scheme", "multiple": 0, "actionlink": "none"},
       "SIGMA_MAX" : { "type": "optional", "description": "the upper bounds for the sigmas (in CV units) when using adaptive hills", "multiple": 0, "actionlink": "none"},
       "SIGMA_MIN" : { "type": "optional", "description": "the lower bounds for the sigmas (in CV units) when using adaptive hills", "multiple": 0, "actionlink": "none"},
       "PF" : { "type": "optional", "description": "specify which CVs belong in a partitioned family", "multiple": 1, "actionlink": "none", "argtype": "scalar"},
       "SELECTOR" : { "type": "optional", "description": "add forces and do update based on the value of SELECTOR", "multiple": 0, "actionlink": "none"},
       "SELECTOR_ID" : { "type": "optional", "description": "value of SELECTOR", "multiple": 0, "actionlink": "none"},
       "WALKERS_ID" : { "type": "optional", "description": "walker id", "multiple": 0, "actionlink": "none"},
       "WALKERS_N" : { "type": "optional", "description": "number of walkers", "multiple": 0, "actionlink": "none"},
       "WALKERS_DIR" : { "type": "optional", "description": "shared directory with the hills files from all the walkers", "multiple": 0, "actionlink": "none"},
       "WALKERS_RSTRIDE" : { "type": "optional", "description": "stride for reading hills files", "multiple": 0, "actionlink": "none"},
       "WALKERS_MPI" : { "type": "flag", "description": " Switch on MPI version of multiple walkers - not compatible with WALKERS_* options other than WALKERS_DIR", "multiple": 0, "actionlink": "none", "default": "off"},
       "INTERVAL_MIN" : { "type": "optional", "description": "one dimensional lower limits, outside the limits the system will not feel the biasing force", "multiple": 0, "actionlink": "none"},
       "INTERVAL_MAX" : { "type": "optional", "description": "one dimensional upper limits, outside the limits the system will not feel the biasing force", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n                  SIGMA - the widths of the Gaussian hills \n                   PACE - the frequency for hill addition, one for all biases \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n            GRID_SPARSE - ( default=off ) use a sparse grid to store hills \n          GRID_NOSPLINE - ( default=off ) don't use spline interpolation with grids \n            WALKERS_MPI - ( default=off ) Switch on MPI version of multiple walkers - \n                          not compatible with WALKERS_* options other than WALKERS_DIR \n                   FILE - files in which the lists of added hills are stored, default \n                          names are assigned using arguments if FILE is not found \n                 HEIGHT - the height of the Gaussian hills, one for all biases. \n                          Compulsory unless TAU, TEMP and BIASFACTOR are given \n                    FMT - specify format for HILLS files (useful for decrease the \n                          number of digits in regtests) \n             BIASFACTOR - use well tempered metadynamics with this bias factor, one \n                          for all biases. Please note you must also specify temp \n                   TEMP - the system temperature - this is only needed if you are \n                          doing well-tempered metadynamics \n                    TAU - in well tempered metadynamics, sets height to (k_B Delta \n                          T*pace*timestep)/tau \n               GRID_MIN - the lower bounds for the grid \n               GRID_MAX - the upper bounds for the grid \n               GRID_BIN - the number of bins for the grid \n           GRID_SPACING - the approximate grid spacing (to be used as an alternative \n                          or together with GRID_BIN) \n           GRID_WSTRIDE - frequency for dumping the grid \n            GRID_WFILES - dump grid for the bias, default names are used if \n                          GRID_WSTRIDE is used without GRID_WFILES. \n            GRID_RFILES - read grid for the bias \n               ADAPTIVE - use a geometric (=GEOM) or diffusion (=DIFF) based hills \n                          width scheme. Sigma is one number that has distance units or \n                          timestep dimensions \n              SIGMA_MAX - the upper bounds for the sigmas (in CV units) when using \n                          adaptive hills. Negative number means no bounds \n              SIGMA_MIN - the lower bounds for the sigmas (in CV units) when using \n                          adaptive hills. Negative number means no bounds \n                     PF - specify which CVs belong in a partitioned family. Once a PF \n                          is specified, all CVs in ARG must be placed in a PF even if \n                          there is one CV per PF”. You can use multiple instances of this \n                          keyword i.e. PF1, PF2, PF3... \n               SELECTOR - add forces and do update based on the value of SELECTOR \n            SELECTOR_ID - value of SELECTOR \n             WALKERS_ID - walker id \n              WALKERS_N - number of walkers \n            WALKERS_DIR - shared directory with the hills files from all the walkers \n        WALKERS_RSTRIDE - stride for reading hills files \n           INTERVAL_MIN - one dimensional lower limits, outside the limits the system \n                          will not feel the biasing force. \n           INTERVAL_MAX - one dimensional upper limits, outside the limits the system \n                          will not feel the biasing force. \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \n\n"
  },
  "PCA": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PCA",
    "description" : "Perform principal component analysis (PCA) using either the positions of the atoms a large number of collective variables as input.",
    "module" : "dimred",
    "displayname" : "PCA",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the arguments that you would like to make the histogram for", "multiple": 0, "actionlink": "none"},
       "NLOW_DIM" : { "type": "compulsory", "description": "number of low-dimensional coordinates required", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which to perform this analysis", "multiple": 0, "actionlink": "none", "default": "0"},
       "FILE" : { "type": "optional", "description": "the file on which to output the low dimensional coordinates", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "compulsory", "description": " the format to use when outputting the low dimensional coordinates", "multiple": 0, "actionlink": "none", "default": "%f"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "the projections of the input coordinates on the PCA components that were found from the covariance matrix"
         }
       }
    },
    "needs" : ["LOGSUMEXP", "TRANSPOSE", "MATRIX_VECTOR_PRODUCT", "CONSTANT", "COLLECT", "OUTER_PRODUCT", "CUSTOM", "MATRIX_PRODUCT", "DIAGONALIZE", "VSTACK", "DUMPPDB"],
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the arguments that you would like to make the histogram for \n               NLOW_DIM - number of low-dimensional coordinates required \n                 STRIDE - ( default=0 ) the frequency with which to perform this \n                          analysis \n                    FMT - ( default=%f ) the format to use when outputting the low \n                          dimensional coordinates \n                   FILE - the file on which to output the low dimensional coordinates \n\n"
  },
  "PCARMSD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PCARMSD",
    "description" : "Calculate the PCA components for a number of provided eigenvectors and an average structure.",
    "module" : "colvar",
    "displayname" : "PCARMSD",
     "dois" : ["10.1021/ct100413b", "10.1021/jp068587c"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "AVERAGE" : { "type": "compulsory", "description": "a file in pdb format containing the reference structure and the atoms involved in the CV", "multiple": 0, "actionlink": "none"},
       "EIGENVECTORS" : { "type": "compulsory", "description": "a file in pdb format containing the reference structure and the atoms involved in the CV", "multiple": 0, "actionlink": "none"},
       "SQUARED_ROOT" : { "type": "flag", "description": "  This should be set if you want RMSD instead of mean squared displacement ", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "eig" : {
           "flag": "default",
           "type": "scalar",
           "description": "the projections on each eigenvalue are stored on values labeled eig-1, eig-2, "
         },
         "residual" : {
           "flag": "default",
           "type": "scalar",
           "description": "the distance of the present configuration from the configuration supplied as AVERAGE in terms of mean squared displacement after optimal alignment "
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                AVERAGE - a file in pdb format containing the reference structure and \n                          the atoms involved in the CV. \n           EIGENVECTORS - a file in pdb format containing the reference structure and \n                          the atoms involved in the CV. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n           SQUARED_ROOT - ( default=off ) This should be set if you want RMSD instead \n                          of mean squared displacement \n"
  },
  "PCAVARS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PCAVARS",
    "description" : "Projection on principal component eigenvectors or other high dimensional linear subspace",
    "module" : "mapping",
    "displayname" : "PCAVARS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "compulsory", "description": "a pdb file containing the set of reference configurations", "multiple": 0, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " the manner in which distances are calculated", "multiple": 0, "actionlink": "none", "default": "OPTIMAL-FAST"},
       "ARG" : { "type": "optional", "description": "if there are arguments to be used specify them here", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "NOPBC" : { "type": "flag", "description": " do not use periodic boundary conditions when computing this quantity", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "eig" : {
           "flag": "default",
           "type": "vector",
           "description": "the projections on the eigenvalues"
         },
         "residual" : {
           "flag": "default",
           "type": "scalar",
           "description": "the residual distance that is not projected on any of the eigenvalues"
         }
       }
    },
    "needs" : ["RMSD", "PDB2CONSTANT", "TRANSPOSE", "EUCLIDEAN_DISTANCE", "CONCATENATE", "COMBINE", "CONSTANT", "MATRIX_VECTOR_PRODUCT", "CUSTOM", "SUM", "SELECT_COMPONENTS"],
    "help" : "\nThe following arguments are compulsory: \n\n              REFERENCE - a pdb file containing the set of reference configurations \n                   TYPE - ( default=OPTIMAL-FAST ) the manner in which distances are \n                          calculated. More information on the different metrics that are \n                          available in PLUMED can be found in the section of the manual on \ref \n                          dists \n\nIn addition you may use the following options: \n\n                  NOPBC - ( default=off ) do not use periodic boundary conditions \n                          when computing this quantity \n                    ARG - if there are arguments to be used specify them here \n\n"
  },
  "PCS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PCS",
    "description" : "Calculates the Pseudo-contact shift of a nucleus determined by the presence of a metal ion susceptible to anisotropic magnetization.",
    "module" : "isdb",
    "displayname" : "PCS",
     "dois" : ["10.1021/jp5021824", "10.1021/acs.biochem.5b01138"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "DOSCORE" : { "type": "flag", "description": " activate metainference", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOENSEMBLE" : { "type": "flag", "description": " don't perform any replica-averaging", "multiple": 0, "actionlink": "none", "default": "off"},
       "REWEIGHT" : { "type": "flag", "description": " simple REWEIGHT using the ARG as energy", "multiple": 0, "actionlink": "none", "default": "off"},
       "AVERAGING" : { "type": "optional", "description": "Stride for calculation of averaged weights and sigma_mean", "multiple": 0, "actionlink": "none"},
       "NOISETYPE" : { "type": "compulsory", "description": " functional form of the noise (GAUSS,MGAUSS,OUTLIERS,MOUTLIERS,GENERIC)", "multiple": 0, "actionlink": "none", "default": "MGAUSS"},
       "LIKELIHOOD" : { "type": "compulsory", "description": " the likelihood for the GENERIC metainference model, GAUSS or LOGN", "multiple": 0, "actionlink": "none", "default": "GAUSS"},
       "DFTILDE" : { "type": "compulsory", "description": " fraction of sigma_mean used to evolve ftilde", "multiple": 0, "actionlink": "none", "default": "0.1"},
       "SCALEDATA" : { "type": "flag", "description": " Set to TRUE if you want to sample a scaling factor common to all values and replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALE0" : { "type": "compulsory", "description": " initial value of the scaling factor", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SCALE_PRIOR" : { "type": "compulsory", "description": " either FLAT or GAUSSIAN", "multiple": 0, "actionlink": "none", "default": "FLAT"},
       "SCALE_MIN" : { "type": "optional", "description": "minimum value of the scaling factor", "multiple": 0, "actionlink": "none"},
       "SCALE_MAX" : { "type": "optional", "description": "maximum value of the scaling factor", "multiple": 0, "actionlink": "none"},
       "DSCALE" : { "type": "optional", "description": "maximum MC move of the scaling factor", "multiple": 0, "actionlink": "none"},
       "ADDOFFSET" : { "type": "flag", "description": " Set to TRUE if you want to sample an offset common to all values and replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "OFFSET0" : { "type": "compulsory", "description": " initial value of the offset", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "OFFSET_PRIOR" : { "type": "compulsory", "description": " either FLAT or GAUSSIAN", "multiple": 0, "actionlink": "none", "default": "FLAT"},
       "OFFSET_MIN" : { "type": "optional", "description": "minimum value of the offset", "multiple": 0, "actionlink": "none"},
       "OFFSET_MAX" : { "type": "optional", "description": "maximum value of the offset", "multiple": 0, "actionlink": "none"},
       "DOFFSET" : { "type": "optional", "description": "maximum MC move of the offset", "multiple": 0, "actionlink": "none"},
       "REGRES_ZERO" : { "type": "optional", "description": "stride for regression with zero offset", "multiple": 0, "actionlink": "none"},
       "SIGMA0" : { "type": "compulsory", "description": " initial value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SIGMA_MIN" : { "type": "compulsory", "description": " minimum value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "SIGMA_MAX" : { "type": "compulsory", "description": " maximum value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "10."},
       "DSIGMA" : { "type": "optional", "description": "maximum MC move of the uncertainty parameter", "multiple": 0, "actionlink": "none"},
       "OPTSIGMAMEAN" : { "type": "compulsory", "description": " Set to NONE/SEM to manually set sigma mean, or to estimate it on the fly", "multiple": 0, "actionlink": "none", "default": "NONE"},
       "SIGMA_MEAN0" : { "type": "optional", "description": "starting value for the uncertainty in the mean estimate", "multiple": 0, "actionlink": "none"},
       "SIGMA_MAX_STEPS" : { "type": "optional", "description": "Number of steps used to optimise SIGMA_MAX, before that the SIGMA_MAX value is used", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "the system temperature - this is only needed if code doesn't pass the temperature to plumed", "multiple": 0, "actionlink": "none"},
       "MC_STEPS" : { "type": "optional", "description": "number of MC steps", "multiple": 0, "actionlink": "none"},
       "MC_CHUNKSIZE" : { "type": "optional", "description": "MC chunksize", "multiple": 0, "actionlink": "none"},
       "STATUS_FILE" : { "type": "optional", "description": "write a file with all the data useful for restart/continuation of Metainference", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "optional", "description": "specify format for HILLS files (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "WRITE_STRIDE" : { "type": "compulsory", "description": " write the status to a file every N steps, this can be used for restart/continuation", "multiple": 0, "actionlink": "none", "default": "10000"},
       "SELECTOR" : { "type": "optional", "description": "name of selector", "multiple": 0, "actionlink": "none"},
       "NSELECT" : { "type": "optional", "description": "range of values for selector [0, N-1]", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the couple of atoms involved in each of the bonds for which you wish to calculate the RDC", "multiple": 1, "actionlink": "none"},
       "GYROM" : { "type": "compulsory", "description": " Add the product of the gyromagnetic constants for the bond", "multiple": 0, "actionlink": "none", "default": "1."},
       "SCALE" : { "type": "compulsory", "description": " Add the scaling factor to take into account concentration and other effects", "multiple": 0, "actionlink": "none", "default": "1."},
       "SVD" : { "type": "flag", "description": " Set to TRUE if you want to back calculate using Single Value Decomposition (need GSL at compilation time)", "multiple": 0, "actionlink": "none", "default": "off"},
       "COUPLING" : { "type": "optional", "description": "Add an experimental value for each coupling (needed by SVD and useful for STATS)", "multiple": 1, "actionlink": "none"},
       "output" : {
         "score" : {
           "flag": "default",
           "type": "scalar",
           "description": "the Metainference score"
         },
         "sigma" : {
           "flag": "default",
           "type": "scalar",
           "description": "uncertainty parameter"
         },
         "sigmaMean" : {
           "flag": "default",
           "type": "scalar",
           "description": "uncertainty in the mean estimate"
         },
         "neff" : {
           "flag": "default",
           "type": "scalar",
           "description": "effective number of replicas"
         },
         "acceptSigma" : {
           "flag": "default",
           "type": "scalar",
           "description": "MC acceptance for sigma values"
         },
         "acceptScale" : {
           "flag": "SCALEDATA",
           "type": "scalar",
           "description": "MC acceptance for scale value"
         },
         "acceptFT" : {
           "flag": "GENERIC",
           "type": "scalar",
           "description": "MC acceptance for general metainference f tilde value"
         },
         "weight" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "weights of the weighted average"
         },
         "biasDer" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "derivatives with respect to the bias"
         },
         "scale" : {
           "flag": "SCALEDATA",
           "type": "scalar",
           "description": "scale parameter"
         },
         "offset" : {
           "flag": "ADDOFFSET",
           "type": "scalar",
           "description": "offset parameter"
         },
         "ftilde" : {
           "flag": "GENERIC",
           "type": "scalar",
           "description": "ensemble average estimator"
         },
         "rdc" : {
           "flag": "default",
           "type": "scalar",
           "description": "the calculated # RDC"
         },
         "exp" : {
           "flag": "SVD/COUPLING",
           "type": "scalar",
           "description": "the experimental # RDC"
         },
         "Sxx" : {
           "flag": "SVD",
           "type": "scalar",
           "description": "Tensor component"
         },
         "Syy" : {
           "flag": "SVD",
           "type": "scalar",
           "description": "Tensor component"
         },
         "Szz" : {
           "flag": "SVD",
           "type": "scalar",
           "description": "Tensor component"
         },
         "Sxy" : {
           "flag": "SVD",
           "type": "scalar",
           "description": "Tensor component"
         },
         "Sxz" : {
           "flag": "SVD",
           "type": "scalar",
           "description": "Tensor component"
         },
         "Syz" : {
           "flag": "SVD",
           "type": "scalar",
           "description": "Tensor component"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the couple of atoms involved in each of the bonds for which \n                          you wish to calculate the RDC. Keywords like ATOMS1, ATOMS2, \n                          ATOMS3,... should be listed and one dipolar coupling will be \n                          calculated for each ATOMS keyword you specify.. You can use multiple \n                          instances of this keyword i.e. ATOMS1, ATOMS2, ATOMS3... \n\nThe following arguments are compulsory: \n\n              NOISETYPE - ( default=MGAUSS ) functional form of the noise \n                          (GAUSS,MGAUSS,OUTLIERS,MOUTLIERS,GENERIC) \n             LIKELIHOOD - ( default=GAUSS ) the likelihood for the GENERIC \n                          metainference model, GAUSS or LOGN \n                DFTILDE - ( default=0.1 ) fraction of sigma_mean used to evolve \n                          ftilde \n                 SCALE0 - ( default=1.0 ) initial value of the scaling factor \n            SCALE_PRIOR - ( default=FLAT ) either FLAT or GAUSSIAN \n                OFFSET0 - ( default=0.0 ) initial value of the offset \n           OFFSET_PRIOR - ( default=FLAT ) either FLAT or GAUSSIAN \n                 SIGMA0 - ( default=1.0 ) initial value of the uncertainty parameter \n              SIGMA_MIN - ( default=0.0 ) minimum value of the uncertainty parameter \n              SIGMA_MAX - ( default=10. ) maximum value of the uncertainty parameter \n           OPTSIGMAMEAN - ( default=NONE ) Set to NONE/SEM to manually set sigma \n                          mean, or to estimate it on the fly \n           WRITE_STRIDE - ( default=10000 ) write the status to a file every N steps, \n                          this can be used for restart/continuation \n                  GYROM - ( default=1. ) Add the product of the gyromagnetic \n                          constants for the bond. \n                  SCALE - ( default=1. ) Add the scaling factor to take into account \n                          concentration and other effects. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                DOSCORE - ( default=off ) activate metainference \n             NOENSEMBLE - ( default=off ) don't perform any replica-averaging \n               REWEIGHT - ( default=off ) simple REWEIGHT using the ARG as energy \n              SCALEDATA - ( default=off ) Set to TRUE if you want to sample a scaling \n                          factor common to all values and replicas \n              ADDOFFSET - ( default=off ) Set to TRUE if you want to sample an offset \n                          common to all values and replicas \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                    SVD - ( default=off ) Set to TRUE if you want to back calculate \n                          using Single Value Decomposition (need GSL at compilation time). \n                    ARG - the labels of the values from which the function is \n                          calculated \n              AVERAGING - Stride for calculation of averaged weights and sigma_mean \n              SCALE_MIN - minimum value of the scaling factor \n              SCALE_MAX - maximum value of the scaling factor \n                 DSCALE - maximum MC move of the scaling factor \n             OFFSET_MIN - minimum value of the offset \n             OFFSET_MAX - maximum value of the offset \n                DOFFSET - maximum MC move of the offset \n            REGRES_ZERO - stride for regression with zero offset \n                 DSIGMA - maximum MC move of the uncertainty parameter \n            SIGMA_MEAN0 - starting value for the uncertainty in the mean estimate \n        SIGMA_MAX_STEPS - Number of steps used to optimise SIGMA_MAX, before that the \n                          SIGMA_MAX value is used \n                   TEMP - the system temperature - this is only needed if code \n                          doesn't pass the temperature to plumed \n               MC_STEPS - number of MC steps \n           MC_CHUNKSIZE - MC chunksize \n            STATUS_FILE - write a file with all the data useful for \n                          restart/continuation of Metainference \n                    FMT - specify format for HILLS files (useful for decrease the \n                          number of digits in regtests) \n               SELECTOR - name of selector \n                NSELECT - range of values for selector [0, N-1] \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n               COUPLING - Add an experimental value for each coupling (needed by SVD \n                          and useful for STATS).. You can use multiple instances of this \n                          keyword i.e. COUPLING1, COUPLING2, COUPLING3... \n\n"
  },
  "PDB2CONSTANT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PDB2CONSTANT",
    "description" : "Create a constant value from a PDB input file",
    "module" : "generic",
    "displayname" : "PDB2CONSTANT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "compulsory", "description": "a file in pdb format containing the reference structure", "multiple": 0, "actionlink": "none"},
       "NUMBER" : { "type": "compulsory", "description": " if there are multiple structures in the pdb file you can specify that you want the RMSD from a specific structure by specifying its place in the file here", "multiple": 0, "actionlink": "none", "default": "0"},
       "NOARGS" : { "type": "flag", "description": " the arguments that are being read from the PDB file are not in the plumed input", "multiple": 0, "actionlink": "none", "default": "off"},
       "ARG" : { "type": "optional", "description": "read this single argument from the input rather than the atomic structure", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector/matrix",
           "description": "a value that is constructed from the information in the PDB file"
         }
       }
    },
    "needs" : ["CONSTANT"],
    "help" : "\nThe following arguments are compulsory: \n\n              REFERENCE - a file in pdb format containing the reference structure \n                 NUMBER - ( default=0 ) if there are multiple structures in the pdb \n                          file you can specify that you want the RMSD from a specific \n                          structure by specifying its place in the file here. If NUMBER=0 then \n                          the RMSD from all structures are computed \n\nIn addition you may use the following options: \n\n                 NOARGS - ( default=off ) the arguments that are being read from the \n                          PDB file are not in the plumed input \n                    ARG - read this single argument from the input rather than the \n                          atomic structure \n\n"
  },
  "PIECEWISE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PIECEWISE",
    "description" : "Compute a piece wise straight line through its arguments that passes through a set of ordered control points.",
    "module" : "function",
    "displayname" : "PIECEWISE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "POINT" : { "type": "compulsory", "description": "This keyword is used to specify the various points in the function above", "multiple": 1, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the values input to this function", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "output" : {
         "_pfunc" : {
           "flag": "default",
           "type": "scalar",
           "description": "one or multiple instances of this quantity can be referenced elsewhere in the input file"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                  POINT - This keyword is used to specify the various points in the \n                          function above.. You can use multiple instances of this keyword i.e. \n                          POINT1, POINT2, POINT3... \n                    ARG - the values input to this function \n"
  },
  "PIECEWISE_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PIECEWISE_SCALAR",
    "description" : "",
    "module" : "function",
    "displayname" : "PIECEWISE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "POINT" : { "type": "compulsory", "description": "This keyword is used to specify the various points in the function above", "multiple": 1, "actionlink": "none"},
       "output" : {
         "_pfunc" : {
           "flag": "default",
           "type": "scalar",
           "description": "one or multiple instances of this quantity can be referenced elsewhere in the input file"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n                  POINT - This keyword is used to specify the various points in the \n                          function above.. You can use multiple instances of this keyword i.e. \n                          POINT1, POINT2, POINT3... \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n"
  },
  "PIV": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PIV",
    "description" : "Calculates the PIV-distance.",
    "module" : "piv",
    "displayname" : "PIV",
     "dois" : ["10.1063/1.4818005", "10.1103/PhysRevLett.119.245701"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "SWITCH" : { "type": "compulsory", "description": "The switching functions parameter", "multiple": 1, "actionlink": "none"},
       "PRECISION" : { "type": "compulsory", "description": "the precision for approximating reals with integers in sorting", "multiple": 0, "actionlink": "none"},
       "REF_FILE" : { "type": "compulsory", "description": "PDB file name that contains the ith reference structure", "multiple": 0, "actionlink": "none"},
       "PIVATOMS" : { "type": "compulsory", "description": "Number of atoms to use for PIV", "multiple": 0, "actionlink": "none"},
       "SORT" : { "type": "compulsory", "description": "Whether to sort or not the PIV block", "multiple": 0, "actionlink": "none"},
       "ATOMTYPES" : { "type": "compulsory", "description": "The atom types to use for PIV", "multiple": 0, "actionlink": "none"},
       "SFACTOR" : { "type": "optional", "description": "Scale the PIV-distance by such block-specific factor", "multiple": 0, "actionlink": "none"},
       "VOLUME" : { "type": "optional", "description": "Scale atom-atom distances by the cubic root of the cell volume", "multiple": 0, "actionlink": "none"},
       "UPDATEPIV" : { "type": "optional", "description": "Frequency (in steps) at which the PIV is updated", "multiple": 0, "actionlink": "none"},
       "TEST" : { "type": "flag", "description": " Print the actual and reference PIV and exit", "multiple": 0, "actionlink": "none", "default": "off"},
       "COM" : { "type": "flag", "description": " Use centers of mass of groups of atoms instead of atoms as specified in the Pdb file", "multiple": 0, "actionlink": "none", "default": "off"},
       "ONLYCROSS" : { "type": "flag", "description": " Use only cross-terms (A-B, A-C, B-C, ", "multiple": 0, "actionlink": "none", "default": "off"},
       "ONLYDIRECT" : { "type": "flag", "description": " Use only direct-terms (A-A, B-B, C-C, ", "multiple": 0, "actionlink": "none", "default": "off"},
       "DERIVATIVES" : { "type": "flag", "description": " Activate the calculation of the PIV for every class (needed for numerical derivatives)", "multiple": 0, "actionlink": "none", "default": "off"},
       "NLIST" : { "type": "flag", "description": " Use a neighbor list for distance calculations", "multiple": 0, "actionlink": "none", "default": "off"},
       "SERIAL" : { "type": "flag", "description": " Perform the calculation in serial - for debug purpose", "multiple": 0, "actionlink": "none", "default": "off"},
       "TIMER" : { "type": "flag", "description": " Perform timing analysis on heavy loops", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "optional", "description": "Neighbor lists cutoff", "multiple": 0, "actionlink": "none"},
       "NL_STRIDE" : { "type": "optional", "description": "Update neighbor lists every NL_STRIDE steps", "multiple": 0, "actionlink": "none"},
       "NL_SKIN" : { "type": "optional", "description": "The maximum atom displacement tolerated for the neighbor lists update", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the PIV-distance"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                 SWITCH - The switching functions parameter.You should specify a \n                          Switching function for all PIV blocks.Details of the various \n                          switching functions you can use are provided on switchingfunction.. \n                          You can use multiple instances of this keyword i.e. SWITCH1, \n                          SWITCH2, SWITCH3... \n              PRECISION - the precision for approximating reals with integers in \n                          sorting. \n               REF_FILE - PDB file name that contains the ith reference structure. \n               PIVATOMS - Number of atoms to use for PIV. \n                   SORT - Whether to sort or not the PIV block. \n              ATOMTYPES - The atom types to use for PIV. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                   TEST - ( default=off ) Print the actual and reference PIV and exit \n                    COM - ( default=off ) Use centers of mass of groups of atoms \n                          instead of atoms as specified in the Pdb file \n              ONLYCROSS - ( default=off ) Use only cross-terms (A-B, A-C, B-C, ...) \n                          in PIV \n             ONLYDIRECT - ( default=off ) Use only direct-terms (A-A, B-B, C-C, ...) \n                          in PIV \n            DERIVATIVES - ( default=off ) Activate the calculation of the PIV for \n                          every class (needed for numerical derivatives). \n                  NLIST - ( default=off ) Use a neighbor list for distance \n                          calculations. \n                 SERIAL - ( default=off ) Perform the calculation in serial - for \n                          debug purpose \n                  TIMER - ( default=off ) Perform timing analysis on heavy loops. \n                SFACTOR - Scale the PIV-distance by such block-specific factor \n                 VOLUME - Scale atom-atom distances by the cubic root of the cell \n                          volume. The input volume is used to scale the R_0 value of the \n                          switching function. \n              UPDATEPIV - Frequency (in steps) at which the PIV is updated. \n              NL_CUTOFF - Neighbor lists cutoff. \n              NL_STRIDE - Update neighbor lists every NL_STRIDE steps. \n                NL_SKIN - The maximum atom displacement tolerated for the neighbor \n                          lists update. \n\n"
  },
  "PLANE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PLANE",
    "description" : "Calculate the plane perpendicular to two vectors in order to represent the orientation of a planar molecule.",
    "module" : "colvar",
    "displayname" : "PLANE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the three or four atoms whose plane we are computing", "multiple": 1, "actionlink": "none"},
       "output" : {
         "x" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the x-component of the vector that is normal to the plane containing the atoms"
         },
         "y" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the y-component of the vector that is normal to the plane containing the atoms"
         },
         "z" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the z-component of the vector that is normal to the plane containing the atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the three or four atoms whose plane we are computing. For \n                          more information on how to specify lists of atoms see \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n"
  },
  "PLANES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PLANES",
    "description" : "Calculate the components of the normals to the planes containing groups of three atoms.",
    "module" : "multicolvar",
    "displayname" : "PLANES",
    "replacement" : "PLANE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "optional", "description": "the sets of atoms that you would like to calculate the planes for", "multiple": 1, "actionlink": "none"},
       "LOCATION" : { "type": "atoms", "description": "the location at which the CV is assumed to be in space", "multiple": 1, "actionlink": "none"},
       "VMEAN" : { "type": "flag", "description": " calculate the norm of the mean vector", "multiple": 0, "actionlink": "none", "default": "off"},
       "VSUM" : { "type": "flag", "description": " calculate the norm of the sum of all the vectors", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "_vmean" : {
           "flag": "VMEAN",
           "type": "scalar",
           "description": "the norm of the mean vector"
         },
         "_vsum" : {
           "flag": "VSUM",
           "type": "scalar",
           "description": "the norm of the mean vector"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CENTER", "GROUP", "PLANE", "COMBINE"],
    "help" : "The input trajectory can be in any of the following formats: \n\n               LOCATION - the location at which the CV is assumed to be in space. You \n                          can use multiple instances of this keyword i.e. LOCATION1, \n                          LOCATION2, LOCATION3... \n\nThe following options are available\n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                  VMEAN - ( default=off ) calculate the norm of the mean vector. \n                   VSUM - ( default=off ) calculate the norm of the sum of all the \n                          vectors \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n                  ATOMS - the sets of atoms that you would like to calculate the \n                          planes for. You can use multiple instances of this keyword i.e. \n                          ATOMS1, ATOMS2, ATOMS3... \n\n"
  },
  "PLANE_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PLANE_SCALAR",
    "description" : "",
    "module" : "colvar",
    "displayname" : "PLANE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the three or four atoms whose plane we are computing", "multiple": 1, "actionlink": "none"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "output" : {
         "x" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the x-component of the vector that is normal to the plane containing the atoms"
         },
         "y" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the y-component of the vector that is normal to the plane containing the atoms"
         },
         "z" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the z-component of the vector that is normal to the plane containing the atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the three or four atoms whose plane we are computing. For \n                          more information on how to specify lists of atoms see \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n"
  },
  "PLANE_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PLANE_VECTOR",
    "description" : "",
    "module" : "colvar",
    "displayname" : "PLANE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the three or four atoms whose plane we are computing", "multiple": 1, "actionlink": "none"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector that should be used to determine which elements of the vector should be computed", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "output" : {
         "x" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the x-component of the vector that is normal to the plane containing the atoms"
         },
         "y" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the y-component of the vector that is normal to the plane containing the atoms"
         },
         "z" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the z-component of the vector that is normal to the plane containing the atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the three or four atoms whose plane we are computing. For \n                          more information on how to specify lists of atoms see \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - the label for a sparse vector that should be used to \n                          determine which elements of the vector should be computed \n\n"
  },
  "PLUMED": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PLUMED",
    "description" : "Embed a separate PLUMED instance.",
    "module" : "generic",
    "displayname" : "PLUMED",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " stride different from 1 are not supported yet", "multiple": 0, "actionlink": "none", "default": "1"},
       "FILE" : { "type": "optional", "description": "input file for the guest PLUMED instance", "multiple": 0, "actionlink": "none"},
       "KERNEL" : { "type": "optional", "description": "kernel to be used for the guest PLUMED instance (USE WITH CAUTION!)", "multiple": 0, "actionlink": "none"},
       "LOG" : { "type": "optional", "description": "log file for the guest PLUMED instance", "multiple": 0, "actionlink": "none"},
       "CHDIR" : { "type": "optional", "description": "run guest in a separate directory", "multiple": 0, "actionlink": "none"},
       "NOREPLICAS" : { "type": "flag", "description": " run multiple replicas as isolated ones, without letting them know that the host has multiple replicas", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                 STRIDE - ( default=1 ) stride different from 1 are not supported yet \n\nIn addition you may use the following options: \n\n             NOREPLICAS - ( default=off ) run multiple replicas as isolated ones, \n                          without letting them know that the host has multiple replicas \n                   FILE - input file for the guest PLUMED instance \n                 KERNEL - kernel to be used for the guest PLUMED instance (USE WITH \n                          CAUTION!) \n                    LOG - log file for the guest PLUMED instance. By default the host \n                          log is used \n                  CHDIR - run guest in a separate directory \n\n"
  },
  "POSITION": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/POSITION",
    "description" : "Calculate the components of the position of an atom or atoms.",
    "module" : "colvar",
    "displayname" : "POSITION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOM" : { "type": "atoms", "description": "the atom number", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the atom numbers that you would like to use the positions of", "multiple": 1, "actionlink": "none"},
       "WHOLEMOLECULES" : { "type": "flag", "description": " if this is a vector of positions do you want to make the positions into a whole before", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALED_COMPONENTS" : { "type": "flag", "description": " calculate the a, b and c scaled components of the position separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "x" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the x-component of the atom position"
         },
         "y" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the y-component of the atom position"
         },
         "z" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the z-component of the atom position"
         },
         "a" : {
           "flag": "SCALED_COMPONENTS",
           "type": "scalar/vector",
           "description": "the normalized projection on the first lattice vector of the atom position"
         },
         "b" : {
           "flag": "SCALED_COMPONENTS",
           "type": "scalar/vector",
           "description": "the normalized projection on the second lattice vector of the atom position"
         },
         "c" : {
           "flag": "SCALED_COMPONENTS",
           "type": "scalar/vector",
           "description": "the normalized projection on the third lattice vector of the atom position"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                   ATOM - the atom number. For more information on how to specify \n                          lists of atoms see \ref Group \n                  ATOMS - the atom numbers that you would like to use the positions \n                          of. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n         WHOLEMOLECULES - ( default=off ) if this is a vector of positions do you \n                          want to make the positions into a whole before \n      SCALED_COMPONENTS - ( default=off ) calculate the a, b and c scaled components \n                          of the position separately and store them as label.a, label.b \n                          and label.c \n"
  },
  "POSITION_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/POSITION_SCALAR",
    "description" : "",
    "module" : "colvar",
    "displayname" : "POSITION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOM" : { "type": "atoms", "description": "the atom number", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the atom numbers that you would like to use the positions of", "multiple": 1, "actionlink": "none"},
       "WHOLEMOLECULES" : { "type": "flag", "description": " if this is a vector of positions do you want to make the positions into a whole before", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALED_COMPONENTS" : { "type": "flag", "description": " calculate the a, b and c scaled components of the position separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "output" : {
         "x" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the x-component of the atom position"
         },
         "y" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the y-component of the atom position"
         },
         "z" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the z-component of the atom position"
         },
         "a" : {
           "flag": "SCALED_COMPONENTS",
           "type": "scalar/vector",
           "description": "the normalized projection on the first lattice vector of the atom position"
         },
         "b" : {
           "flag": "SCALED_COMPONENTS",
           "type": "scalar/vector",
           "description": "the normalized projection on the second lattice vector of the atom position"
         },
         "c" : {
           "flag": "SCALED_COMPONENTS",
           "type": "scalar/vector",
           "description": "the normalized projection on the third lattice vector of the atom position"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                   ATOM - the atom number. For more information on how to specify \n                          lists of atoms see \ref Group \n                  ATOMS - the atom numbers that you would like to use the positions \n                          of. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n         WHOLEMOLECULES - ( default=off ) if this is a vector of positions do you \n                          want to make the positions into a whole before \n      SCALED_COMPONENTS - ( default=off ) calculate the a, b and c scaled components \n                          of the position separately and store them as label.a, label.b \n                          and label.c \n"
  },
  "POSITION_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/POSITION_VECTOR",
    "description" : "",
    "module" : "colvar",
    "displayname" : "POSITION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOM" : { "type": "atoms", "description": "the atom number", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the atom numbers that you would like to use the positions of", "multiple": 1, "actionlink": "none"},
       "WHOLEMOLECULES" : { "type": "flag", "description": " if this is a vector of positions do you want to make the positions into a whole before", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALED_COMPONENTS" : { "type": "flag", "description": " calculate the a, b and c scaled components of the position separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector that should be used to determine which elements of the vector should be computed", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "output" : {
         "x" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the x-component of the atom position"
         },
         "y" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the y-component of the atom position"
         },
         "z" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the z-component of the atom position"
         },
         "a" : {
           "flag": "SCALED_COMPONENTS",
           "type": "scalar/vector",
           "description": "the normalized projection on the first lattice vector of the atom position"
         },
         "b" : {
           "flag": "SCALED_COMPONENTS",
           "type": "scalar/vector",
           "description": "the normalized projection on the second lattice vector of the atom position"
         },
         "c" : {
           "flag": "SCALED_COMPONENTS",
           "type": "scalar/vector",
           "description": "the normalized projection on the third lattice vector of the atom position"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                   ATOM - the atom number. For more information on how to specify \n                          lists of atoms see \ref Group \n                  ATOMS - the atom numbers that you would like to use the positions \n                          of. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n         WHOLEMOLECULES - ( default=off ) if this is a vector of positions do you \n                          want to make the positions into a whole before \n      SCALED_COMPONENTS - ( default=off ) calculate the a, b and c scaled components \n                          of the position separately and store them as label.a, label.b \n                          and label.c \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - the label for a sparse vector that should be used to \n                          determine which elements of the vector should be computed \n\n"
  },
  "PRE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PRE",
    "description" : "Calculates the Paramagnetic Resonance Enhancement intensity ratio between a spin label atom and a list of atoms .",
    "module" : "isdb",
    "displayname" : "PRE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "DOSCORE" : { "type": "flag", "description": " activate metainference", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOENSEMBLE" : { "type": "flag", "description": " don't perform any replica-averaging", "multiple": 0, "actionlink": "none", "default": "off"},
       "REWEIGHT" : { "type": "flag", "description": " simple REWEIGHT using the ARG as energy", "multiple": 0, "actionlink": "none", "default": "off"},
       "AVERAGING" : { "type": "optional", "description": "Stride for calculation of averaged weights and sigma_mean", "multiple": 0, "actionlink": "none"},
       "NOISETYPE" : { "type": "compulsory", "description": " functional form of the noise (GAUSS,MGAUSS,OUTLIERS,MOUTLIERS,GENERIC)", "multiple": 0, "actionlink": "none", "default": "MGAUSS"},
       "LIKELIHOOD" : { "type": "compulsory", "description": " the likelihood for the GENERIC metainference model, GAUSS or LOGN", "multiple": 0, "actionlink": "none", "default": "GAUSS"},
       "DFTILDE" : { "type": "compulsory", "description": " fraction of sigma_mean used to evolve ftilde", "multiple": 0, "actionlink": "none", "default": "0.1"},
       "SCALEDATA" : { "type": "flag", "description": " Set to TRUE if you want to sample a scaling factor common to all values and replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALE0" : { "type": "compulsory", "description": " initial value of the scaling factor", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SCALE_PRIOR" : { "type": "compulsory", "description": " either FLAT or GAUSSIAN", "multiple": 0, "actionlink": "none", "default": "FLAT"},
       "SCALE_MIN" : { "type": "optional", "description": "minimum value of the scaling factor", "multiple": 0, "actionlink": "none"},
       "SCALE_MAX" : { "type": "optional", "description": "maximum value of the scaling factor", "multiple": 0, "actionlink": "none"},
       "DSCALE" : { "type": "optional", "description": "maximum MC move of the scaling factor", "multiple": 0, "actionlink": "none"},
       "ADDOFFSET" : { "type": "flag", "description": " Set to TRUE if you want to sample an offset common to all values and replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "OFFSET0" : { "type": "compulsory", "description": " initial value of the offset", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "OFFSET_PRIOR" : { "type": "compulsory", "description": " either FLAT or GAUSSIAN", "multiple": 0, "actionlink": "none", "default": "FLAT"},
       "OFFSET_MIN" : { "type": "optional", "description": "minimum value of the offset", "multiple": 0, "actionlink": "none"},
       "OFFSET_MAX" : { "type": "optional", "description": "maximum value of the offset", "multiple": 0, "actionlink": "none"},
       "DOFFSET" : { "type": "optional", "description": "maximum MC move of the offset", "multiple": 0, "actionlink": "none"},
       "REGRES_ZERO" : { "type": "optional", "description": "stride for regression with zero offset", "multiple": 0, "actionlink": "none"},
       "SIGMA0" : { "type": "compulsory", "description": " initial value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SIGMA_MIN" : { "type": "compulsory", "description": " minimum value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "SIGMA_MAX" : { "type": "compulsory", "description": " maximum value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "10."},
       "DSIGMA" : { "type": "optional", "description": "maximum MC move of the uncertainty parameter", "multiple": 0, "actionlink": "none"},
       "OPTSIGMAMEAN" : { "type": "compulsory", "description": " Set to NONE/SEM to manually set sigma mean, or to estimate it on the fly", "multiple": 0, "actionlink": "none", "default": "NONE"},
       "SIGMA_MEAN0" : { "type": "optional", "description": "starting value for the uncertainty in the mean estimate", "multiple": 0, "actionlink": "none"},
       "SIGMA_MAX_STEPS" : { "type": "optional", "description": "Number of steps used to optimise SIGMA_MAX, before that the SIGMA_MAX value is used", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "the system temperature - this is only needed if code doesn't pass the temperature to plumed", "multiple": 0, "actionlink": "none"},
       "MC_STEPS" : { "type": "optional", "description": "number of MC steps", "multiple": 0, "actionlink": "none"},
       "MC_CHUNKSIZE" : { "type": "optional", "description": "MC chunksize", "multiple": 0, "actionlink": "none"},
       "STATUS_FILE" : { "type": "optional", "description": "write a file with all the data useful for restart/continuation of Metainference", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "optional", "description": "specify format for HILLS files (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "WRITE_STRIDE" : { "type": "compulsory", "description": " write the status to a file every N steps, this can be used for restart/continuation", "multiple": 0, "actionlink": "none", "default": "10000"},
       "SELECTOR" : { "type": "optional", "description": "name of selector", "multiple": 0, "actionlink": "none"},
       "NSELECT" : { "type": "optional", "description": "range of values for selector [0, N-1]", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "NORATIO" : { "type": "flag", "description": " Set to TRUE if you want to compute PRE without Intensity Ratio", "multiple": 0, "actionlink": "none", "default": "off"},
       "INEPT" : { "type": "compulsory", "description": "is the INEPT time (in ms)", "multiple": 0, "actionlink": "none"},
       "TAUC" : { "type": "compulsory", "description": "is the correlation time (in ns) for this electron-nuclear interaction", "multiple": 0, "actionlink": "none"},
       "OMEGA" : { "type": "compulsory", "description": "is the Larmor frequency of the nuclear spin (in MHz)", "multiple": 0, "actionlink": "none"},
       "SPINLABEL" : { "type": "atoms", "description": "The atom to be used as the paramagnetic center", "multiple": 1, "actionlink": "none"},
       "GROUPA" : { "type": "atoms", "description": "the atoms involved in each of the contacts you wish to calculate", "multiple": 1, "actionlink": "none"},
       "RTWO" : { "type": "optional", "description": "The relaxation of the atom/atoms in the corresponding GROUPA of atoms", "multiple": 1, "actionlink": "none"},
       "PREINT" : { "type": "optional", "description": "Add an experimental value for each PRE", "multiple": 1, "actionlink": "none"},
       "output" : {
         "score" : {
           "flag": "default",
           "type": "scalar",
           "description": "the Metainference score"
         },
         "sigma" : {
           "flag": "default",
           "type": "scalar",
           "description": "uncertainty parameter"
         },
         "sigmaMean" : {
           "flag": "default",
           "type": "scalar",
           "description": "uncertainty in the mean estimate"
         },
         "neff" : {
           "flag": "default",
           "type": "scalar",
           "description": "effective number of replicas"
         },
         "acceptSigma" : {
           "flag": "default",
           "type": "scalar",
           "description": "MC acceptance for sigma values"
         },
         "acceptScale" : {
           "flag": "SCALEDATA",
           "type": "scalar",
           "description": "MC acceptance for scale value"
         },
         "acceptFT" : {
           "flag": "GENERIC",
           "type": "scalar",
           "description": "MC acceptance for general metainference f tilde value"
         },
         "weight" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "weights of the weighted average"
         },
         "biasDer" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "derivatives with respect to the bias"
         },
         "scale" : {
           "flag": "SCALEDATA",
           "type": "scalar",
           "description": "scale parameter"
         },
         "offset" : {
           "flag": "ADDOFFSET",
           "type": "scalar",
           "description": "offset parameter"
         },
         "ftilde" : {
           "flag": "GENERIC",
           "type": "scalar",
           "description": "ensemble average estimator"
         },
         "pre" : {
           "flag": "default",
           "type": "scalar",
           "description": "the # PRE"
         },
         "exp" : {
           "flag": "PREINT",
           "type": "scalar",
           "description": "the # PRE experimental intensity"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n              SPINLABEL - The atom to be used as the paramagnetic center.. For more \n                          information on how to specify lists of atoms see \ref Group \n                 GROUPA - the atoms involved in each of the contacts you wish to \n                          calculate. Keywords like GROUPA1, GROUPA2, GROUPA3,... should be \n                          listed and one contact will be calculated for each ATOM keyword \n                          you specify.. You can use multiple instances of this keyword \n                          i.e. GROUPA1, GROUPA2, GROUPA3... \n\nThe following arguments are compulsory: \n\n              NOISETYPE - ( default=MGAUSS ) functional form of the noise \n                          (GAUSS,MGAUSS,OUTLIERS,MOUTLIERS,GENERIC) \n             LIKELIHOOD - ( default=GAUSS ) the likelihood for the GENERIC \n                          metainference model, GAUSS or LOGN \n                DFTILDE - ( default=0.1 ) fraction of sigma_mean used to evolve \n                          ftilde \n                 SCALE0 - ( default=1.0 ) initial value of the scaling factor \n            SCALE_PRIOR - ( default=FLAT ) either FLAT or GAUSSIAN \n                OFFSET0 - ( default=0.0 ) initial value of the offset \n           OFFSET_PRIOR - ( default=FLAT ) either FLAT or GAUSSIAN \n                 SIGMA0 - ( default=1.0 ) initial value of the uncertainty parameter \n              SIGMA_MIN - ( default=0.0 ) minimum value of the uncertainty parameter \n              SIGMA_MAX - ( default=10. ) maximum value of the uncertainty parameter \n           OPTSIGMAMEAN - ( default=NONE ) Set to NONE/SEM to manually set sigma \n                          mean, or to estimate it on the fly \n           WRITE_STRIDE - ( default=10000 ) write the status to a file every N steps, \n                          this can be used for restart/continuation \n                  INEPT - is the INEPT time (in ms). \n                   TAUC - is the correlation time (in ns) for this electron-nuclear \n                          interaction. \n                  OMEGA - is the Larmor frequency of the nuclear spin (in MHz). \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                DOSCORE - ( default=off ) activate metainference \n             NOENSEMBLE - ( default=off ) don't perform any replica-averaging \n               REWEIGHT - ( default=off ) simple REWEIGHT using the ARG as energy \n              SCALEDATA - ( default=off ) Set to TRUE if you want to sample a scaling \n                          factor common to all values and replicas \n              ADDOFFSET - ( default=off ) Set to TRUE if you want to sample an offset \n                          common to all values and replicas \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                NORATIO - ( default=off ) Set to TRUE if you want to compute PRE \n                          without Intensity Ratio \n                    ARG - the labels of the values from which the function is \n                          calculated \n              AVERAGING - Stride for calculation of averaged weights and sigma_mean \n              SCALE_MIN - minimum value of the scaling factor \n              SCALE_MAX - maximum value of the scaling factor \n                 DSCALE - maximum MC move of the scaling factor \n             OFFSET_MIN - minimum value of the offset \n             OFFSET_MAX - maximum value of the offset \n                DOFFSET - maximum MC move of the offset \n            REGRES_ZERO - stride for regression with zero offset \n                 DSIGMA - maximum MC move of the uncertainty parameter \n            SIGMA_MEAN0 - starting value for the uncertainty in the mean estimate \n        SIGMA_MAX_STEPS - Number of steps used to optimise SIGMA_MAX, before that the \n                          SIGMA_MAX value is used \n                   TEMP - the system temperature - this is only needed if code \n                          doesn't pass the temperature to plumed \n               MC_STEPS - number of MC steps \n           MC_CHUNKSIZE - MC chunksize \n            STATUS_FILE - write a file with all the data useful for \n                          restart/continuation of Metainference \n                    FMT - specify format for HILLS files (useful for decrease the \n                          number of digits in regtests) \n               SELECTOR - name of selector \n                NSELECT - range of values for selector [0, N-1] \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n                   RTWO - The relaxation of the atom/atoms in the corresponding \n                          GROUPA of atoms. Keywords like RTWO1, RTWO2, RTWO3,... should be \n                          listed.. You can use multiple instances of this keyword i.e. RTWO1, \n                          RTWO2, RTWO3... \n                 PREINT - Add an experimental value for each PRE.. You can use \n                          multiple instances of this keyword i.e. PREINT1, PREINT2, PREINT3... \n\n"
  },
  "PRINT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PRINT",
    "description" : "Print quantities to a file.",
    "module" : "generic",
    "displayname" : "PRINT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values that you would like to print to the file", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the quantities of interest should be output", "multiple": 0, "actionlink": "none", "default": "1"},
       "FILE" : { "type": "optional", "description": "the name of the file on which to output these quantities", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "compulsory", "description": " the format that should be used to output real numbers", "multiple": 0, "actionlink": "none", "default": "%f"},
       "_ROTATE" : { "type": "hidden", "description": "some funky thing implemented by GBussi", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values that you would like to print to \n                          the file \n                 STRIDE - ( default=1 ) the frequency with which the quantities of \n                          interest should be output \n                    FMT - ( default=%f ) the format that should be used to output \n                          real numbers \n                   FILE - the name of the file on which to output these quantities \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \n\n"
  },
  "PRINT_NDX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PRINT_NDX",
    "description" : "Print an ndx file",
    "module" : "generic",
    "displayname" : "PRINT_NDX",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the labels of vectors that should be used when printind the NDX file", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "ATOMS" : { "type": "atoms", "description": "the list of atoms that have the corresponding arguments", "multiple": 1, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the quantities of interest should be output", "multiple": 0, "actionlink": "none", "default": "1"},
       "FILE" : { "type": "optional", "description": "the name of the file on which to output these quantities", "multiple": 0, "actionlink": "none"},
       "LESS_THAN_OR_EQUAL" : { "type": "optional", "description": "when printing with arguments that are vectors only print components of vectors have a value less than or equal to this value", "multiple": 0, "actionlink": "none"},
       "GREATER_THAN_OR_EQUAL" : { "type": "optional", "description": "when printing with arguments that are vectors only print components of vectors have a value greater than or equal to this value", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"}
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the list of atoms that have the corresponding arguments. \n                          For more information on how to specify lists of atoms see \ref \n                          Group \n\nThe following arguments are compulsory: \n\n                 STRIDE - ( default=1 ) the frequency with which the quantities of \n                          interest should be output \n                    ARG - the labels of vectors that should be used when printind the \n                          NDX file \n                   FILE - the name of the file on which to output these quantities \n     LESS_THAN_OR_EQUAL - when printing with arguments that are vectors only print \n                          components of vectors have a value less than or equal to this value \n  GREATER_THAN_OR_EQUAL - when printing with arguments that are vectors only print \n                          components of vectors have a value greater than or equal to this value \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \n\n"
  },
  "PRODUCT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PRODUCT",
    "description" : "Calculate the product of the input quantities",
    "module" : "function",
    "displayname" : "PRODUCT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "The set of scalars that you would like to multiply together", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the product of all the elements in the input vector"
         }
       }
    },
    "needs" : ["CONCATENATE", "CUSTOM", "SUM"],
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - The set of scalars that you would like to multiply together \n"
  },
  "PROJECTION_ON_AXIS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PROJECTION_ON_AXIS",
    "description" : "Calculate a position based on the projection along and extension from a defined axis.",
    "module" : "colvar",
    "displayname" : "PROJECTION_ON_AXIS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "AXIS_ATOMS" : { "type": "atoms", "description": "The atoms that define the direction of the axis of interest", "multiple": 1, "actionlink": "none"},
       "ATOM" : { "type": "atoms", "description": "The atom whose position we want to project on the axis of interest", "multiple": 1, "actionlink": "none"},
       "output" : {
         "proj" : {
           "flag": "COMPONENTS",
           "type": "scalar",
           "description": "The value of the projection along the axis"
         },
         "ext" : {
           "flag": "COMPONENTS",
           "type": "scalar",
           "description": "The value of the extension from the axis"
         },
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the value of the projection along the axis"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n             AXIS_ATOMS - The atoms that define the direction of the axis of \n                          interest. For more information on how to specify lists of atoms see \n                          \ref Group \n                   ATOM - The atom whose position we want to project on the axis of \n                          interest. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n"
  },
  "PROJECT_POINTS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PROJECT_POINTS",
    "description" : "Find the projection of a point in a low dimensional space by matching the (transformed) distance between it and a series of reference configurations that were input",
    "module" : "dimred",
    "displayname" : "PROJECT_POINTS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the projections of the landmark points", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "TARGET" : { "type": "optional", "description": "the matrix of target quantities that you would like to match", "multiple": 1, "actionlink": "none", "argtype": "vector/matrix"},
       "FUNC" : { "type": "optional", "description": "a function that is applied on the distances between the points in the low dimensional space", "multiple": 1, "actionlink": "none"},
       "WEIGHTS" : { "type": "optional", "description": "the matrix with the weights of the target quantities", "multiple": 1, "actionlink": "none", "argtype": "vector"},
       "CGTOL" : { "type": "compulsory", "description": " the tolerance for the conjugate gradient minimization", "multiple": 0, "actionlink": "none", "default": "1E-6"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "coord" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the coordinates of the points in the low dimensional space"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the projections of the landmark points \n                  CGTOL - ( default=1E-6 ) the tolerance for the conjugate gradient \n                          minimization \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                 TARGET - the matrix of target quantities that you would like to \n                          match. You can use multiple instances of this keyword i.e. \n                          TARGET1, TARGET2, TARGET3... \n                   FUNC - a function that is applied on the distances between the \n                          points in the low dimensional space. You can use multiple \n                          instances of this keyword i.e. FUNC1, FUNC2, FUNC3... \n                WEIGHTS - the matrix with the weights of the target quantities. You \n                          can use multiple instances of this keyword i.e. WEIGHTS1, \n                          WEIGHTS2, WEIGHTS3... \n\n"
  },
  "PROPERTYMAP": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PROPERTYMAP",
    "description" : "Calculate generic property maps.",
    "module" : "colvar",
    "displayname" : "PROPERTYMAP",
     "dois" : ["10.1063/1.3660208"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "LAMBDA" : { "type": "compulsory", "description": "the lambda parameter is needed for smoothing, is in the units of plumed", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "compulsory", "description": "the pdb is needed to provide the various milestones", "multiple": 0, "actionlink": "none"},
       "NEIGH_SIZE" : { "type": "optional", "description": "size of the neighbor list", "multiple": 0, "actionlink": "none"},
       "NEIGH_STRIDE" : { "type": "optional", "description": "how often the neighbor list needs to be calculated in time units", "multiple": 0, "actionlink": "none"},
       "EPSILON" : { "type": "optional", "description": " the maximum distance between the close and the current structure, the positive value turn on the close structure method", "multiple": 0, "actionlink": "none", "default": "-"},
       "LOG_CLOSE" : { "type": "optional", "description": " value 1 enables logging regarding the close structure", "multiple": 0, "actionlink": "none"},
       "DEBUG_CLOSE" : { "type": "optional", "description": " value 1 enables extensive debugging info regarding the close structure, the simulation will run much slower", "multiple": 0, "actionlink": "none"},
       "PROPERTY" : { "type": "compulsory", "description": "the property to be used in the indexing: this goes in the REMARK field of the reference", "multiple": 0, "actionlink": "none"},
       "output" : {
         "zzz" : {
           "flag": "default",
           "type": "scalar",
           "description": "the minimum distance from the reference points"
         },
         ".#!custom" : {
           "flag": "default",
           "type": "scalar",
           "description": "the names of the output components for this action depend on the actions input file see the example inputs below for details"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                 LAMBDA - the lambda parameter is needed for smoothing, is in the \n                          units of plumed \n              REFERENCE - the pdb is needed to provide the various milestones \n               PROPERTY - the property to be used in the indexing: this goes in the \n                          REMARK field of the reference \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n             NEIGH_SIZE - size of the neighbor list \n           NEIGH_STRIDE - how often the neighbor list needs to be calculated in time \n                          units \n                EPSILON - (default=-1) the maximum distance between the close and the \n                          current structure, the positive value turn on the close structure \n                          method \n              LOG_CLOSE - (default=0) value 1 enables logging regarding the close \n                          structure \n            DEBUG_CLOSE - (default=0) value 1 enables extensive debugging info \n                          regarding the close structure, the simulation will run much slower \n\n"
  },
  "PUCKERING": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PUCKERING",
    "description" : "Calculate sugar pseudorotation coordinates.",
    "module" : "colvar",
    "displayname" : "PUCKERING",
     "dois" : ["10.1021/ct401013s", "10.1021/ja00839a011", "10.1021/ja068411o"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the five or six atoms of the sugar ring in the proper order", "multiple": 1, "actionlink": "none"},
       "output" : {
         "phs" : {
           "flag": "default",
           "type": "scalar",
           "description": "Pseudorotation phase (5 membered rings)"
         },
         "amp" : {
           "flag": "default",
           "type": "scalar",
           "description": "Pseudorotation amplitude (5 membered rings)"
         },
         "Zx" : {
           "flag": "default",
           "type": "scalar",
           "description": "Pseudorotation x Cartesian component (5 membered rings)"
         },
         "Zy" : {
           "flag": "default",
           "type": "scalar",
           "description": "Pseudorotation y Cartesian component (5 membered rings)"
         },
         "phi" : {
           "flag": "default",
           "type": "scalar",
           "description": "Pseudorotation phase (6 membered rings)"
         },
         "theta" : {
           "flag": "default",
           "type": "scalar",
           "description": "Theta angle (6 membered rings)"
         },
         "amplitude" : {
           "flag": "default",
           "type": "scalar",
           "description": "Pseudorotation amplitude (6 membered rings)"
         },
         "qx" : {
           "flag": "default",
           "type": "scalar",
           "description": "Cartesian component x (6 membered rings)"
         },
         "qy" : {
           "flag": "default",
           "type": "scalar",
           "description": "Cartesian component y (6 membered rings)"
         },
         "qz" : {
           "flag": "default",
           "type": "scalar",
           "description": "Cartesian component z (6 membered rings)"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the five or six atoms of the sugar ring in the proper \n                          order. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n"
  },
  "PUT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PUT",
    "description" : "Pass data into PLUMED",
    "module" : "core",
    "displayname" : "PUT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "ROLE" : { "type": "optional", "description": "Get the role this value plays in the code can be x/y/z/m/q to signify that this is x, y, z positions of atoms or masses or charges of atoms", "multiple": 0, "actionlink": "none"},
       "SHAPE" : { "type": "compulsory", "description": " the shape of the value that is being passed to PLUMED", "multiple": 0, "actionlink": "none", "default": "0"},
       "UNIT" : { "type": "compulsory", "description": "the unit of the quantity that is being passed to PLUMED through this value", "multiple": 0, "actionlink": "none"},
       "FORCE_UNIT" : { "type": "compulsory", "description": " the units to use for the force", "multiple": 0, "actionlink": "none", "default": "default"},
       "PERIODIC" : { "type": "compulsory", "description": "if the value being passed to plumed is periodic then you should specify the periodicity of the function", "multiple": 0, "actionlink": "none"},
       "CONSTANT" : { "type": "flag", "description": " does this quantity not depend on time", "multiple": 0, "actionlink": "none", "default": "off"},
       "FROM_DOMAINS" : { "type": "flag", "description": " is this quantity passed through the domain decomposition object", "multiple": 0, "actionlink": "none", "default": "off"},
       "MUTABLE" : { "type": "flag", "description": " can plumed change the value of the pointer that is passed from the MD code", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector/matrix/grid",
           "description": "the data that was passed from the MD code"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                  SHAPE - ( default=0 ) the shape of the value that is being passed \n                          to PLUMED \n                   UNIT - the unit of the quantity that is being passed to PLUMED \n                          through this value. Can be either number, energy, time, length, \n                          mass or charge \n             FORCE_UNIT - ( default=default ) the units to use for the force \n               PERIODIC - if the value being passed to plumed is periodic then you \n                          should specify the periodicity of the function. If the value is \n                          not periodic you must state this using PERIODIC=NO. Positions \n                          are passed with PERIODIC=NO even though special methods are \n                          used to deal with pbc \n\nIn addition you may use the following options: \n\n               CONSTANT - ( default=off ) does this quantity not depend on time \n           FROM_DOMAINS - ( default=off ) is this quantity passed through the domain \n                          decomposition object \n                MUTABLE - ( default=off ) can plumed change the value of the pointer \n                          that is passed from the MD code \n                   ROLE - Get the role this value plays in the code can be x/y/z/m/q \n                          to signify that this is x, y, z positions of atoms or masses \n                          or charges of atoms \n\n"
  },
  "PYTORCH_MODEL": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/PYTORCH_MODEL",
    "description" : "Load a PyTorch model compiled with TorchScript.",
    "module" : "pytorch",
    "displayname" : "PYTORCH_MODEL",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "FILE" : { "type": "optional", "description": "Filename of the PyTorch compiled model", "multiple": 0, "actionlink": "none"},
       "output" : {
         "node" : {
           "flag": "default",
           "type": "scalar",
           "description": "Model outputs"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                   FILE - Filename of the PyTorch compiled model \n\n"
  },
  "Q1": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/Q1",
    "description" : "Calculate 1st order Steinhardt parameters",
    "module" : "symfunc",
    "displayname" : "Q1",
     "dois" : ["10.1021/ct500320c"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated and the atoms that can be in the environments", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "the list of atoms that can be in the environments of each of the atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "the switching function that it used in the construction of the contact matrix", "multiple": 0, "actionlink": "LESS_THAN"},
       "MASK" : { "type": "optional", "description": "the label for a vector that is used to determine which rows of the matrix are computed", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "VMEAN" : { "type": "flag", "description": " calculate the norm of the mean vector", "multiple": 0, "actionlink": "none", "default": "off"},
       "VSUM" : { "type": "flag", "description": " calculate the norm of the sum of all the vectors", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "_vmean" : {
           "flag": "VMEAN",
           "type": "scalar",
           "description": "the norm of the mean vector"
         },
         "_vsum" : {
           "flag": "VSUM",
           "type": "scalar",
           "description": "the norm of the mean vector"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the norms of the vectors of spherical harmonic coefficients"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "GROUP", "SPHERICAL_HARMONIC", "ONES", "MATRIX_VECTOR_PRODUCT", "COMBINE"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - the list of atoms for which the symmetry function is being \n                          calculated and the atoms that can be in the environments \n               SPECIESA - the list of atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESB, \n                          which specifies the atoms that are in the environment. \n               SPECIESB - the list of atoms that can be in the environments of each \n                          of the atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESA, \n                          which specifies the atoms for which the symmetry function is \n                          being calculated. \n\nThe following arguments are compulsory: \n\n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                  VMEAN - ( default=off ) calculate the norm of the mean vector. \n                   VSUM - ( default=off ) calculate the norm of the sum of all the \n                          vectors \n                 SWITCH - the switching function that it used in the construction of \n                          the contact matrix \n                   MASK - the label for a vector that is used to determine which rows \n                          of the matrix are computed \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "Q3": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/Q3",
    "description" : "Calculate 3rd order Steinhardt parameters.",
    "module" : "symfunc",
    "displayname" : "Q3",
     "dois" : ["10.1021/ct500320c"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated and the atoms that can be in the environments", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "the list of atoms that can be in the environments of each of the atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "the switching function that it used in the construction of the contact matrix", "multiple": 0, "actionlink": "LESS_THAN"},
       "MASK" : { "type": "optional", "description": "the label for a vector that is used to determine which rows of the matrix are computed", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "VMEAN" : { "type": "flag", "description": " calculate the norm of the mean vector", "multiple": 0, "actionlink": "none", "default": "off"},
       "VSUM" : { "type": "flag", "description": " calculate the norm of the sum of all the vectors", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "_vmean" : {
           "flag": "VMEAN",
           "type": "scalar",
           "description": "the norm of the mean vector"
         },
         "_vsum" : {
           "flag": "VSUM",
           "type": "scalar",
           "description": "the norm of the mean vector"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the norms of the vectors of spherical harmonic coefficients"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "GROUP", "SPHERICAL_HARMONIC", "ONES", "MATRIX_VECTOR_PRODUCT", "COMBINE"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - the list of atoms for which the symmetry function is being \n                          calculated and the atoms that can be in the environments \n               SPECIESA - the list of atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESB, \n                          which specifies the atoms that are in the environment. \n               SPECIESB - the list of atoms that can be in the environments of each \n                          of the atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESA, \n                          which specifies the atoms for which the symmetry function is \n                          being calculated. \n\nThe following arguments are compulsory: \n\n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                  VMEAN - ( default=off ) calculate the norm of the mean vector. \n                   VSUM - ( default=off ) calculate the norm of the sum of all the \n                          vectors \n                 SWITCH - the switching function that it used in the construction of \n                          the contact matrix \n                   MASK - the label for a vector that is used to determine which rows \n                          of the matrix are computed \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "Q4": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/Q4",
    "description" : "Calculate fourth order Steinhardt parameters.",
    "module" : "symfunc",
    "displayname" : "Q4",
     "dois" : ["10.1021/ct500320c"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated and the atoms that can be in the environments", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "the list of atoms that can be in the environments of each of the atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "the switching function that it used in the construction of the contact matrix", "multiple": 0, "actionlink": "LESS_THAN"},
       "MASK" : { "type": "optional", "description": "the label for a vector that is used to determine which rows of the matrix are computed", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "VMEAN" : { "type": "flag", "description": " calculate the norm of the mean vector", "multiple": 0, "actionlink": "none", "default": "off"},
       "VSUM" : { "type": "flag", "description": " calculate the norm of the sum of all the vectors", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "_vmean" : {
           "flag": "VMEAN",
           "type": "scalar",
           "description": "the norm of the mean vector"
         },
         "_vsum" : {
           "flag": "VSUM",
           "type": "scalar",
           "description": "the norm of the mean vector"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the norms of the vectors of spherical harmonic coefficients"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "GROUP", "SPHERICAL_HARMONIC", "ONES", "MATRIX_VECTOR_PRODUCT", "COMBINE"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - the list of atoms for which the symmetry function is being \n                          calculated and the atoms that can be in the environments \n               SPECIESA - the list of atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESB, \n                          which specifies the atoms that are in the environment. \n               SPECIESB - the list of atoms that can be in the environments of each \n                          of the atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESA, \n                          which specifies the atoms for which the symmetry function is \n                          being calculated. \n\nThe following arguments are compulsory: \n\n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                  VMEAN - ( default=off ) calculate the norm of the mean vector. \n                   VSUM - ( default=off ) calculate the norm of the sum of all the \n                          vectors \n                 SWITCH - the switching function that it used in the construction of \n                          the contact matrix \n                   MASK - the label for a vector that is used to determine which rows \n                          of the matrix are computed \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "Q6": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/Q6",
    "description" : "Calculate sixth order Steinhardt parameters.",
    "module" : "symfunc",
    "displayname" : "Q6",
     "dois" : ["10.1021/ct500320c"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated and the atoms that can be in the environments", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "the list of atoms that can be in the environments of each of the atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "the switching function that it used in the construction of the contact matrix", "multiple": 0, "actionlink": "LESS_THAN"},
       "MASK" : { "type": "optional", "description": "the label for a vector that is used to determine which rows of the matrix are computed", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "VMEAN" : { "type": "flag", "description": " calculate the norm of the mean vector", "multiple": 0, "actionlink": "none", "default": "off"},
       "VSUM" : { "type": "flag", "description": " calculate the norm of the sum of all the vectors", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "_vmean" : {
           "flag": "VMEAN",
           "type": "scalar",
           "description": "the norm of the mean vector"
         },
         "_vsum" : {
           "flag": "VSUM",
           "type": "scalar",
           "description": "the norm of the mean vector"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the norms of the vectors of spherical harmonic coefficients"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "GROUP", "SPHERICAL_HARMONIC", "ONES", "MATRIX_VECTOR_PRODUCT", "COMBINE"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - the list of atoms for which the symmetry function is being \n                          calculated and the atoms that can be in the environments \n               SPECIESA - the list of atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESB, \n                          which specifies the atoms that are in the environment. \n               SPECIESB - the list of atoms that can be in the environments of each \n                          of the atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESA, \n                          which specifies the atoms for which the symmetry function is \n                          being calculated. \n\nThe following arguments are compulsory: \n\n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                  VMEAN - ( default=off ) calculate the norm of the mean vector. \n                   VSUM - ( default=off ) calculate the norm of the sum of all the \n                          vectors \n                 SWITCH - the switching function that it used in the construction of \n                          the contact matrix \n                   MASK - the label for a vector that is used to determine which rows \n                          of the matrix are computed \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "QUATERNION": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/QUATERNION",
    "description" : "Calculate unit quaternions for molecules.",
    "module" : "crystdistrib",
    "displayname" : "QUATERNION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the three atom that we are using to calculate the quaternion", "multiple": 1, "actionlink": "none"},
       "output" : {
         "w" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the real component of quaternion"
         },
         "i" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the i component of the quaternion"
         },
         "j" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the j component of the quaternion"
         },
         "k" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the k component of the quaternion"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the three atom that we are using to calculate the \n                          quaternion. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n"
  },
  "QUATERNION_BOND_PRODUCT_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/QUATERNION_BOND_PRODUCT_MATRIX",
    "description" : "Calculate the product between a matrix of quaternions and the bonds connecting molecules",
    "module" : "crystdistrib",
    "displayname" : "QUATERNION_BOND_PRODUCT_MATRIX",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "this action takes 8 arguments", "multiple": 0, "actionlink": "none", "argtype": "vector/matrix"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "w" : {
           "flag": "default",
           "type": "matrix",
           "description": "the real component of quaternion"
         },
         "i" : {
           "flag": "default",
           "type": "matrix",
           "description": "the i component of the quaternion"
         },
         "j" : {
           "flag": "default",
           "type": "matrix",
           "description": "the j component of the quaternion"
         },
         "k" : {
           "flag": "default",
           "type": "matrix",
           "description": "the k component of the quaternion"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - this action takes 8 arguments. The first four should be the \n                          w,i,j and k components of a quaternion vector. The second four \n                          should be contact matrix and the matrices should be the x, y and z \n                          components of the bond vectors \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n"
  },
  "QUATERNION_PRODUCT_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/QUATERNION_PRODUCT_MATRIX",
    "description" : "Calculate the outer product matrix from two vectors of quaternions",
    "module" : "crystdistrib",
    "displayname" : "QUATERNION_PRODUCT_MATRIX",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the labels of the quaternion vectors that you are outer product of", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "MASK" : { "type": "optional", "description": "a matrix that is used to used to determine which elements of the output matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "output" : {
         "w" : {
           "flag": "default",
           "type": "matrix",
           "description": "the real component of quaternion"
         },
         "i" : {
           "flag": "default",
           "type": "matrix",
           "description": "the i component of the quaternion"
         },
         "j" : {
           "flag": "default",
           "type": "matrix",
           "description": "the j component of the quaternion"
         },
         "k" : {
           "flag": "default",
           "type": "matrix",
           "description": "the k component of the quaternion"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the quaternion vectors that you are outer \n                          product of \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a matrix that is used to used to determine which elements \n                          of the output matrix to compute \n\n"
  },
  "QUATERNION_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/QUATERNION_SCALAR",
    "description" : "",
    "module" : "crystdistrib",
    "displayname" : "QUATERNION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the three atom that we are using to calculate the quaternion", "multiple": 1, "actionlink": "none"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "output" : {
         "w" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the real component of quaternion"
         },
         "i" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the i component of the quaternion"
         },
         "j" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the j component of the quaternion"
         },
         "k" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the k component of the quaternion"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the three atom that we are using to calculate the \n                          quaternion. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n"
  },
  "QUATERNION_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/QUATERNION_VECTOR",
    "description" : "",
    "module" : "crystdistrib",
    "displayname" : "QUATERNION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the three atom that we are using to calculate the quaternion", "multiple": 1, "actionlink": "none"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector that should be used to determine which elements of the vector should be computed", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "output" : {
         "w" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the real component of quaternion"
         },
         "i" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the i component of the quaternion"
         },
         "j" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the j component of the quaternion"
         },
         "k" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the k component of the quaternion"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the three atom that we are using to calculate the \n                          quaternion. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - the label for a sparse vector that should be used to \n                          determine which elements of the vector should be computed \n\n"
  },
  "RANDOM_EXCHANGES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/RANDOM_EXCHANGES",
    "description" : "Set random pattern for exchanges.",
    "module" : "generic",
    "displayname" : "RANDOM_EXCHANGES",
     "dois" : ["10.1021/jp067873l"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "SEED" : { "type": "optional", "description": "seed for random exchanges", "multiple": 0, "actionlink": "none"}
    },
    "help" : "                   SEED - seed for random exchanges \n\n"
  },
  "RDC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/RDC",
    "description" : "Calculates the (Residual) Dipolar Coupling between two atoms.",
    "module" : "isdb",
    "displayname" : "RDC",
     "dois" : ["10.1021/jp5021824", "10.1021/acs.biochem.5b01138"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "DOSCORE" : { "type": "flag", "description": " activate metainference", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOENSEMBLE" : { "type": "flag", "description": " don't perform any replica-averaging", "multiple": 0, "actionlink": "none", "default": "off"},
       "REWEIGHT" : { "type": "flag", "description": " simple REWEIGHT using the ARG as energy", "multiple": 0, "actionlink": "none", "default": "off"},
       "AVERAGING" : { "type": "optional", "description": "Stride for calculation of averaged weights and sigma_mean", "multiple": 0, "actionlink": "none"},
       "NOISETYPE" : { "type": "compulsory", "description": " functional form of the noise (GAUSS,MGAUSS,OUTLIERS,MOUTLIERS,GENERIC)", "multiple": 0, "actionlink": "none", "default": "MGAUSS"},
       "LIKELIHOOD" : { "type": "compulsory", "description": " the likelihood for the GENERIC metainference model, GAUSS or LOGN", "multiple": 0, "actionlink": "none", "default": "GAUSS"},
       "DFTILDE" : { "type": "compulsory", "description": " fraction of sigma_mean used to evolve ftilde", "multiple": 0, "actionlink": "none", "default": "0.1"},
       "SCALEDATA" : { "type": "flag", "description": " Set to TRUE if you want to sample a scaling factor common to all values and replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALE0" : { "type": "compulsory", "description": " initial value of the scaling factor", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SCALE_PRIOR" : { "type": "compulsory", "description": " either FLAT or GAUSSIAN", "multiple": 0, "actionlink": "none", "default": "FLAT"},
       "SCALE_MIN" : { "type": "optional", "description": "minimum value of the scaling factor", "multiple": 0, "actionlink": "none"},
       "SCALE_MAX" : { "type": "optional", "description": "maximum value of the scaling factor", "multiple": 0, "actionlink": "none"},
       "DSCALE" : { "type": "optional", "description": "maximum MC move of the scaling factor", "multiple": 0, "actionlink": "none"},
       "ADDOFFSET" : { "type": "flag", "description": " Set to TRUE if you want to sample an offset common to all values and replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "OFFSET0" : { "type": "compulsory", "description": " initial value of the offset", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "OFFSET_PRIOR" : { "type": "compulsory", "description": " either FLAT or GAUSSIAN", "multiple": 0, "actionlink": "none", "default": "FLAT"},
       "OFFSET_MIN" : { "type": "optional", "description": "minimum value of the offset", "multiple": 0, "actionlink": "none"},
       "OFFSET_MAX" : { "type": "optional", "description": "maximum value of the offset", "multiple": 0, "actionlink": "none"},
       "DOFFSET" : { "type": "optional", "description": "maximum MC move of the offset", "multiple": 0, "actionlink": "none"},
       "REGRES_ZERO" : { "type": "optional", "description": "stride for regression with zero offset", "multiple": 0, "actionlink": "none"},
       "SIGMA0" : { "type": "compulsory", "description": " initial value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SIGMA_MIN" : { "type": "compulsory", "description": " minimum value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "SIGMA_MAX" : { "type": "compulsory", "description": " maximum value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "10."},
       "DSIGMA" : { "type": "optional", "description": "maximum MC move of the uncertainty parameter", "multiple": 0, "actionlink": "none"},
       "OPTSIGMAMEAN" : { "type": "compulsory", "description": " Set to NONE/SEM to manually set sigma mean, or to estimate it on the fly", "multiple": 0, "actionlink": "none", "default": "NONE"},
       "SIGMA_MEAN0" : { "type": "optional", "description": "starting value for the uncertainty in the mean estimate", "multiple": 0, "actionlink": "none"},
       "SIGMA_MAX_STEPS" : { "type": "optional", "description": "Number of steps used to optimise SIGMA_MAX, before that the SIGMA_MAX value is used", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "the system temperature - this is only needed if code doesn't pass the temperature to plumed", "multiple": 0, "actionlink": "none"},
       "MC_STEPS" : { "type": "optional", "description": "number of MC steps", "multiple": 0, "actionlink": "none"},
       "MC_CHUNKSIZE" : { "type": "optional", "description": "MC chunksize", "multiple": 0, "actionlink": "none"},
       "STATUS_FILE" : { "type": "optional", "description": "write a file with all the data useful for restart/continuation of Metainference", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "optional", "description": "specify format for HILLS files (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "WRITE_STRIDE" : { "type": "compulsory", "description": " write the status to a file every N steps, this can be used for restart/continuation", "multiple": 0, "actionlink": "none", "default": "10000"},
       "SELECTOR" : { "type": "optional", "description": "name of selector", "multiple": 0, "actionlink": "none"},
       "NSELECT" : { "type": "optional", "description": "range of values for selector [0, N-1]", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the couple of atoms involved in each of the bonds for which you wish to calculate the RDC", "multiple": 1, "actionlink": "none"},
       "GYROM" : { "type": "compulsory", "description": " Add the product of the gyromagnetic constants for the bond", "multiple": 0, "actionlink": "none", "default": "1."},
       "SCALE" : { "type": "compulsory", "description": " Add the scaling factor to take into account concentration and other effects", "multiple": 0, "actionlink": "none", "default": "1."},
       "SVD" : { "type": "flag", "description": " Set to TRUE if you want to back calculate using Single Value Decomposition (need GSL at compilation time)", "multiple": 0, "actionlink": "none", "default": "off"},
       "COUPLING" : { "type": "optional", "description": "Add an experimental value for each coupling (needed by SVD and useful for STATS)", "multiple": 1, "actionlink": "none"},
       "output" : {
         "score" : {
           "flag": "default",
           "type": "scalar",
           "description": "the Metainference score"
         },
         "sigma" : {
           "flag": "default",
           "type": "scalar",
           "description": "uncertainty parameter"
         },
         "sigmaMean" : {
           "flag": "default",
           "type": "scalar",
           "description": "uncertainty in the mean estimate"
         },
         "neff" : {
           "flag": "default",
           "type": "scalar",
           "description": "effective number of replicas"
         },
         "acceptSigma" : {
           "flag": "default",
           "type": "scalar",
           "description": "MC acceptance for sigma values"
         },
         "acceptScale" : {
           "flag": "SCALEDATA",
           "type": "scalar",
           "description": "MC acceptance for scale value"
         },
         "acceptFT" : {
           "flag": "GENERIC",
           "type": "scalar",
           "description": "MC acceptance for general metainference f tilde value"
         },
         "weight" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "weights of the weighted average"
         },
         "biasDer" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "derivatives with respect to the bias"
         },
         "scale" : {
           "flag": "SCALEDATA",
           "type": "scalar",
           "description": "scale parameter"
         },
         "offset" : {
           "flag": "ADDOFFSET",
           "type": "scalar",
           "description": "offset parameter"
         },
         "ftilde" : {
           "flag": "GENERIC",
           "type": "scalar",
           "description": "ensemble average estimator"
         },
         "rdc" : {
           "flag": "default",
           "type": "scalar",
           "description": "the calculated # RDC"
         },
         "exp" : {
           "flag": "SVD/COUPLING",
           "type": "scalar",
           "description": "the experimental # RDC"
         },
         "Sxx" : {
           "flag": "SVD",
           "type": "scalar",
           "description": "Tensor component"
         },
         "Syy" : {
           "flag": "SVD",
           "type": "scalar",
           "description": "Tensor component"
         },
         "Szz" : {
           "flag": "SVD",
           "type": "scalar",
           "description": "Tensor component"
         },
         "Sxy" : {
           "flag": "SVD",
           "type": "scalar",
           "description": "Tensor component"
         },
         "Sxz" : {
           "flag": "SVD",
           "type": "scalar",
           "description": "Tensor component"
         },
         "Syz" : {
           "flag": "SVD",
           "type": "scalar",
           "description": "Tensor component"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the couple of atoms involved in each of the bonds for which \n                          you wish to calculate the RDC. Keywords like ATOMS1, ATOMS2, \n                          ATOMS3,... should be listed and one dipolar coupling will be \n                          calculated for each ATOMS keyword you specify.. You can use multiple \n                          instances of this keyword i.e. ATOMS1, ATOMS2, ATOMS3... \n\nThe following arguments are compulsory: \n\n              NOISETYPE - ( default=MGAUSS ) functional form of the noise \n                          (GAUSS,MGAUSS,OUTLIERS,MOUTLIERS,GENERIC) \n             LIKELIHOOD - ( default=GAUSS ) the likelihood for the GENERIC \n                          metainference model, GAUSS or LOGN \n                DFTILDE - ( default=0.1 ) fraction of sigma_mean used to evolve \n                          ftilde \n                 SCALE0 - ( default=1.0 ) initial value of the scaling factor \n            SCALE_PRIOR - ( default=FLAT ) either FLAT or GAUSSIAN \n                OFFSET0 - ( default=0.0 ) initial value of the offset \n           OFFSET_PRIOR - ( default=FLAT ) either FLAT or GAUSSIAN \n                 SIGMA0 - ( default=1.0 ) initial value of the uncertainty parameter \n              SIGMA_MIN - ( default=0.0 ) minimum value of the uncertainty parameter \n              SIGMA_MAX - ( default=10. ) maximum value of the uncertainty parameter \n           OPTSIGMAMEAN - ( default=NONE ) Set to NONE/SEM to manually set sigma \n                          mean, or to estimate it on the fly \n           WRITE_STRIDE - ( default=10000 ) write the status to a file every N steps, \n                          this can be used for restart/continuation \n                  GYROM - ( default=1. ) Add the product of the gyromagnetic \n                          constants for the bond. \n                  SCALE - ( default=1. ) Add the scaling factor to take into account \n                          concentration and other effects. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                DOSCORE - ( default=off ) activate metainference \n             NOENSEMBLE - ( default=off ) don't perform any replica-averaging \n               REWEIGHT - ( default=off ) simple REWEIGHT using the ARG as energy \n              SCALEDATA - ( default=off ) Set to TRUE if you want to sample a scaling \n                          factor common to all values and replicas \n              ADDOFFSET - ( default=off ) Set to TRUE if you want to sample an offset \n                          common to all values and replicas \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                    SVD - ( default=off ) Set to TRUE if you want to back calculate \n                          using Single Value Decomposition (need GSL at compilation time). \n                    ARG - the labels of the values from which the function is \n                          calculated \n              AVERAGING - Stride for calculation of averaged weights and sigma_mean \n              SCALE_MIN - minimum value of the scaling factor \n              SCALE_MAX - maximum value of the scaling factor \n                 DSCALE - maximum MC move of the scaling factor \n             OFFSET_MIN - minimum value of the offset \n             OFFSET_MAX - maximum value of the offset \n                DOFFSET - maximum MC move of the offset \n            REGRES_ZERO - stride for regression with zero offset \n                 DSIGMA - maximum MC move of the uncertainty parameter \n            SIGMA_MEAN0 - starting value for the uncertainty in the mean estimate \n        SIGMA_MAX_STEPS - Number of steps used to optimise SIGMA_MAX, before that the \n                          SIGMA_MAX value is used \n                   TEMP - the system temperature - this is only needed if code \n                          doesn't pass the temperature to plumed \n               MC_STEPS - number of MC steps \n           MC_CHUNKSIZE - MC chunksize \n            STATUS_FILE - write a file with all the data useful for \n                          restart/continuation of Metainference \n                    FMT - specify format for HILLS files (useful for decrease the \n                          number of digits in regtests) \n               SELECTOR - name of selector \n                NSELECT - range of values for selector [0, N-1] \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n               COUPLING - Add an experimental value for each coupling (needed by SVD \n                          and useful for STATS).. You can use multiple instances of this \n                          keyword i.e. COUPLING1, COUPLING2, COUPLING3... \n\n"
  },
  "RDF": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/RDF",
    "description" : "Calculate the radial distribution function",
    "module" : "gridtools",
    "displayname" : "RDF",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "GROUP" : { "type": "atoms", "description": "the atoms that are being used to calculate the RDF", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the atoms that are being used to calculate the RDF", "multiple": 1, "actionlink": "none"},
       "GROUPA" : { "type": "atoms", "description": "the atoms that you would like to compute the RDF about", "multiple": 1, "actionlink": "none"},
       "GROUPB" : { "type": "atoms", "description": "the atoms that you would like to to use when computing the RDF around the atoms that were specified with GROUPA", "multiple": 1, "actionlink": "none"},
       "GRID_BIN" : { "type": "compulsory", "description": "the number of bins to use when computing the RDF", "multiple": 0, "actionlink": "none"},
       "KERNEL" : { "type": "compulsory", "description": " the type of kernel to use for computing the histograms for the RDF", "multiple": 0, "actionlink": "none", "default": "GAUSSIAN"},
       "CUTOFF" : { "type": "compulsory", "description": " the cutoff at which to stop evaluating the kernel functions is set equal to sqrt(2*x)*bandwidth in each direction where x is this number", "multiple": 0, "actionlink": "none", "default": "6.25"},
       "MAXR" : { "type": "compulsory", "description": "the maximum distance to use for the rdf", "multiple": 0, "actionlink": "none"},
       "BANDWIDTH" : { "type": "compulsory", "description": "the bandwidths for kernel density esimtation", "multiple": 0, "actionlink": "none"},
       "CLEAR" : { "type": "compulsory", "description": " the frequency with which to clear the estimate of the rdf", "multiple": 0, "actionlink": "none", "default": "1"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which to compute the rdf and accumulate averages", "multiple": 0, "actionlink": "none", "default": "1"},
       "DENSITY" : { "type": "optional", "description": "the reference density to use when normalizing the RDF", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "hidden", "description": "this is the label of the reference objects", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "grid",
           "description": "the radial distribution function"
         }
       }
    },
    "needs" : ["REFERENCE_GRID", "VOLUME", "DISTANCE_MATRIX", "CUSTOM", "KDE", "ACCUMULATE", "CONSTANT"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - the atoms that are being used to calculate the RDF. For \n                          more information on how to specify lists of atoms see \ref Group \n                  ATOMS - the atoms that are being used to calculate the RDF. For \n                          more information on how to specify lists of atoms see \ref Group \n                 GROUPA - the atoms that you would like to compute the RDF about. \n                          Must be used with GROUPB. \n                 GROUPB - the atoms that you would like to to use when computing the \n                          RDF around the atoms that were specified with GROUPA \n\nThe following arguments are compulsory: \n\n               GRID_BIN - the number of bins to use when computing the RDF \n                 KERNEL - ( default=GAUSSIAN ) the type of kernel to use for \n                          computing the histograms for the RDF \n                 CUTOFF - ( default=6.25 ) the cutoff at which to stop evaluating the \n                          kernel functions is set equal to sqrt(2*x)*bandwidth in each \n                          direction where x is this number \n                   MAXR - the maximum distance to use for the rdf \n              BANDWIDTH - the bandwidths for kernel density esimtation \n                  CLEAR - ( default=1 ) the frequency with which to clear the \n                          estimate of the rdf. Set equal to 0 if you want to compute an rdf \n                          over the whole trajectory \n                 STRIDE - ( default=1 ) the frequency with which to compute the rdf \n                          and accumulate averages \n                DENSITY - the reference density to use when normalizing the RDF \n\n"
  },
  "READ": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/READ",
    "description" : "Read quantities from a colvar file.",
    "module" : "generic",
    "displayname" : "READ",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the file should be read", "multiple": 0, "actionlink": "none", "default": "1"},
       "EVERY" : { "type": "compulsory", "description": " only read every nth line of the colvar file", "multiple": 0, "actionlink": "none", "default": "1"},
       "VALUES" : { "type": "compulsory", "description": "the values to read from the file", "multiple": 0, "actionlink": "none"},
       "FILE" : { "type": "compulsory", "description": "the name of the file from which to read these quantities", "multiple": 0, "actionlink": "none"},
       "IGNORE_TIME" : { "type": "flag", "description": " ignore the time in the colvar file", "multiple": 0, "actionlink": "none", "default": "off"},
       "IGNORE_FORCES" : { "type": "flag", "description": " use this flag if the forces added by any bias can be safely ignored", "multiple": 0, "actionlink": "none", "default": "off"},
       "UPDATE_FROM" : { "type": "optional", "description": "Only update this action from this time", "multiple": 0, "actionlink": "none"},
       "UPDATE_UNTIL" : { "type": "optional", "description": "Only update this action until this time", "multiple": 0, "actionlink": "none"},
       "output" : {
         ".#!custom" : {
           "flag": "default",
           "type": "scalar",
           "description": "the names of the output components for this action depend on the actions input file see the example inputs below for details"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                 STRIDE - ( default=1 ) the frequency with which the file should be \n                          read. \n                  EVERY - ( default=1 ) only read every nth line of the colvar file. \n                          This should be used if the colvar was written more frequently \n                          than the trajectory. \n                 VALUES - the values to read from the file \n                   FILE - the name of the file from which to read these quantities \n\nIn addition you may use the following options: \n\n            IGNORE_TIME - ( default=off ) ignore the time in the colvar file. When \n                          this flag is not present read will be quite strict about the \n                          start time of the simulation and the stride between frames \n          IGNORE_FORCES - ( default=off ) use this flag if the forces added by any \n                          bias can be safely ignored. As an example forces can be safely \n                          ignored if you are doing post processing that does not involve \n                          outputting forces \n            UPDATE_FROM - Only update this action from this time \n           UPDATE_UNTIL - Only update this action until this time \n\n"
  },
  "READMASSCHARGE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/READMASSCHARGE",
    "description" : "Set the masses and charges from an input PDB file.",
    "module" : "generic",
    "displayname" : "READMASSCHARGE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "FILE" : { "type": "optional", "description": "input file that contains the masses and charges that should be used", "multiple": 0, "actionlink": "none"},
       "PDBFILE" : { "type": "compulsory", "description": "a pdb file that contains the masses and charges of the atoms in the beta and occupancy columns", "multiple": 0, "actionlink": "none"},
       "output" : {
         "mass" : {
           "flag": "default",
           "type": "vector",
           "description": "the masses of the atoms in the system"
         },
         "charges" : {
           "flag": "default",
           "type": "vector",
           "description": "the masses of the atoms in the system"
         }
       }
    },
    "needs" : ["CONSTANT"],
    "help" : "\nThe following arguments are compulsory: \n\n                PDBFILE - a pdb file that contains the masses and charges of the \n                          atoms in the beta and occupancy columns \n                   FILE - input file that contains the masses and charges that should \n                          be used \n\n"
  },
  "REFERENCE_GRID": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/REFERENCE_GRID",
    "description" : "Setup a constant grid by either reading values from a file or definining a function in input",
    "module" : "gridtools",
    "displayname" : "REFERENCE_GRID",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "FUNC" : { "type": "optional", "description": "the function to compute on the grid", "multiple": 0, "actionlink": "none"},
       "GRID_MIN" : { "type": "compulsory", "description": " the lower bounds for the grid", "multiple": 0, "actionlink": "none", "default": "auto"},
       "GRID_MAX" : { "type": "compulsory", "description": " the upper bounds for the grid", "multiple": 0, "actionlink": "none", "default": "auto"},
       "PERIODIC" : { "type": "compulsory", "description": "are the grid directions periodic", "multiple": 0, "actionlink": "none"},
       "GRID_BIN" : { "type": "optional", "description": "the number of bins for the grid", "multiple": 0, "actionlink": "none"},
       "GRID_SPACING" : { "type": "optional", "description": "the approximate grid spacing (to be used as an alternative or together with GRID_BIN)", "multiple": 0, "actionlink": "none"},
       "VAR" : { "type": "optional", "description": "the names to give each of the grid directions in the function", "multiple": 0, "actionlink": "none"},
       "FILE" : { "type": "compulsory", "description": "the name of the file that contains the reference data", "multiple": 0, "actionlink": "none"},
       "VALUE" : { "type": "compulsory", "description": "the name of the value that should be read from the grid", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "grid",
           "description": "the constant function on the grid that was specified in input"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n               GRID_MIN - ( default=auto ) the lower bounds for the grid \n               GRID_MAX - ( default=auto ) the upper bounds for the grid \n               PERIODIC - are the grid directions periodic \n                   FILE - the name of the file that contains the reference data \n                  VALUE - the name of the value that should be read from the grid \n                   FUNC - the function to compute on the grid \n               GRID_BIN - the number of bins for the grid \n           GRID_SPACING - the approximate grid spacing (to be used as an alternative \n                          or together with GRID_BIN) \n                    VAR - the names to give each of the grid directions in the \n                          function. If you have up to three grid coordinates in your function \n                          you can use x, y and z to refer to them. Otherwise you must use \n                          this flag to give your variables names. \n\n"
  },
  "REPARAMETERIZE_PATH": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/REPARAMETERIZE_PATH",
    "description" : "Take an input path with frames that are not equally spaced and make the frames equally spaced",
    "module" : "mapping",
    "displayname" : "REPARAMETERIZE_PATH",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the matrix that contains the vectors of displacements from each frame in the path", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "METRIC" : { "type": "compulsory", "description": "the method to use for computing the displacement vectors between the reference frames", "multiple": 0, "actionlink": "none"},
       "METRIC_COMPONENT" : { "type": "compulsory", "description": "if the final action in your metric contains multiple components this keyword is used to specify the component that should be used", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "compulsory", "description": "labels for actions that contain reference coordinates for each point on the path", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which to reparameterize the path", "multiple": 0, "actionlink": "none", "default": "1"},
       "FIXED" : { "type": "compulsory", "description": " the frames in the path to fix", "multiple": 0, "actionlink": "none", "default": "0"},
       "MAXCYLES" : { "type": "compulsory", "description": " number of cycles of the algorithm to run", "multiple": 0, "actionlink": "none", "default": "100"},
       "TOL" : { "type": "compulsory", "description": " the tolerance to use for the path reparameterization algorithm", "multiple": 0, "actionlink": "none", "default": "1E-4"},
       "DISPLACE_FRAMES" : { "type": "optional", "description": "label of an action that tells us how to displace the frames", "multiple": 0, "actionlink": "none"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the matrix that contains the vectors of \n                          displacements from each frame in the path \n                 METRIC - the method to use for computing the displacement vectors \n                          between the reference frames \n       METRIC_COMPONENT - if the final action in your metric contains multiple \n                          components this keyword is used to specify the component that should \n                          be used \n              REFERENCE - labels for actions that contain reference coordinates for \n                          each point on the path \n                 STRIDE - ( default=1 ) the frequency with which to reparameterize \n                          the path \n                  FIXED - ( default=0 ) the frames in the path to fix \n               MAXCYLES - ( default=100 ) number of cycles of the algorithm to run \n                    TOL - ( default=1E-4 ) the tolerance to use for the path \n                          reparameterization algorithm \n        DISPLACE_FRAMES - label of an action that tells us how to displace the \n                          frames. These displacements are applied before running the \n                          reparameterization algorith \n\n"
  },
  "RESCALE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/RESCALE",
    "description" : "Scales the value of an another action, being a Collective Variable or a Bias.",
    "module" : "isdb",
    "displayname" : "RESCALE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "compulsory", "description": "temperature", "multiple": 0, "actionlink": "none"},
       "SELECTOR" : { "type": "compulsory", "description": "name of the SELECTOR used for rescaling", "multiple": 0, "actionlink": "none"},
       "MAX_RESCALE" : { "type": "compulsory", "description": "maximum values for rescaling", "multiple": 0, "actionlink": "none"},
       "NBIN" : { "type": "compulsory", "description": "number of bins for gamma grid", "multiple": 0, "actionlink": "none"},
       "W0" : { "type": "compulsory", "description": "initial bias height", "multiple": 0, "actionlink": "none"},
       "BIASFACTOR" : { "type": "compulsory", "description": "bias factor", "multiple": 0, "actionlink": "none"},
       "BSTRIDE" : { "type": "compulsory", "description": "stride for writing bias", "multiple": 0, "actionlink": "none"},
       "BFILE" : { "type": "compulsory", "description": "file name for bias", "multiple": 0, "actionlink": "none"},
       "NOT_SHARED" : { "type": "optional", "description": "list of arguments (from 1 to N) not summed across replicas", "multiple": 0, "actionlink": "none"},
       "NOT_RESCALED" : { "type": "optional", "description": "these last N arguments will not be scaled", "multiple": 0, "actionlink": "none"},
       "MC_STEPS" : { "type": "optional", "description": "number of MC steps", "multiple": 0, "actionlink": "none"},
       "MC_STRIDE" : { "type": "optional", "description": "MC stride", "multiple": 0, "actionlink": "none"},
       "PACE" : { "type": "optional", "description": "Pace for adding bias, in MC stride unit", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "igamma" : {
           "flag": "default",
           "type": "scalar",
           "description": "gamma parameter"
         },
         "accgamma" : {
           "flag": "default",
           "type": "scalar",
           "description": "MC acceptance for gamma"
         },
         "wtbias" : {
           "flag": "default",
           "type": "scalar",
           "description": "well-tempered bias"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n                   TEMP - temperature \n               SELECTOR - name of the SELECTOR used for rescaling \n            MAX_RESCALE - maximum values for rescaling \n                   NBIN - number of bins for gamma grid \n                     W0 - initial bias height \n             BIASFACTOR - bias factor \n                BSTRIDE - stride for writing bias \n                  BFILE - file name for bias \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n             NOT_SHARED - list of arguments (from 1 to N) not summed across replicas \n           NOT_RESCALED - these last N arguments will not be scaled \n               MC_STEPS - number of MC steps \n              MC_STRIDE - MC stride \n                   PACE - Pace for adding bias, in MC stride unit \n\n"
  },
  "RESET_CELL": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/RESET_CELL",
    "description" : "This action is used to rotate the full cell",
    "module" : "generic",
    "displayname" : "RESET_CELL",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which molecules are reassembled", "multiple": 0, "actionlink": "none", "default": "1"},
       "TYPE" : { "type": "compulsory", "description": " the manner in which the cell is reset", "multiple": 0, "actionlink": "none", "default": "TRIANGULAR"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                 STRIDE - ( default=1 ) the frequency with which molecules are \n                          reassembled. Unless you are completely certain about what you are doing \n                          leave this set equal to 1! \n                   TYPE - ( default=TRIANGULAR ) the manner in which the cell is \n                          reset \n"
  },
  "RESTART": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/RESTART",
    "description" : "Activate restart.",
    "module" : "setup",
    "displayname" : "RESTART",
     "dois" : [],
    "syntax" : {
       "NO" : { "type": "flag", "description": " switch off restart - can be used to override the behavior of the MD engine", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following options are available\n\n                     NO - ( default=off ) switch off restart - can be used to \n                          override the behavior of the MD engine \n"
  },
  "RESTRAINT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/RESTRAINT",
    "description" : "Adds harmonic and/or linear restraints on one or more variables.",
    "module" : "bias",
    "displayname" : "RESTRAINT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the values the harmonic restraint acts upon", "multiple": 1, "actionlink": "none", "argtype": "scalar/vector"},
       "SLOPE" : { "type": "compulsory", "description": " specifies that the restraint is linear and what the values of the force constants on each of the variables are", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "KAPPA" : { "type": "compulsory", "description": " specifies that the restraint is harmonic and what the values of the force constants on each of the variables are", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "AT" : { "type": "compulsory", "description": "the position of the restraint", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "hidden", "description": " the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none", "default": "1"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "force2" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the instantaneous value of the squared force due to this bias potential"
         }
       }
    },
    "needs" : ["COMBINE", "SUM", "CUSTOM", "BIASVALUE"],
    "help" : "\nThe following arguments are compulsory: \n\n                  SLOPE - ( default=0.0 ) specifies that the restraint is linear and \n                          what the values of the force constants on each of the variables \n                          are \n                  KAPPA - ( default=0.0 ) specifies that the restraint is harmonic \n                          and what the values of the force constants on each of the \n                          variables are \n                     AT - the position of the restraint \n                    ARG - the values the harmonic restraint acts upon. You can use \n                          multiple instances of this keyword i.e. ARG1, ARG2, ARG3... \n\n"
  },
  "RESTRAINT_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/RESTRAINT_SCALAR",
    "description" : "",
    "module" : "bias",
    "displayname" : "RESTRAINT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "SLOPE" : { "type": "compulsory", "description": " specifies that the restraint is linear and what the values of the force constants on each of the variables are", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "KAPPA" : { "type": "compulsory", "description": " specifies that the restraint is harmonic and what the values of the force constants on each of the variables are", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "AT" : { "type": "compulsory", "description": "the position of the restraint", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "force2" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the squared force due to this bias potential"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n                  SLOPE - ( default=0.0 ) specifies that the restraint is linear and \n                          what the values of the force constants on each of the variables \n                          are \n                  KAPPA - ( default=0.0 ) specifies that the restraint is harmonic \n                          and what the values of the force constants on each of the \n                          variables are \n                     AT - the position of the restraint \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n"
  },
  "REWEIGHT_BIAS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/REWEIGHT_BIAS",
    "description" : "Calculate weights for ensemble averages that negate the effect the bias has on the region of phase space explored",
    "module" : "bias",
    "displayname" : "REWEIGHT_BIAS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "the system temperature", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": " the biases that must be taken into account when reweighting", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the weight to use for this frame to negate the effect the bias"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - ( default=*.bias ) the biases that must be taken into \n                          account when reweighting \n                   TEMP - the system temperature. This is not required if your MD \n                          code passes this quantity to PLUMED \n\n"
  },
  "REWEIGHT_METAD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/REWEIGHT_METAD",
    "description" : "Calculate the weights configurations should contribute to the histogram in a simulation in which a metadynamics bias acts upon the system.",
    "module" : "bias",
    "displayname" : "REWEIGHT_METAD",
     "dois" : ["10.1021/jp504920s"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "the system temperature", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": " the biases that must be taken into account when reweighting", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the weight to use for this frame to negate the effect the metadynamics bias"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - ( default=*.rbias ) the biases that must be taken into \n                          account when reweighting \n                   TEMP - the system temperature. This is not required if your MD \n                          code passes this quantity to PLUMED \n\n"
  },
  "REWEIGHT_TEMP_PRESS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/REWEIGHT_TEMP_PRESS",
    "description" : "Calculate weights for ensemble averages at temperatures and/or pressures different than those used in your original simulation.",
    "module" : "bias",
    "displayname" : "REWEIGHT_TEMP_PRESS",
     "dois" : ["10.1103/PhysRevLett.86.2050", "10.1103/PhysRevLett.92.170601", "10.1103/PhysRevLett.122.050601", "10.1063/1.5102104"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "the system temperature", "multiple": 0, "actionlink": "none"},
       "ENERGY" : { "type": "optional", "description": "Energy", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "VOLUME" : { "type": "optional", "description": "Volume", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "REWEIGHT_PRESSURE" : { "type": "optional", "description": "Reweighting pressure", "multiple": 0, "actionlink": "none"},
       "PRESSURE" : { "type": "optional", "description": "The system pressure", "multiple": 0, "actionlink": "none"},
       "REWEIGHT_TEMP" : { "type": "optional", "description": "Reweighting temperature", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the weight to use for this frame to determine its contribution at a different temperature/pressure"
         }
       }
    },
    "help" : "                   TEMP - the system temperature. This is not required if your MD \n                          code passes this quantity to PLUMED \n                 ENERGY - Energy \n                 VOLUME - Volume \n      REWEIGHT_PRESSURE - Reweighting pressure \n               PRESSURE - The system pressure \n          REWEIGHT_TEMP - Reweighting temperature \n\n"
  },
  "RMSD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/RMSD",
    "description" : "Calculate the RMSD with respect to a reference structure.",
    "module" : "colvar",
    "displayname" : "RMSD",
     "dois" : ["10.1107/S0108767388010128"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "compulsory", "description": "a file in pdb format containing the reference structure and the atoms involved in the CV", "multiple": 0, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " the manner in which RMSD alignment is performed", "multiple": 0, "actionlink": "none", "default": "SIMPLE"},
       "SQUARED" : { "type": "flag", "description": "  This should be setted if you want MSD instead of RMSD ", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "DISPLACEMENT" : { "type": "flag", "description": " Calculate the vector of displacements instead of the length of this vector", "multiple": 0, "actionlink": "none", "default": "off"},
       "ARG" : { "type": "optional", "description": "instead of using the REFERENCE option you can use this action to specify the labels of two actions that you are calculating the RMSD between", "multiple": 0, "actionlink": "none", "argtype": "vector/matrix"},
       "NUMBER" : { "type": "compulsory", "description": " if there are multiple structures in the pdb file you can specify that you want the RMSD from a specific structure by specifying its place in the file here", "multiple": 0, "actionlink": "none", "default": "0"},
       "output" : {
         "disp" : {
           "flag": "DISPLACEMENT",
           "type": "vector/matrix",
           "description": "the vector of displacements for the atoms"
         },
         "dist" : {
           "flag": "DISPLACEMENT",
           "type": "scalar/vector",
           "description": "the RMSD distance the atoms have moved"
         },
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the RMSD distance between the instaneous structure and the reference structure/s that were input"
         }
       }
    },
    "needs" : ["PDB2CONSTANT", "WHOLEMOLECULES", "POSITION", "CONCATENATE"],
    "help" : "\nThe following arguments are compulsory: \n\n              REFERENCE - a file in pdb format containing the reference structure and \n                          the atoms involved in the CV \n                   TYPE - ( default=SIMPLE ) the manner in which RMSD alignment is \n                          performed. Should be OPTIMAL or SIMPLE. \n                 NUMBER - ( default=0 ) if there are multiple structures in the pdb \n                          file you can specify that you want the RMSD from a specific \n                          structure by specifying its place in the file here. If NUMBER=0 then \n                          the RMSD from all structures are computed \n\nIn addition you may use the following options: \n\n                SQUARED - ( default=off ) This should be setted if you want MSD \n                          instead of RMSD \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n           DISPLACEMENT - ( default=off ) Calculate the vector of displacements \n                          instead of the length of this vector \n                    ARG - instead of using the REFERENCE option you can use this \n                          action to specify the labels of two actions that you are \n                          calculating the RMSD between \n\n"
  },
  "RMSD_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/RMSD_SCALAR",
    "description" : "",
    "module" : "colvar",
    "displayname" : "RMSD",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "REFERENCE" : { "type": "compulsory", "description": "a file in pdb format containing the reference structure and the atoms involved in the CV", "multiple": 0, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " the manner in which RMSD alignment is performed", "multiple": 0, "actionlink": "none", "default": "SIMPLE"},
       "SQUARED" : { "type": "flag", "description": "  This should be set if you want mean squared displacement instead of RMSD ", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the RMSD between the instantaneous structure and the reference structure that was input"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n              REFERENCE - a file in pdb format containing the reference structure and \n                          the atoms involved in the CV. \n                   TYPE - ( default=SIMPLE ) the manner in which RMSD alignment is \n                          performed. Should be OPTIMAL or SIMPLE. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                SQUARED - ( default=off ) This should be set if you want mean squared \n                          displacement instead of RMSD \n"
  },
  "RMSD_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/RMSD_VECTOR",
    "description" : "",
    "module" : "colvar",
    "displayname" : "RMSD",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the labels of two actions that you are calculating the RMSD between", "multiple": 0, "actionlink": "none", "argtype": "vector/matrix"},
       "TYPE" : { "type": "compulsory", "description": " the manner in which RMSD alignment is performed", "multiple": 0, "actionlink": "none", "default": "SIMPLE"},
       "ALIGN" : { "type": "compulsory", "description": " the weights to use when aligning to the reference structure", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "DISPLACE" : { "type": "compulsory", "description": " the weights to use when calculating the displacement from the reference structure", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SQUARED" : { "type": "flag", "description": "  This should be set if you want mean squared displacement instead of RMSD ", "multiple": 0, "actionlink": "none", "default": "off"},
       "UNORMALIZED" : { "type": "flag", "description": " by default the mean sequare deviation or root mean square deviation is calculated", "multiple": 0, "actionlink": "none", "default": "off"},
       "DISPLACEMENT" : { "type": "flag", "description": " Calculate the vector of displacements instead of the length of this vector", "multiple": 0, "actionlink": "none", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "disp" : {
           "flag": "DISPLACEMENT",
           "type": "vector/matrix",
           "description": "the vector of displacements for the atoms"
         },
         "dist" : {
           "flag": "DISPLACEMENT",
           "type": "scalar/vector",
           "description": "the RMSD distance the atoms have moved"
         },
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "a vector containing the RMSD between the instantaneous structure and each of the reference structures that were input"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of two actions that you are calculating the RMSD \n                          between \n                   TYPE - ( default=SIMPLE ) the manner in which RMSD alignment is \n                          performed. Should be OPTIMAL or SIMPLE. \n                  ALIGN - ( default=1.0 ) the weights to use when aligning to the \n                          reference structure \n               DISPLACE - ( default=1.0 ) the weights to use when calculating the \n                          displacement from the reference structure \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                SQUARED - ( default=off ) This should be set if you want mean squared \n                          displacement instead of RMSD \n            UNORMALIZED - ( default=off ) by default the mean sequare deviation or \n                          root mean square deviation is calculated. If this option is \n                          given no averaging is done \n           DISPLACEMENT - ( default=off ) Calculate the vector of displacements \n                          instead of the length of this vector \n                 USEGPU - ( default=off ) run this calculation on the GPU \n"
  },
  "ROPS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ROPS",
    "description" : "Calculate the ROPS order parameter",
    "module" : "crystdistrib",
    "displayname" : "ROPS",
     "dois" : ["10.1063/1.3548889"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "this keyword is used for colvars such as coordination number", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "this keyword is used for colvars such as the coordination number", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "this keyword is used for colvars such as the coordination number", "multiple": 1, "actionlink": "none"},
       "QUATERNIONS" : { "type": "compulsory", "description": "the label of the action that computes the quaternions that should be used", "multiple": 0, "actionlink": "none"},
       "KERNELFILE_DOPS" : { "type": "compulsory", "description": "the file containing the list of kernel parameters", "multiple": 0, "actionlink": "none"},
       "KERNELFILE_ROPS" : { "type": "compulsory", "description": "the file containing the list of kernel parameters", "multiple": 0, "actionlink": "none"},
       "CUTOFF" : { "type": "compulsory", "description": "cutoff for the distance matrix", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the values of the ROPS order parameters"
         }
       }
    },
    "needs" : ["DISTANCE_MATRIX", "QUATERNION_PRODUCT_MATRIX", "ONES", "CUSTOM", "MATRIX_VECTOR_PRODUCT"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - this keyword is used for colvars such as coordination \n                          number. In that context it specifies that plumed should calculate \n                          one coordination number for each of the atoms specified. Each \n                          of these coordination numbers specifies how many of the other \n                          specified atoms are within a certain cutoff of the central atom. You \n                          can specify the atoms here as another multicolvar action or \n                          using a MultiColvarFilter or ActionVolume action. When you do so \n                          the quantity is calculated for those atoms specified in the \n                          previous multicolvar. This is useful if you would like to calculate \n                          the Steinhardt parameter for those atoms that have a \n                          coordination number more than four for example. For more information on \n                          how to specify lists of atoms see \ref Group \n               SPECIESA - this keyword is used for colvars such as the coordination \n                          number. In that context it species that plumed should calculate one \n                          coordination number for each of the atoms specified in SPECIESA. Each of \n                          these cooordination numbers specifies how many of the atoms \n                          specifies using SPECIESB is within the specified cutoff. As with the \n                          species keyword the input can also be specified using the label of \n                          another multicolvar \n               SPECIESB - this keyword is used for colvars such as the coordination \n                          number. It must appear with SPECIESA. For a full explanation see \n                          the documentation for that keyword \n\nThe following arguments are compulsory: \n\n            QUATERNIONS - the label of the action that computes the quaternions that \n                          should be used \n        KERNELFILE_DOPS - the file containing the list of kernel parameters. We \n                          expect h, mu and sigma parameters for a 1D Gaussian kernel of the \n                          form h*exp(-(x-mu)^2/2sigma^2) \n        KERNELFILE_ROPS - the file containing the list of kernel parameters. We \n                          expect the normalization factor (height), concentration parameter \n                          (kappa), and 4 quaternion pieces of the mean for a bipolar watson \n                          distribution (mu_w,mu_i,mu_j,mu_k)): (h*exp(kappa*dot(q_mean,q))), where \n                          dot is the dot product \n                 CUTOFF - cutoff for the distance matrix \n"
  },
  "S2CM": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/S2CM",
    "description" : "S2 contact model CV.",
    "module" : "s2cm",
    "displayname" : "S2CM",
     "dois" : ["10.1021/acs.jpclett.7b01770", "10.1021/ja027847a", "10.1023/B:JNMR.0000032612.70767.35"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "SERIAL" : { "type": "flag", "description": " Perform the calculation in serial - for debug purpose", "multiple": 0, "actionlink": "none", "default": "off"},
       "NLIST" : { "type": "flag", "description": " Use a neighbour list to speed up the calculation", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "optional", "description": "The cutoff for the neighbour list", "multiple": 0, "actionlink": "none"},
       "NL_STRIDE" : { "type": "optional", "description": "The frequency with which we are updating the atoms in the neighbour list", "multiple": 0, "actionlink": "none"},
       "METHYL_ATOM" : { "type": "atoms", "description": "the methyl carbon atom of the residue (i)", "multiple": 1, "actionlink": "none"},
       "NH_ATOMS" : { "type": "atoms", "description": "the hydrogen atom of the NH group of the residue (i) and carbonyl oxygen of the preceding residue (i-1)", "multiple": 1, "actionlink": "none"},
       "HEAVY_ATOMS" : { "type": "atoms", "description": "the heavy atoms to be included in the calculation", "multiple": 1, "actionlink": "none"},
       "R_EFF" : { "type": "compulsory", "description": "the effective distance, r_eff in the equation, given in nm", "multiple": 0, "actionlink": "none"},
       "PREFACTOR_A" : { "type": "compulsory", "description": "the prefactor, a in the equation", "multiple": 0, "actionlink": "none"},
       "EXPONENT_B" : { "type": "compulsory", "description": "the exponent, b in the equation", "multiple": 0, "actionlink": "none"},
       "OFFSET_C" : { "type": "compulsory", "description": "the offset, c in the equation", "multiple": 0, "actionlink": "none"},
       "N_I" : { "type": "compulsory", "description": " n_i in the equation", "multiple": 0, "actionlink": "none"},
       "R_SHIFT" : { "type": "optional", "description": "shift all distances by given amount", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the value of the CV"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n            METHYL_ATOM - the methyl carbon atom of the residue (i). For more \n                          information on how to specify lists of atoms see \ref Group \n               NH_ATOMS - the hydrogen atom of the NH group of the residue (i) and \n                          carbonyl oxygen of the preceding residue (i-1). For more information \n                          on how to specify lists of atoms see \ref Group \n            HEAVY_ATOMS - the heavy atoms to be included in the calculation. For more \n                          information on how to specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                  R_EFF - the effective distance, r_eff in the equation, given in nm. \n            PREFACTOR_A - the prefactor, a in the equation \n             EXPONENT_B - the exponent, b in the equation \n               OFFSET_C - the offset, c in the equation \n                    N_I - n_i in the equation \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 SERIAL - ( default=off ) Perform the calculation in serial - for \n                          debug purpose \n                  NLIST - ( default=off ) Use a neighbour list to speed up the \n                          calculation \n              NL_CUTOFF - The cutoff for the neighbour list \n              NL_STRIDE - The frequency with which we are updating the atoms in the \n                          neighbour list \n                R_SHIFT - shift all distances by given amount \n\n"
  },
  "SANS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SANS",
    "description" : "Calculates SANS intensity.",
    "module" : "isdb",
    "displayname" : "SANS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "DOSCORE" : { "type": "flag", "description": " activate metainference", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOENSEMBLE" : { "type": "flag", "description": " don't perform any replica-averaging", "multiple": 0, "actionlink": "none", "default": "off"},
       "REWEIGHT" : { "type": "flag", "description": " simple REWEIGHT using the ARG as energy", "multiple": 0, "actionlink": "none", "default": "off"},
       "AVERAGING" : { "type": "optional", "description": "Stride for calculation of averaged weights and sigma_mean", "multiple": 0, "actionlink": "none"},
       "NOISETYPE" : { "type": "compulsory", "description": " functional form of the noise (GAUSS,MGAUSS,OUTLIERS,MOUTLIERS,GENERIC)", "multiple": 0, "actionlink": "none", "default": "MGAUSS"},
       "LIKELIHOOD" : { "type": "compulsory", "description": " the likelihood for the GENERIC metainference model, GAUSS or LOGN", "multiple": 0, "actionlink": "none", "default": "GAUSS"},
       "DFTILDE" : { "type": "compulsory", "description": " fraction of sigma_mean used to evolve ftilde", "multiple": 0, "actionlink": "none", "default": "0.1"},
       "SCALEDATA" : { "type": "flag", "description": " Set to TRUE if you want to sample a scaling factor common to all values and replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALE0" : { "type": "compulsory", "description": " initial value of the scaling factor", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SCALE_PRIOR" : { "type": "compulsory", "description": " either FLAT or GAUSSIAN", "multiple": 0, "actionlink": "none", "default": "FLAT"},
       "SCALE_MIN" : { "type": "optional", "description": "minimum value of the scaling factor", "multiple": 0, "actionlink": "none"},
       "SCALE_MAX" : { "type": "optional", "description": "maximum value of the scaling factor", "multiple": 0, "actionlink": "none"},
       "DSCALE" : { "type": "optional", "description": "maximum MC move of the scaling factor", "multiple": 0, "actionlink": "none"},
       "ADDOFFSET" : { "type": "flag", "description": " Set to TRUE if you want to sample an offset common to all values and replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "OFFSET0" : { "type": "compulsory", "description": " initial value of the offset", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "OFFSET_PRIOR" : { "type": "compulsory", "description": " either FLAT or GAUSSIAN", "multiple": 0, "actionlink": "none", "default": "FLAT"},
       "OFFSET_MIN" : { "type": "optional", "description": "minimum value of the offset", "multiple": 0, "actionlink": "none"},
       "OFFSET_MAX" : { "type": "optional", "description": "maximum value of the offset", "multiple": 0, "actionlink": "none"},
       "DOFFSET" : { "type": "optional", "description": "maximum MC move of the offset", "multiple": 0, "actionlink": "none"},
       "REGRES_ZERO" : { "type": "optional", "description": "stride for regression with zero offset", "multiple": 0, "actionlink": "none"},
       "SIGMA0" : { "type": "compulsory", "description": " initial value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SIGMA_MIN" : { "type": "compulsory", "description": " minimum value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "SIGMA_MAX" : { "type": "compulsory", "description": " maximum value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "10."},
       "DSIGMA" : { "type": "optional", "description": "maximum MC move of the uncertainty parameter", "multiple": 0, "actionlink": "none"},
       "OPTSIGMAMEAN" : { "type": "compulsory", "description": " Set to NONE/SEM to manually set sigma mean, or to estimate it on the fly", "multiple": 0, "actionlink": "none", "default": "NONE"},
       "SIGMA_MEAN0" : { "type": "optional", "description": "starting value for the uncertainty in the mean estimate", "multiple": 0, "actionlink": "none"},
       "SIGMA_MAX_STEPS" : { "type": "optional", "description": "Number of steps used to optimise SIGMA_MAX, before that the SIGMA_MAX value is used", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "the system temperature - this is only needed if code doesn't pass the temperature to plumed", "multiple": 0, "actionlink": "none"},
       "MC_STEPS" : { "type": "optional", "description": "number of MC steps", "multiple": 0, "actionlink": "none"},
       "MC_CHUNKSIZE" : { "type": "optional", "description": "MC chunksize", "multiple": 0, "actionlink": "none"},
       "STATUS_FILE" : { "type": "optional", "description": "write a file with all the data useful for restart/continuation of Metainference", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "optional", "description": "specify format for HILLS files (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "WRITE_STRIDE" : { "type": "compulsory", "description": " write the status to a file every N steps, this can be used for restart/continuation", "multiple": 0, "actionlink": "none", "default": "10000"},
       "SELECTOR" : { "type": "optional", "description": "name of selector", "multiple": 0, "actionlink": "none"},
       "NSELECT" : { "type": "optional", "description": "range of values for selector [0, N-1]", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " Ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "SERIAL" : { "type": "flag", "description": " Perform the calculation in serial - for debug purpose", "multiple": 0, "actionlink": "none", "default": "off"},
       "DEVICEID" : { "type": "compulsory", "description": " Identifier of the GPU to be used", "multiple": 0, "actionlink": "none", "default": "-1"},
       "GPU" : { "type": "flag", "description": " Calculate SAXS using ARRAYFIRE on an accelerator device", "multiple": 0, "actionlink": "none", "default": "off"},
       "ABSOLUTE" : { "type": "flag", "description": " Absolute intensity: the intensities for each q-value are not normalised for the intensity at q=0", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMISTIC" : { "type": "flag", "description": " Calculate SAXS for an atomistic model", "multiple": 0, "actionlink": "none", "default": "off"},
       "MARTINI" : { "type": "flag", "description": " Calculate SAXS for a Martini model", "multiple": 0, "actionlink": "none", "default": "off"},
       "ONEBEAD" : { "type": "flag", "description": " calculate SAXS for a single bead model", "multiple": 0, "actionlink": "none", "default": "off"},
       "TEMPLATE" : { "type": "compulsory", "description": " A PDB file is required for ONEBEAD mapping", "multiple": 0, "actionlink": "none", "default": "template.pdb"},
       "ATOMS" : { "type": "atoms", "description": "The atoms to be included in the calculation, e", "multiple": 1, "actionlink": "none"},
       "QVALUE" : { "type": "optional", "description": "Selected scattering lengths in inverse angstroms are given as QVALUE1, QVALUE2, ", "multiple": 1, "actionlink": "none"},
       "PARAMETERS" : { "type": "optional", "description": "Used parameter Keywords like PARAMETERS1, PARAMETERS2", "multiple": 1, "actionlink": "none"},
       "PARAMETERSFILE" : { "type": "optional", "description": "Read the PARAMETERS from a file", "multiple": 0, "actionlink": "none"},
       "DEUTER_CONC" : { "type": "compulsory", "description": " Fraction of deuterated solvent", "multiple": 0, "actionlink": "none", "default": "0."},
       "SOLVDENS" : { "type": "compulsory", "description": " Density of the solvent to be used for the correction of atomistic form factors", "multiple": 0, "actionlink": "none", "default": "0.334"},
       "SOLVATION_CORRECTION" : { "type": "compulsory", "description": " Solvation layer electron density correction (ONEBEAD only)", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "SASA_CUTOFF" : { "type": "compulsory", "description": " SASA value to consider a residue as exposed to the solvent (ONEBEAD only)", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "EXPINT" : { "type": "optional", "description": "Add an experimental value for each q value", "multiple": 1, "actionlink": "none"},
       "SIGMARES" : { "type": "optional", "description": "Variance of Gaussian distribution describing the deviation in the scattering angle for each q value", "multiple": 1, "actionlink": "none"},
       "N" : { "type": "compulsory", "description": " Number of points in the resolution function integral", "multiple": 0, "actionlink": "none", "default": "10"},
       "SOLVATION_STRIDE" : { "type": "compulsory", "description": " Number of steps between every new residues solvation estimation via LCPO (ONEBEAD only)", "multiple": 0, "actionlink": "none", "default": "10"},
       "SCALE_EXPINT" : { "type": "compulsory", "description": " Scaling value for experimental data normalization", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "output" : {
         "score" : {
           "flag": "default",
           "type": "scalar",
           "description": "the Metainference score"
         },
         "sigma" : {
           "flag": "default",
           "type": "scalar",
           "description": "uncertainty parameter"
         },
         "sigmaMean" : {
           "flag": "default",
           "type": "scalar",
           "description": "uncertainty in the mean estimate"
         },
         "neff" : {
           "flag": "default",
           "type": "scalar",
           "description": "effective number of replicas"
         },
         "acceptSigma" : {
           "flag": "default",
           "type": "scalar",
           "description": "MC acceptance for sigma values"
         },
         "acceptScale" : {
           "flag": "SCALEDATA",
           "type": "scalar",
           "description": "MC acceptance for scale value"
         },
         "acceptFT" : {
           "flag": "GENERIC",
           "type": "scalar",
           "description": "MC acceptance for general metainference f tilde value"
         },
         "weight" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "weights of the weighted average"
         },
         "biasDer" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "derivatives with respect to the bias"
         },
         "scale" : {
           "flag": "SCALEDATA",
           "type": "scalar",
           "description": "scale parameter"
         },
         "offset" : {
           "flag": "ADDOFFSET",
           "type": "scalar",
           "description": "offset parameter"
         },
         "ftilde" : {
           "flag": "GENERIC",
           "type": "scalar",
           "description": "ensemble average estimator"
         },
         "q" : {
           "flag": "default",
           "type": "scalar",
           "description": "The # SAXS of q"
         },
         "exp" : {
           "flag": "EXPINT",
           "type": "scalar",
           "description": "The # experimental intensity"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - The atoms to be included in the calculation, e.g. the whole \n                          protein. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following arguments are compulsory: \n\n              NOISETYPE - ( default=MGAUSS ) functional form of the noise \n                          (GAUSS,MGAUSS,OUTLIERS,MOUTLIERS,GENERIC) \n             LIKELIHOOD - ( default=GAUSS ) the likelihood for the GENERIC \n                          metainference model, GAUSS or LOGN \n                DFTILDE - ( default=0.1 ) fraction of sigma_mean used to evolve \n                          ftilde \n                 SCALE0 - ( default=1.0 ) initial value of the scaling factor \n            SCALE_PRIOR - ( default=FLAT ) either FLAT or GAUSSIAN \n                OFFSET0 - ( default=0.0 ) initial value of the offset \n           OFFSET_PRIOR - ( default=FLAT ) either FLAT or GAUSSIAN \n                 SIGMA0 - ( default=1.0 ) initial value of the uncertainty parameter \n              SIGMA_MIN - ( default=0.0 ) minimum value of the uncertainty parameter \n              SIGMA_MAX - ( default=10. ) maximum value of the uncertainty parameter \n           OPTSIGMAMEAN - ( default=NONE ) Set to NONE/SEM to manually set sigma \n                          mean, or to estimate it on the fly \n           WRITE_STRIDE - ( default=10000 ) write the status to a file every N steps, \n                          this can be used for restart/continuation \n               DEVICEID - ( default=-1 ) Identifier of the GPU to be used \n               TEMPLATE - ( default=template.pdb ) A PDB file is required for ONEBEAD \n                          mapping \n            DEUTER_CONC - ( default=0. ) Fraction of deuterated solvent \n               SOLVDENS - ( default=0.334 ) Density of the solvent to be used for the \n                          correction of atomistic form factors \n   SOLVATION_CORRECTION - ( default=0.0 ) Solvation layer electron density correction \n                          (ONEBEAD only) \n            SASA_CUTOFF - ( default=1.0 ) SASA value to consider a residue as exposed \n                          to the solvent (ONEBEAD only) \n                      N - ( default=10 ) Number of points in the resolution function \n                          integral \n       SOLVATION_STRIDE - ( default=10 ) Number of steps between every new residues \n                          solvation estimation via LCPO (ONEBEAD only) \n           SCALE_EXPINT - ( default=1.0 ) Scaling value for experimental data \n                          normalization \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                DOSCORE - ( default=off ) activate metainference \n             NOENSEMBLE - ( default=off ) don't perform any replica-averaging \n               REWEIGHT - ( default=off ) simple REWEIGHT using the ARG as energy \n              SCALEDATA - ( default=off ) Set to TRUE if you want to sample a scaling \n                          factor common to all values and replicas \n              ADDOFFSET - ( default=off ) Set to TRUE if you want to sample an offset \n                          common to all values and replicas \n                  NOPBC - ( default=off ) Ignore the periodic boundary conditions \n                          when calculating distances \n                 SERIAL - ( default=off ) Perform the calculation in serial - for \n                          debug purpose \n                    GPU - ( default=off ) Calculate SAXS using ARRAYFIRE on an \n                          accelerator device \n               ABSOLUTE - ( default=off ) Absolute intensity: the intensities for \n                          each q-value are not normalised for the intensity at q=0. \n              ATOMISTIC - ( default=off ) Calculate SAXS for an atomistic model \n                MARTINI - ( default=off ) Calculate SAXS for a Martini model \n                ONEBEAD - ( default=off ) calculate SAXS for a single bead model \n                    ARG - the labels of the values from which the function is \n                          calculated \n              AVERAGING - Stride for calculation of averaged weights and sigma_mean \n              SCALE_MIN - minimum value of the scaling factor \n              SCALE_MAX - maximum value of the scaling factor \n                 DSCALE - maximum MC move of the scaling factor \n             OFFSET_MIN - minimum value of the offset \n             OFFSET_MAX - maximum value of the offset \n                DOFFSET - maximum MC move of the offset \n            REGRES_ZERO - stride for regression with zero offset \n                 DSIGMA - maximum MC move of the uncertainty parameter \n            SIGMA_MEAN0 - starting value for the uncertainty in the mean estimate \n        SIGMA_MAX_STEPS - Number of steps used to optimise SIGMA_MAX, before that the \n                          SIGMA_MAX value is used \n                   TEMP - the system temperature - this is only needed if code \n                          doesn't pass the temperature to plumed \n               MC_STEPS - number of MC steps \n           MC_CHUNKSIZE - MC chunksize \n            STATUS_FILE - write a file with all the data useful for \n                          restart/continuation of Metainference \n                    FMT - specify format for HILLS files (useful for decrease the \n                          number of digits in regtests) \n               SELECTOR - name of selector \n                NSELECT - range of values for selector [0, N-1] \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n                 QVALUE - Selected scattering lengths in inverse angstroms are given \n                          as QVALUE1, QVALUE2, .... You can use multiple instances of \n                          this keyword i.e. QVALUE1, QVALUE2, QVALUE3... \n             PARAMETERS - Used parameter Keywords like PARAMETERS1, PARAMETERS2. \n         PARAMETERSFILE - Read the PARAMETERS from a file \n                 EXPINT - Add an experimental value for each q value. You can use \n                          multiple instances of this keyword i.e. EXPINT1, EXPINT2, EXPINT3... \n               SIGMARES - Variance of Gaussian distribution describing the deviation \n                          in the scattering angle for each q value. You can use multiple \n                          instances of this keyword i.e. SIGMARES1, SIGMARES2, SIGMARES3... \n\n"
  },
  "SASA_HASEL": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SASA_HASEL",
    "description" : "Calculates the solvent accessible surface area (SASA) of a protein molecule, or other properties related to it.",
    "module" : "sasa",
    "displayname" : "SASA_HASEL",
     "dois" : ["10.1016/0898-5529(88)90015-2", "10.1021/acs.jpcb.1c01694", "10.1021/acs.jpcb.2c00889", "10.1021/acs.jpcb.1c04398", "10.1002/(SICI)1096-987X(19990130)20:2<217::AID-JCC4>3.0.CO;2-A"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the group of atoms that you are calculating the SASA for", "multiple": 1, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " The type of calculation you want to perform", "multiple": 0, "actionlink": "none", "default": "TOTAL"},
       "NL_STRIDE" : { "type": "compulsory", "description": "The frequency with which the neighbor list for the calculation of SASA is updated", "multiple": 0, "actionlink": "none"},
       "DELTAGFILE" : { "type": "optional", "description": "a file containing the free energy of transfer values for backbone and sidechains atoms", "multiple": 0, "actionlink": "none"},
       "APPROACH" : { "type": "optional", "description": "either approach 2 or 3", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the solvent accessible surface area (SASA) of the molecule"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the group of atoms that you are calculating the SASA for. \n                          For more information on how to specify lists of atoms see \ref \n                          Group \n\nThe following arguments are compulsory: \n\n                   TYPE - ( default=TOTAL ) The type of calculation you want to \n                          perform. Can be TOTAL or TRANSFER \n              NL_STRIDE - The frequency with which the neighbor list for the \n                          calculation of SASA is updated. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n             DELTAGFILE - a file containing the free energy of transfer values for \n                          backbone and sidechains atoms. Necessary only if TYPE = TRANSFER. A \n                          Python script for the computation of free energy of transfer \n                          values to describe the effect of osmolyte concentration, \n                          temperature and pressure is freely available at \n                          https://github.com/andrea-arsiccio/DeltaG-calculation. The script automatically outputs a DeltaG.dat file \n                          compatible with this SASA module. If TYPE = TRANSFER and no DELTAGFILE \n                          is provided, the free energy values are those describing the \n                          effect of temperature, and are computed using the temperature \n                          value passed by the MD engine \n               APPROACH - either approach 2 or 3. Necessary only if TYPE = TRANSFER \n                          and no DELTAGFILE is provided. If TYPE = TRANSFER and no \n                          DELTAGFILE is provided, the free energy values are those describing \n                          the effect of temperature, and the program must know if \n                          approach 2 or 3 (as described in Arsiccio and Shea, Protein Cold \n                          Denaturation in Implicit Solvent Simulations: A Transfer Free Energy \n                          Approach, J. Phys. Chem. B, 2021) needs to be used to compute them \n\n"
  },
  "SASA_LCPO": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SASA_LCPO",
    "description" : "Calculates the solvent accessible surface area (SASA) of a protein molecule, or other properties related to it.",
    "module" : "sasa",
    "displayname" : "SASA_LCPO",
     "dois" : ["10.1002/(SICI)1096-987X(19990130)20:2<217::AID-JCC4>3.0.CO;2-A", "10.1021/acs.jpcb.1c01694", "10.1021/acs.jpcb.2c00889", "10.1021/acs.jpcb.1c04398", "10.1016/0898-5529(88)90015-2"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the group of atoms that you are calculating the SASA for", "multiple": 1, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " The type of calculation you want to perform", "multiple": 0, "actionlink": "none", "default": "TOTAL"},
       "NL_STRIDE" : { "type": "compulsory", "description": "The frequency with which the neighbor list is updated", "multiple": 0, "actionlink": "none"},
       "DELTAGFILE" : { "type": "optional", "description": "a file containing the free energy values for backbone and sidechains", "multiple": 0, "actionlink": "none"},
       "APPROACH" : { "type": "optional", "description": "either approach 2 or 3", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the solvent accessible surface area (SASA) of the molecule"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the group of atoms that you are calculating the SASA for. \n                          For more information on how to specify lists of atoms see \ref \n                          Group \n\nThe following arguments are compulsory: \n\n                   TYPE - ( default=TOTAL ) The type of calculation you want to \n                          perform. Can be TOTAL or TRANSFER \n              NL_STRIDE - The frequency with which the neighbor list is updated. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n             DELTAGFILE - a file containing the free energy values for backbone and \n                          sidechains. Necessary only if TYPE = TRANSFER. A Python script for the \n                          computation of free energy of transfer values to describe the effect of \n                          osmolyte concentration, temperature and pressure is freely available \n                          at https://github.com/andrea-arsiccio/DeltaG-calculation. The \n                          script automatically outputs a DeltaG.dat file compatible with \n                          this SASA module. If TYPE = TRANSFER and no DELTAGFILE is \n                          provided, the free energy values are those describing the effect of \n                          temperature, and are computed using the temperature value passed by the \n                          MD engine \n               APPROACH - either approach 2 or 3. Necessary only if TYPE = TRANSFER \n                          and no DELTAGFILE is provided. If TYPE = TRANSFER and no \n                          DELTAGFILE is provided, the free energy values are those describing \n                          the effect of temperature, and the program must know if \n                          approach 2 or 3 (as described in Arsiccio and Shea, Protein Cold \n                          Denaturation in Implicit Solvent Simulations: A Transfer Free Energy \n                          Approach, J. Phys. Chem. B, 2021) needs to be used to compute them \n\n"
  },
  "SAXS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SAXS",
    "description" : "Calculates SAXS intensity.",
    "module" : "isdb",
    "displayname" : "SAXS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "DOSCORE" : { "type": "flag", "description": " activate metainference", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOENSEMBLE" : { "type": "flag", "description": " don't perform any replica-averaging", "multiple": 0, "actionlink": "none", "default": "off"},
       "REWEIGHT" : { "type": "flag", "description": " simple REWEIGHT using the ARG as energy", "multiple": 0, "actionlink": "none", "default": "off"},
       "AVERAGING" : { "type": "optional", "description": "Stride for calculation of averaged weights and sigma_mean", "multiple": 0, "actionlink": "none"},
       "NOISETYPE" : { "type": "compulsory", "description": " functional form of the noise (GAUSS,MGAUSS,OUTLIERS,MOUTLIERS,GENERIC)", "multiple": 0, "actionlink": "none", "default": "MGAUSS"},
       "LIKELIHOOD" : { "type": "compulsory", "description": " the likelihood for the GENERIC metainference model, GAUSS or LOGN", "multiple": 0, "actionlink": "none", "default": "GAUSS"},
       "DFTILDE" : { "type": "compulsory", "description": " fraction of sigma_mean used to evolve ftilde", "multiple": 0, "actionlink": "none", "default": "0.1"},
       "SCALEDATA" : { "type": "flag", "description": " Set to TRUE if you want to sample a scaling factor common to all values and replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALE0" : { "type": "compulsory", "description": " initial value of the scaling factor", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SCALE_PRIOR" : { "type": "compulsory", "description": " either FLAT or GAUSSIAN", "multiple": 0, "actionlink": "none", "default": "FLAT"},
       "SCALE_MIN" : { "type": "optional", "description": "minimum value of the scaling factor", "multiple": 0, "actionlink": "none"},
       "SCALE_MAX" : { "type": "optional", "description": "maximum value of the scaling factor", "multiple": 0, "actionlink": "none"},
       "DSCALE" : { "type": "optional", "description": "maximum MC move of the scaling factor", "multiple": 0, "actionlink": "none"},
       "ADDOFFSET" : { "type": "flag", "description": " Set to TRUE if you want to sample an offset common to all values and replicas", "multiple": 0, "actionlink": "none", "default": "off"},
       "OFFSET0" : { "type": "compulsory", "description": " initial value of the offset", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "OFFSET_PRIOR" : { "type": "compulsory", "description": " either FLAT or GAUSSIAN", "multiple": 0, "actionlink": "none", "default": "FLAT"},
       "OFFSET_MIN" : { "type": "optional", "description": "minimum value of the offset", "multiple": 0, "actionlink": "none"},
       "OFFSET_MAX" : { "type": "optional", "description": "maximum value of the offset", "multiple": 0, "actionlink": "none"},
       "DOFFSET" : { "type": "optional", "description": "maximum MC move of the offset", "multiple": 0, "actionlink": "none"},
       "REGRES_ZERO" : { "type": "optional", "description": "stride for regression with zero offset", "multiple": 0, "actionlink": "none"},
       "SIGMA0" : { "type": "compulsory", "description": " initial value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "SIGMA_MIN" : { "type": "compulsory", "description": " minimum value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "SIGMA_MAX" : { "type": "compulsory", "description": " maximum value of the uncertainty parameter", "multiple": 0, "actionlink": "none", "default": "10."},
       "DSIGMA" : { "type": "optional", "description": "maximum MC move of the uncertainty parameter", "multiple": 0, "actionlink": "none"},
       "OPTSIGMAMEAN" : { "type": "compulsory", "description": " Set to NONE/SEM to manually set sigma mean, or to estimate it on the fly", "multiple": 0, "actionlink": "none", "default": "NONE"},
       "SIGMA_MEAN0" : { "type": "optional", "description": "starting value for the uncertainty in the mean estimate", "multiple": 0, "actionlink": "none"},
       "SIGMA_MAX_STEPS" : { "type": "optional", "description": "Number of steps used to optimise SIGMA_MAX, before that the SIGMA_MAX value is used", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "the system temperature - this is only needed if code doesn't pass the temperature to plumed", "multiple": 0, "actionlink": "none"},
       "MC_STEPS" : { "type": "optional", "description": "number of MC steps", "multiple": 0, "actionlink": "none"},
       "MC_CHUNKSIZE" : { "type": "optional", "description": "MC chunksize", "multiple": 0, "actionlink": "none"},
       "STATUS_FILE" : { "type": "optional", "description": "write a file with all the data useful for restart/continuation of Metainference", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "optional", "description": "specify format for HILLS files (useful for decrease the number of digits in regtests)", "multiple": 0, "actionlink": "none"},
       "WRITE_STRIDE" : { "type": "compulsory", "description": " write the status to a file every N steps, this can be used for restart/continuation", "multiple": 0, "actionlink": "none", "default": "10000"},
       "SELECTOR" : { "type": "optional", "description": "name of selector", "multiple": 0, "actionlink": "none"},
       "NSELECT" : { "type": "optional", "description": "range of values for selector [0, N-1]", "multiple": 0, "actionlink": "none"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " Ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "SERIAL" : { "type": "flag", "description": " Perform the calculation in serial - for debug purpose", "multiple": 0, "actionlink": "none", "default": "off"},
       "DEVICEID" : { "type": "compulsory", "description": " Identifier of the GPU to be used", "multiple": 0, "actionlink": "none", "default": "-1"},
       "GPU" : { "type": "flag", "description": " Calculate SAXS using ARRAYFIRE on an accelerator device", "multiple": 0, "actionlink": "none", "default": "off"},
       "ABSOLUTE" : { "type": "flag", "description": " Absolute intensity: the intensities for each q-value are not normalised for the intensity at q=0", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMISTIC" : { "type": "flag", "description": " Calculate SAXS for an atomistic model", "multiple": 0, "actionlink": "none", "default": "off"},
       "MARTINI" : { "type": "flag", "description": " Calculate SAXS for a Martini model", "multiple": 0, "actionlink": "none", "default": "off"},
       "ONEBEAD" : { "type": "flag", "description": " calculate SAXS for a single bead model", "multiple": 0, "actionlink": "none", "default": "off"},
       "TEMPLATE" : { "type": "compulsory", "description": " A PDB file is required for ONEBEAD mapping", "multiple": 0, "actionlink": "none", "default": "template.pdb"},
       "ATOMS" : { "type": "atoms", "description": "The atoms to be included in the calculation, e", "multiple": 1, "actionlink": "none"},
       "QVALUE" : { "type": "optional", "description": "Selected scattering lengths in inverse angstroms are given as QVALUE1, QVALUE2, ", "multiple": 1, "actionlink": "none"},
       "PARAMETERS" : { "type": "optional", "description": "Used parameter Keywords like PARAMETERS1, PARAMETERS2", "multiple": 1, "actionlink": "none"},
       "PARAMETERSFILE" : { "type": "optional", "description": "Read the PARAMETERS from a file", "multiple": 0, "actionlink": "none"},
       "DEUTER_CONC" : { "type": "compulsory", "description": " Fraction of deuterated solvent", "multiple": 0, "actionlink": "none", "default": "0."},
       "SOLVDENS" : { "type": "compulsory", "description": " Density of the solvent to be used for the correction of atomistic form factors", "multiple": 0, "actionlink": "none", "default": "0.334"},
       "SOLVATION_CORRECTION" : { "type": "compulsory", "description": " Solvation layer electron density correction (ONEBEAD only)", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "SASA_CUTOFF" : { "type": "compulsory", "description": " SASA value to consider a residue as exposed to the solvent (ONEBEAD only)", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "EXPINT" : { "type": "optional", "description": "Add an experimental value for each q value", "multiple": 1, "actionlink": "none"},
       "SIGMARES" : { "type": "optional", "description": "Variance of Gaussian distribution describing the deviation in the scattering angle for each q value", "multiple": 1, "actionlink": "none"},
       "N" : { "type": "compulsory", "description": " Number of points in the resolution function integral", "multiple": 0, "actionlink": "none", "default": "10"},
       "SOLVATION_STRIDE" : { "type": "compulsory", "description": " Number of steps between every new residues solvation estimation via LCPO (ONEBEAD only)", "multiple": 0, "actionlink": "none", "default": "10"},
       "SCALE_EXPINT" : { "type": "compulsory", "description": " Scaling value for experimental data normalization", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "output" : {
         "score" : {
           "flag": "default",
           "type": "scalar",
           "description": "the Metainference score"
         },
         "sigma" : {
           "flag": "default",
           "type": "scalar",
           "description": "uncertainty parameter"
         },
         "sigmaMean" : {
           "flag": "default",
           "type": "scalar",
           "description": "uncertainty in the mean estimate"
         },
         "neff" : {
           "flag": "default",
           "type": "scalar",
           "description": "effective number of replicas"
         },
         "acceptSigma" : {
           "flag": "default",
           "type": "scalar",
           "description": "MC acceptance for sigma values"
         },
         "acceptScale" : {
           "flag": "SCALEDATA",
           "type": "scalar",
           "description": "MC acceptance for scale value"
         },
         "acceptFT" : {
           "flag": "GENERIC",
           "type": "scalar",
           "description": "MC acceptance for general metainference f tilde value"
         },
         "weight" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "weights of the weighted average"
         },
         "biasDer" : {
           "flag": "REWEIGHT",
           "type": "scalar",
           "description": "derivatives with respect to the bias"
         },
         "scale" : {
           "flag": "SCALEDATA",
           "type": "scalar",
           "description": "scale parameter"
         },
         "offset" : {
           "flag": "ADDOFFSET",
           "type": "scalar",
           "description": "offset parameter"
         },
         "ftilde" : {
           "flag": "GENERIC",
           "type": "scalar",
           "description": "ensemble average estimator"
         },
         "q" : {
           "flag": "default",
           "type": "scalar",
           "description": "The # SAXS of q"
         },
         "exp" : {
           "flag": "EXPINT",
           "type": "scalar",
           "description": "The # experimental intensity"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - The atoms to be included in the calculation, e.g. the whole \n                          protein. For more information on how to specify lists of atoms see \n                          \ref Group \n\nThe following arguments are compulsory: \n\n              NOISETYPE - ( default=MGAUSS ) functional form of the noise \n                          (GAUSS,MGAUSS,OUTLIERS,MOUTLIERS,GENERIC) \n             LIKELIHOOD - ( default=GAUSS ) the likelihood for the GENERIC \n                          metainference model, GAUSS or LOGN \n                DFTILDE - ( default=0.1 ) fraction of sigma_mean used to evolve \n                          ftilde \n                 SCALE0 - ( default=1.0 ) initial value of the scaling factor \n            SCALE_PRIOR - ( default=FLAT ) either FLAT or GAUSSIAN \n                OFFSET0 - ( default=0.0 ) initial value of the offset \n           OFFSET_PRIOR - ( default=FLAT ) either FLAT or GAUSSIAN \n                 SIGMA0 - ( default=1.0 ) initial value of the uncertainty parameter \n              SIGMA_MIN - ( default=0.0 ) minimum value of the uncertainty parameter \n              SIGMA_MAX - ( default=10. ) maximum value of the uncertainty parameter \n           OPTSIGMAMEAN - ( default=NONE ) Set to NONE/SEM to manually set sigma \n                          mean, or to estimate it on the fly \n           WRITE_STRIDE - ( default=10000 ) write the status to a file every N steps, \n                          this can be used for restart/continuation \n               DEVICEID - ( default=-1 ) Identifier of the GPU to be used \n               TEMPLATE - ( default=template.pdb ) A PDB file is required for ONEBEAD \n                          mapping \n            DEUTER_CONC - ( default=0. ) Fraction of deuterated solvent \n               SOLVDENS - ( default=0.334 ) Density of the solvent to be used for the \n                          correction of atomistic form factors \n   SOLVATION_CORRECTION - ( default=0.0 ) Solvation layer electron density correction \n                          (ONEBEAD only) \n            SASA_CUTOFF - ( default=1.0 ) SASA value to consider a residue as exposed \n                          to the solvent (ONEBEAD only) \n                      N - ( default=10 ) Number of points in the resolution function \n                          integral \n       SOLVATION_STRIDE - ( default=10 ) Number of steps between every new residues \n                          solvation estimation via LCPO (ONEBEAD only) \n           SCALE_EXPINT - ( default=1.0 ) Scaling value for experimental data \n                          normalization \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                DOSCORE - ( default=off ) activate metainference \n             NOENSEMBLE - ( default=off ) don't perform any replica-averaging \n               REWEIGHT - ( default=off ) simple REWEIGHT using the ARG as energy \n              SCALEDATA - ( default=off ) Set to TRUE if you want to sample a scaling \n                          factor common to all values and replicas \n              ADDOFFSET - ( default=off ) Set to TRUE if you want to sample an offset \n                          common to all values and replicas \n                  NOPBC - ( default=off ) Ignore the periodic boundary conditions \n                          when calculating distances \n                 SERIAL - ( default=off ) Perform the calculation in serial - for \n                          debug purpose \n                    GPU - ( default=off ) Calculate SAXS using ARRAYFIRE on an \n                          accelerator device \n               ABSOLUTE - ( default=off ) Absolute intensity: the intensities for \n                          each q-value are not normalised for the intensity at q=0. \n              ATOMISTIC - ( default=off ) Calculate SAXS for an atomistic model \n                MARTINI - ( default=off ) Calculate SAXS for a Martini model \n                ONEBEAD - ( default=off ) calculate SAXS for a single bead model \n                    ARG - the labels of the values from which the function is \n                          calculated \n              AVERAGING - Stride for calculation of averaged weights and sigma_mean \n              SCALE_MIN - minimum value of the scaling factor \n              SCALE_MAX - maximum value of the scaling factor \n                 DSCALE - maximum MC move of the scaling factor \n             OFFSET_MIN - minimum value of the offset \n             OFFSET_MAX - maximum value of the offset \n                DOFFSET - maximum MC move of the offset \n            REGRES_ZERO - stride for regression with zero offset \n                 DSIGMA - maximum MC move of the uncertainty parameter \n            SIGMA_MEAN0 - starting value for the uncertainty in the mean estimate \n        SIGMA_MAX_STEPS - Number of steps used to optimise SIGMA_MAX, before that the \n                          SIGMA_MAX value is used \n                   TEMP - the system temperature - this is only needed if code \n                          doesn't pass the temperature to plumed \n               MC_STEPS - number of MC steps \n           MC_CHUNKSIZE - MC chunksize \n            STATUS_FILE - write a file with all the data useful for \n                          restart/continuation of Metainference \n                    FMT - specify format for HILLS files (useful for decrease the \n                          number of digits in regtests) \n               SELECTOR - name of selector \n                NSELECT - range of values for selector [0, N-1] \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n                 QVALUE - Selected scattering lengths in inverse angstroms are given \n                          as QVALUE1, QVALUE2, .... You can use multiple instances of \n                          this keyword i.e. QVALUE1, QVALUE2, QVALUE3... \n             PARAMETERS - Used parameter Keywords like PARAMETERS1, PARAMETERS2. \n         PARAMETERSFILE - Read the PARAMETERS from a file \n                 EXPINT - Add an experimental value for each q value. You can use \n                          multiple instances of this keyword i.e. EXPINT1, EXPINT2, EXPINT3... \n               SIGMARES - Variance of Gaussian distribution describing the deviation \n                          in the scattering angle for each q value. You can use multiple \n                          instances of this keyword i.e. SIGMARES1, SIGMARES2, SIGMARES3... \n\n"
  },
  "SECONDARY_STRUCTURE_DRMSD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SECONDARY_STRUCTURE_DRMSD",
    "description" : "Calclulate the DRMSD between segments of a protein and a reference structure of interest",
    "module" : "secondarystructure",
    "displayname" : "SECONDARY_STRUCTURE_DRMSD",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions", "multiple": 0, "actionlink": "none", "default": "off"},
       "MASK" : { "type": "optional", "description": "a vector which is used to determine which elements of the secondary structure variable should be computed", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "RESIDUES" : { "type": "atoms", "description": "this command is used to specify the set of residues that could conceivably form part of the secondary structure", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "this is the full list of atoms that we are investigating", "multiple": 1, "actionlink": "none"},
       "SEGMENT" : { "type": "optional", "description": "this is the lists of atoms in the segment that are being considered", "multiple": 1, "actionlink": "none"},
       "BONDLENGTH" : { "type": "compulsory", "description": " the length to use for bonds", "multiple": 0, "actionlink": "none", "default": "0.17"},
       "STRUCTURE" : { "type": "optional", "description": "the reference structure", "multiple": 1, "actionlink": "none"},
       "VERBOSE" : { "type": "flag", "description": " write a more detailed output", "multiple": 0, "actionlink": "none", "default": "off"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of a residue segments that are within a certain target distance of this secondary structure type", "multiple": 0, "actionlink": "none"},
       "R_0" : { "type": "optional", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "8"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "12"},
       "ALIGN_STRANDS" : { "type": "flag", "description": " ensure that the two halves of a beta sheet are not broken by the periodic boundaries before doing alignment", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "struct" : {
           "flag": "default",
           "type": "scalar",
           "description": "the vectors containing the rmsd distances between the residues and each of the reference structures"
         },
         "lessthan" : {
           "flag": "default",
           "type": "scalar",
           "description": "the number blocks of residues that have an RMSD from the secondary structure that is less than the threshold"
         }
       }
    },
    "needs" : ["SECONDARY_STRUCTURE_RMSD", "SECONDARY_STRUCTURE_DRMSD", "LESS_THAN", "SUM"],
    "help" : "The input trajectory can be in any of the following formats: \n\n               RESIDUES - this command is used to specify the set of residues that \n                          could conceivably form part of the secondary structure. It is \n                          possible to use residues numbers as the various chains and residues \n                          should have been identified else using an instance of the \ref \n                          MOLINFO action. If you wish to use all the residues from all the \n                          chains in your system you can do so by specifying all. \n                          Alternatively, if you wish to use a subset of the residues you can specify \n                          the particular residues you are interested in as a list of \n                          numbers. Please be aware that to form secondary structure elements \n                          your chain must contain at least N residues, where N is \n                          dependent on the particular secondary structure you are interested \n                          in. As such if you define portions of the chain with fewer than \n                          N residues the code will crash. \n                  ATOMS - this is the full list of atoms that we are investigating. \n                          For more information on how to specify lists of atoms see \ref \n                          Group \n\nThe following arguments are compulsory: \n\n             BONDLENGTH - ( default=0.17 ) the length to use for bonds \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                     NN - ( default=8 ) The n parameter of the switching function \n                     MM - ( default=12 ) The m parameter of the switching function \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                VERBOSE - ( default=off ) write a more detailed output \n          ALIGN_STRANDS - ( default=off ) ensure that the two halves of a beta sheet \n                          are not broken by the periodic boundaries before doing \n                          alignment \n                   MASK - a vector which is used to determine which elements of the \n                          secondary structure variable should be computed \n                SEGMENT - this is the lists of atoms in the segment that are being \n                          considered. You can use multiple instances of this keyword i.e. \n                          SEGMENT1, SEGMENT2, SEGMENT3... \n              STRUCTURE - the reference structure. You can use multiple instances of \n                          this keyword i.e. STRUCTURE1, STRUCTURE2, STRUCTURE3... \n              LESS_THAN - calculate the number of a residue segments that are within \n                          a certain target distance of this secondary structure type. \n                    R_0 - The r_0 parameter of the switching function. \n\n"
  },
  "SECONDARY_STRUCTURE_RMSD": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SECONDARY_STRUCTURE_RMSD",
    "description" : "Calclulate the RMSD between segments of a protein and a reference structure of interest",
    "module" : "secondarystructure",
    "displayname" : "SECONDARY_STRUCTURE_RMSD",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions", "multiple": 0, "actionlink": "none", "default": "off"},
       "MASK" : { "type": "optional", "description": "a vector which is used to determine which elements of the secondary structure variable should be computed", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "RESIDUES" : { "type": "atoms", "description": "this command is used to specify the set of residues that could conceivably form part of the secondary structure", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "this is the full list of atoms that we are investigating", "multiple": 1, "actionlink": "none"},
       "SEGMENT" : { "type": "optional", "description": "this is the lists of atoms in the segment that are being considered", "multiple": 1, "actionlink": "none"},
       "STRUCTURE" : { "type": "optional", "description": "the reference structure", "multiple": 1, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " the manner in which RMSD alignment is performed", "multiple": 0, "actionlink": "none", "default": "DRMSD"},
       "VERBOSE" : { "type": "flag", "description": " write a more detailed output", "multiple": 0, "actionlink": "none", "default": "off"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of a residue segments that are within a certain target distance of this secondary structure type", "multiple": 0, "actionlink": "none"},
       "R_0" : { "type": "optional", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "8"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "12"},
       "ALIGN_STRANDS" : { "type": "flag", "description": " ensure that the two halves of a beta sheet are not broken by the periodic boundaries before doing alignment", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "struct" : {
           "flag": "default",
           "type": "scalar",
           "description": "the vectors containing the rmsd distances between the residues and each of the reference structures"
         },
         "lessthan" : {
           "flag": "default",
           "type": "scalar",
           "description": "the number blocks of residues that have an RMSD from the secondary structure that is less than the threshold"
         }
       }
    },
    "needs" : ["SECONDARY_STRUCTURE_RMSD", "SECONDARY_STRUCTURE_DRMSD", "LESS_THAN", "SUM"],
    "help" : "The input trajectory can be in any of the following formats: \n\n               RESIDUES - this command is used to specify the set of residues that \n                          could conceivably form part of the secondary structure. It is \n                          possible to use residues numbers as the various chains and residues \n                          should have been identified else using an instance of the \ref \n                          MOLINFO action. If you wish to use all the residues from all the \n                          chains in your system you can do so by specifying all. \n                          Alternatively, if you wish to use a subset of the residues you can specify \n                          the particular residues you are interested in as a list of \n                          numbers. Please be aware that to form secondary structure elements \n                          your chain must contain at least N residues, where N is \n                          dependent on the particular secondary structure you are interested \n                          in. As such if you define portions of the chain with fewer than \n                          N residues the code will crash. \n                  ATOMS - this is the full list of atoms that we are investigating. \n                          For more information on how to specify lists of atoms see \ref \n                          Group \n\nThe following arguments are compulsory: \n\n                   TYPE - ( default=DRMSD ) the manner in which RMSD alignment is \n                          performed. Should be OPTIMAL, SIMPLE or DRMSD. For more details on the \n                          OPTIMAL and SIMPLE methods see \ref RMSD. For more details on the \n                          DRMSD method see \ref DRMSD. \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                     NN - ( default=8 ) The n parameter of the switching function \n                     MM - ( default=12 ) The m parameter of the switching function \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                VERBOSE - ( default=off ) write a more detailed output \n          ALIGN_STRANDS - ( default=off ) ensure that the two halves of a beta sheet \n                          are not broken by the periodic boundaries before doing \n                          alignment \n                   MASK - a vector which is used to determine which elements of the \n                          secondary structure variable should be computed \n                SEGMENT - this is the lists of atoms in the segment that are being \n                          considered. You can use multiple instances of this keyword i.e. \n                          SEGMENT1, SEGMENT2, SEGMENT3... \n              STRUCTURE - the reference structure. You can use multiple instances of \n                          this keyword i.e. STRUCTURE1, STRUCTURE2, STRUCTURE3... \n              LESS_THAN - calculate the number of a residue segments that are within \n                          a certain target distance of this secondary structure type. \n                    R_0 - The r_0 parameter of the switching function. \n\n"
  },
  "SELECT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SELECT",
    "description" : "Selects an argument based on the value of a SELECTOR.",
    "module" : "isdb",
    "displayname" : "SELECT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "SELECTOR" : { "type": "compulsory", "description": "name of the variable used to select", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the value of the selected argument"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n               SELECTOR - name of the variable used to select \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n"
  },
  "SELECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SELECTOR",
    "description" : "Defines a variable (of the type double) inside the PLUMED code that can be used and modified by other actions.",
    "module" : "isdb",
    "displayname" : "SELECTOR",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NAME" : { "type": "compulsory", "description": "name of the SELECTOR", "multiple": 0, "actionlink": "none"},
       "VALUE" : { "type": "compulsory", "description": "set (initial) value of the SELECTOR", "multiple": 0, "actionlink": "none"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                   NAME - name of the SELECTOR \n                  VALUE - set (initial) value of the SELECTOR \n"
  },
  "SELECT_COMPONENTS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SELECT_COMPONENTS",
    "description" : "Create a new value to hold a subset of the components that are in a vector or matrix",
    "module" : "valtools",
    "displayname" : "SELECT_COMPONENTS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the value from which we are selecting components", "multiple": 0, "actionlink": "none", "argtype": "vector/matrix"},
       "COMPONENTS" : { "type": "compulsory", "description": "the components in the input value that you woul like to build a new vector from", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "a vector containing the selected components"
         }
       }
    },
    "needs" : ["FLATTEN", "CONSTANT", "SELECT_WITH_MASK"],
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the value from which we are selecting components \n             COMPONENTS - the components in the input value that you woul like to \n                          build a new vector from \n"
  },
  "SELECT_WITH_MASK": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SELECT_WITH_MASK",
    "description" : "Use a mask to select elements of an array",
    "module" : "valtools",
    "displayname" : "SELECT_WITH_MASK",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the label for the value upon which you are going to apply the mask", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "ROW_MASK" : { "type": "optional", "description": "an array with ones in the rows of the matrix that you want to discard", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "COLUMN_MASK" : { "type": "optional", "description": "an array with ones in the columns of the matrix that you want to discard", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "MASK" : { "type": "compulsory", "description": "an array with ones in the components that you want to discard", "multiple": 0, "actionlink": "none", "argtype": "vector/matrix"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector/matrix",
           "description": "a vector/matrix of values that is obtained using a mask to select elements of interest"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label for the value upon which you are going to apply \n                          the mask \n                   MASK - an array with ones in the components that you want to \n                          discard \n               ROW_MASK - an array with ones in the rows of the matrix that you want \n                          to discard \n            COLUMN_MASK - an array with ones in the columns of the matrix that you \n                          want to discard \n\n"
  },
  "SHADOW": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SHADOW",
    "description" : "Communicate atoms positions among replicas and calculate the RMSD with respect to a mother (reference) simulation.",
    "module" : "isdb",
    "displayname" : "SHADOW",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "atoms for which we calculate the shadow RMSD", "multiple": 1, "actionlink": "none"},
       "UPDATE" : { "type": "compulsory", "description": "stride for updating reference coordinates", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "flag", "description": " this is the reference replica", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the value of the shadow RMSD"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - atoms for which we calculate the shadow RMSD. For more \n                          information on how to specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                 UPDATE - stride for updating reference coordinates \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n              REFERENCE - ( default=off ) this is the reference replica \n"
  },
  "SIMPLECUBIC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SIMPLECUBIC",
    "description" : "Calculate whether or not the coordination spheres of atoms are arranged as they would be in a simple cubic structure.",
    "module" : "symfunc",
    "displayname" : "SIMPLECUBIC",
     "dois" : ["10.1021/ct500320c", "10.1103/PhysRevB.81.125416", "10.1103/PhysRevB.92.180102", "10.1063/1.4997180", "10.1063/1.5134461"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated and the atoms that can be in the environments", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "the list of atoms that can be in the environments of each of the atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "the switching function that it used in the construction of the contact matrix", "multiple": 0, "actionlink": "LESS_THAN"},
       "MASK" : { "type": "optional", "description": "the label for a vector that is used to determine which rows of the matrix are computed", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "FUNCTION" : { "type": "compulsory", "description": "the function of the bond vectors that you would like to evaluate", "multiple": 0, "actionlink": "none"},
       "PHI" : { "type": "compulsory", "description": " The Euler rotational angle phi", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "THETA" : { "type": "compulsory", "description": " The Euler rotational angle theta", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "PSI" : { "type": "compulsory", "description": " The Euler rotational angle psi", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "ALPHA" : { "type": "compulsory", "description": " The alpha parameter of the angular function that is used for FCCUBIC", "multiple": 0, "actionlink": "none", "default": "3.0"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the symmetry function for each of the specified atoms"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "GROUP", "FCCUBIC_FUNC", "ONES", "MATRIX_VECTOR_PRODUCT"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - the list of atoms for which the symmetry function is being \n                          calculated and the atoms that can be in the environments \n               SPECIESA - the list of atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESB, \n                          which specifies the atoms that are in the environment. \n               SPECIESB - the list of atoms that can be in the environments of each \n                          of the atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESA, \n                          which specifies the atoms for which the symmetry function is \n                          being calculated. \n\nThe following arguments are compulsory: \n\n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n               FUNCTION - the function of the bond vectors that you would like to \n                          evaluate \n                    PHI - ( default=0.0 ) The Euler rotational angle phi \n                  THETA - ( default=0.0 ) The Euler rotational angle theta \n                    PSI - ( default=0.0 ) The Euler rotational angle psi \n                  ALPHA - ( default=3.0 ) The alpha parameter of the angular function \n                          that is used for FCCUBIC \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                 SWITCH - the switching function that it used in the construction of \n                          the contact matrix \n                   MASK - the label for a vector that is used to determine which rows \n                          of the matrix are computed \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "SIZESHAPE_POSITION_LINEAR_PROJ": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SIZESHAPE_POSITION_LINEAR_PROJ",
    "description" : "Calculates a linear projection in the space of a given reference configurational distribution in size-and-shape space.",
    "module" : "sizeshape",
    "displayname" : "SIZESHAPE_POSITION_LINEAR_PROJ",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "PRECISION" : { "type": "compulsory", "description": "Precision Matrix (inverse of covariance)", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "compulsory", "description": "Coordinates of the reference structure", "multiple": 0, "actionlink": "none"},
       "GROUP" : { "type": "atoms", "description": "Group of atoms being used", "multiple": 1, "actionlink": "none"},
       "COEFFS" : { "type": "compulsory", "description": "Vector of linear coefficients", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " Perform the calculation in serial, for debug purposes only", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the linear projection"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - Group of atoms being used. For more information on how to \n                          specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n              PRECISION - Precision Matrix (inverse of covariance). \n              REFERENCE - Coordinates of the reference structure. \n                 COEFFS - Vector of linear coefficients. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 SERIAL - ( default=off ) Perform the calculation in serial, for \n                          debug purposes only. \n"
  },
  "SIZESHAPE_POSITION_MAHA_DIST": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SIZESHAPE_POSITION_MAHA_DIST",
    "description" : "Calculates Mahalanobis distance of a current configuration from a  given reference configurational distribution in size-and-shape space.",
    "module" : "sizeshape",
    "displayname" : "SIZESHAPE_POSITION_MAHA_DIST",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "PRECISION" : { "type": "compulsory", "description": "Precision Matrix (inverse of covariance)", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "compulsory", "description": "Reference structure", "multiple": 0, "actionlink": "none"},
       "GROUP" : { "type": "atoms", "description": "The group of atoms being used", "multiple": 1, "actionlink": "none"},
       "SQUARED" : { "type": "flag", "description": " Returns the square of distance", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the Mahalanobis distance between the instantaneous configuration and a given reference distribution in size-and-shape space"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - The group of atoms being used. For more information on how \n                          to specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n              PRECISION - Precision Matrix (inverse of covariance) \n              REFERENCE - Reference structure. \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                SQUARED - ( default=off ) Returns the square of distance. \n"
  },
  "SKETCHMAP": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SKETCHMAP",
    "description" : "Construct a sketch map projection of the input data",
    "module" : "dimred",
    "displayname" : "SKETCHMAP",
     "dois" : ["10.1073/pnas.1108486108", "10.1073/pnas.1201152109", "10.1021/ct3010563", "10.1021/ct500950z", "10.1021/acs.jctc.5b00714"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NLOW_DIM" : { "type": "compulsory", "description": "number of low-dimensional coordinates required", "multiple": 0, "actionlink": "none"},
       "WEIGHTS" : { "type": "optional", "description": "a vector containing the weights of the points", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the matrix of high dimensional coordinates that you want to project in the low dimensional space", "multiple": 0, "actionlink": "none"},
       "HIGH_DIM_FUNCTION" : { "type": "compulsory", "description": "the parameters of the switching function in the high dimensional space", "multiple": 0, "actionlink": "none"},
       "LOW_DIM_FUNCTION" : { "type": "compulsory", "description": "the parameters of the switching function in the low dimensional space", "multiple": 0, "actionlink": "none"},
       "CGTOL" : { "type": "compulsory", "description": " The tolerance for the conjugate gradient minimization that finds the projection of the landmarks", "multiple": 0, "actionlink": "none", "default": "1E-6"},
       "MAXITER" : { "type": "compulsory", "description": " maximum number of optimization cycles for optimisation algorithms", "multiple": 0, "actionlink": "none", "default": "1000"},
       "NCYCLES" : { "type": "compulsory", "description": " The number of cycles of pointwise global optimisation that are required", "multiple": 0, "actionlink": "none", "default": "0"},
       "BUFFER" : { "type": "compulsory", "description": " grid extent for search is (max projection - minimum projection) multiplied by this value", "multiple": 0, "actionlink": "none", "default": "1.1"},
       "CGRID_SIZE" : { "type": "compulsory", "description": " number of points to use in each grid direction", "multiple": 0, "actionlink": "none", "default": "10"},
       "FGRID_SIZE" : { "type": "compulsory", "description": " interpolate the grid onto this number of points -- only works in 2D", "multiple": 0, "actionlink": "none", "default": "0"},
       "PROJECT_ALL" : { "type": "flag", "description": " if the input are landmark coordinates then project the out of sample configurations", "multiple": 0, "actionlink": "none", "default": "off"},
       "OS_CGTOL" : { "type": "compulsory", "description": " The tolerance for the conjugate gradient minimization that finds the out of sample projections", "multiple": 0, "actionlink": "none", "default": "1E-6"},
       "USE_SMACOF" : { "type": "flag", "description": " find the projection in the low dimensional space using the SMACOF algorithm", "multiple": 0, "actionlink": "none", "default": "off"},
       "SMACTOL" : { "type": "compulsory", "description": " the tolerance for the smacof algorithm", "multiple": 0, "actionlink": "none", "default": "1E-4"},
       "SMACREG" : { "type": "compulsory", "description": " this is used to ensure that we don't divide by zero when updating weights for SMACOF algorithm", "multiple": 0, "actionlink": "none", "default": "0.001"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "the sketch-map projection of the input points"
         },
         "osample" : {
           "flag": "PROJECT_ALL",
           "type": "matrix",
           "description": "the out-of-sample projections"
         }
       }
    },
    "needs" : ["CLASSICAL_MDS", "MORE_THAN", "SUM", "CUSTOM", "OUTER_PRODUCT", "ARRANGE_POINTS", "PROJECT_POINTS", "VSTACK"],
    "help" : "\nThe following arguments are compulsory: \n\n               NLOW_DIM - number of low-dimensional coordinates required \n                    ARG - the matrix of high dimensional coordinates that you want to \n                          project in the low dimensional space \n      HIGH_DIM_FUNCTION - the parameters of the switching function in the high \n                          dimensional space \n       LOW_DIM_FUNCTION - the parameters of the switching function in the low \n                          dimensional space \n                  CGTOL - ( default=1E-6 ) The tolerance for the conjugate gradient \n                          minimization that finds the projection of the landmarks \n                MAXITER - ( default=1000 ) maximum number of optimization cycles for \n                          optimisation algorithms \n                NCYCLES - ( default=0 ) The number of cycles of pointwise global \n                          optimisation that are required \n                 BUFFER - ( default=1.1 ) grid extent for search is (max projection - \n                          minimum projection) multiplied by this value \n             CGRID_SIZE - ( default=10 ) number of points to use in each grid \n                          direction \n             FGRID_SIZE - ( default=0 ) interpolate the grid onto this number of \n                          points -- only works in 2D \n               OS_CGTOL - ( default=1E-6 ) The tolerance for the conjugate gradient \n                          minimization that finds the out of sample projections \n                SMACTOL - ( default=1E-4 ) the tolerance for the smacof algorithm \n                SMACREG - ( default=0.001 ) this is used to ensure that we don't \n                          divide by zero when updating weights for SMACOF algorithm \n\nIn addition you may use the following options: \n\n            PROJECT_ALL - ( default=off ) if the input are landmark coordinates then \n                          project the out of sample configurations \n             USE_SMACOF - ( default=off ) find the projection in the low dimensional \n                          space using the SMACOF algorithm \n                WEIGHTS - a vector containing the weights of the points \n\n"
  },
  "SKETCHMAP_PROJECTION": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SKETCHMAP_PROJECTION",
    "description" : "Read in a sketch-map projection",
    "module" : "dimred",
    "displayname" : "SKETCHMAP_PROJECTION",
     "dois" : ["10.1073/pnas.1108486108", "10.1073/pnas.1201152109", "10.1021/ct3010563", "10.1021/ct500950z", "10.1021/acs.jctc.5b00714"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "REFERENCE" : { "type": "compulsory", "description": "a pdb file containing the set of reference configurations", "multiple": 0, "actionlink": "none"},
       "TYPE" : { "type": "compulsory", "description": " the manner in which distances are calculated", "multiple": 0, "actionlink": "none", "default": "OPTIMAL-FAST"},
       "ARG" : { "type": "optional", "description": "the list of arguments you would like to use in your definition of the path", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "PROPERTY" : { "type": "compulsory", "description": "the property to be used in the index", "multiple": 0, "actionlink": "none"},
       "WEIGHT" : { "type": "compulsory", "description": "the weight of each individual landmark in the stress fucntion that is to be optimised", "multiple": 0, "actionlink": "none"},
       "HIGH_DIM_FUNCTION" : { "type": "compulsory", "description": "the parameters of the switching function in the high dimensional space", "multiple": 0, "actionlink": "none"},
       "LOW_DIM_FUNCTION" : { "type": "compulsory", "description": "the parameters of the switching function in the low dimensional space", "multiple": 0, "actionlink": "none"},
       "CGTOL" : { "type": "compulsory", "description": " The tolerance for the conjugate gradient minimization that finds the out of sample projections", "multiple": 0, "actionlink": "none", "default": "1E-6"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the out-of-sample projections of the input arguments using the input sketch-map projection"
         }
       }
    },
    "needs" : ["DRMSD", "RMSD", "LOWEST", "GPATH", "EUCLIDEAN_DISTANCE", "CUSTOM", "SUM", "COMBINE", "NORMALIZED_EUCLIDEAN_DISTANCE", "PDB2CONSTANT", "CONSTANT", "MORE_THAN", "PROJECT_POINTS"],
    "help" : "\nThe following arguments are compulsory: \n\n              REFERENCE - a pdb file containing the set of reference configurations \n                   TYPE - ( default=OPTIMAL-FAST ) the manner in which distances are \n                          calculated. More information on the different metrics that are \n                          available in PLUMED can be found in the section of the manual on \ref \n                          dists \n               PROPERTY - the property to be used in the index. This should be in the \n                          REMARK of the reference \n                 WEIGHT - the weight of each individual landmark in the stress \n                          fucntion that is to be optimised \n      HIGH_DIM_FUNCTION - the parameters of the switching function in the high \n                          dimensional space \n       LOW_DIM_FUNCTION - the parameters of the switching function in the low \n                          dimensional space \n                  CGTOL - ( default=1E-6 ) The tolerance for the conjugate gradient \n                          minimization that finds the out of sample projections \n                    ARG - the list of arguments you would like to use in your \n                          definition of the path \n\n"
  },
  "SMAC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SMAC",
    "description" : "Calculate the SMAC order parameter for a set of molecules",
    "module" : "symfunc",
    "displayname" : "SMAC",
     "dois" : ["10.1016/j.ces.2014.08.032", "10.1021/acs.jctc.6b01073"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "optional", "description": "the label of the DISTANCES or PLANES action that computes the orientations of the molecules for which you would like to compute SMAC", "multiple": 0, "actionlink": "none"},
       "SPECIESA" : { "type": "optional", "description": "the label of the DISTANCES or PLANES action that computes the orientations of the molecules for which you would like to compute SMAC", "multiple": 0, "actionlink": "none"},
       "SPECIESB" : { "type": "optional", "description": "the label of the DISTANCES or PLANES action that computes the orientations of the molecules that should be considered as part of the coordination sphere", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "This keyword is used if you want to employ an alternative to the continuous swiching function defined above", "multiple": 0, "actionlink": "LESS_THAN"},
       "KERNEL" : { "type": "optional", "description": "The kernels used in the function of the angle", "multiple": 1, "actionlink": "none"},
       "SWITCH_COORD" : { "type": "optional", "description": "This keyword is used to define the coordination switching function", "multiple": 0, "actionlink": "LESS_THAN"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the value of the smac parameter for each of the input molecules"
         },
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "VSTACK", "TRANSPOSE", "CONTACT_MATRIX", "TORSIONS_MATRIX", "COMBINE", "ONES", "MATRIX_VECTOR_PRODUCT"],
    "help" : "\nThe following options are available\n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                SPECIES - the label of the DISTANCES or PLANES action that computes \n                          the orientations of the molecules for which you would like to \n                          compute SMAC. The coordination sphere contains the same list of \n                          molecules if you use this keyword. \n               SPECIESA - the label of the DISTANCES or PLANES action that computes \n                          the orientations of the molecules for which you would like to \n                          compute SMAC. This keyword must be used with SPECIESB. \n               SPECIESB - the label of the DISTANCES or PLANES action that computes \n                          the orientations of the molecules that should be considered as \n                          part of the coordination sphere. This keyword must be used with \n                          SPECIESA. \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous swiching function defined above. The \n                          following provides information on the \ref switchingfunction that are \n                          available. When this keyword is present you no longer need the NN, MM, \n                          D_0 and R_0 keywords. \n                 KERNEL - The kernels used in the function of the angle. You can use \n                          multiple instances of this keyword i.e. KERNEL1, KERNEL2, KERNEL3... \n           SWITCH_COORD - This keyword is used to define the coordination switching \n                          function. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "SORT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SORT",
    "description" : "This function can be used to sort colvars according to their magnitudes.",
    "module" : "function",
    "displayname" : "SORT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the values input to this function", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector/matrix that should be used to determine which elements of the vector/matrix should be computed", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "sorted"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the values input to this function \n                   MASK - the label for a sparse vector/matrix that should be used to \n                          determine which elements of the vector/matrix should be computed \n\n"
  },
  "SORT_ONEARG": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SORT_ONEARG",
    "description" : "",
    "module" : "function",
    "displayname" : "SORT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the vector whose elements we are sorting", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "sorted"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the vector whose elements we are sorting \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n"
  },
  "SORT_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SORT_SCALAR",
    "description" : "",
    "module" : "function",
    "displayname" : "SORT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "sorted"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n"
  },
  "SORT_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SORT_VECTOR",
    "description" : "",
    "module" : "function",
    "displayname" : "SORT",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and vector that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "a vector that has been sorted into ascending order"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and vector that on which the \n                          function is being calculated elementwise \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                 USEGPU - ( default=off ) run this calculation on the GPU \n"
  },
  "SPHERICAL_HARMONIC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SPHERICAL_HARMONIC",
    "description" : "Calculate the values of all the spherical harmonic funtions for a particular value of l.",
    "module" : "symfunc",
    "displayname" : "SPHERICAL_HARMONIC",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "L" : { "type": "compulsory", "description": "the value of the angular momentum", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the values input to this function", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "output" : {
         "rm" : {
           "flag": "default",
           "type": "matrix",
           "description": "the real parts of the spherical harmonic values with the m value given"
         },
         "im" : {
           "flag": "default",
           "type": "matrix",
           "description": "the real parts of the spherical harmonic values with the m value given"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                      L - the value of the angular momentum \n                    ARG - the values input to this function \n"
  },
  "SPHERICAL_HARMONIC_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SPHERICAL_HARMONIC_MATRIX",
    "description" : "",
    "module" : "symfunc",
    "displayname" : "SPHERICAL_HARMONIC",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalar and matrices that on which the function is being calculated elementwise", "multiple": 0, "actionlink": "none", "argtype": "scalar/matrix"},
       "MASK" : { "type": "optional", "description": "a matrix that is used to used to determine which elements of the output matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "L" : { "type": "compulsory", "description": "the value of the angular momentum", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "rm" : {
           "flag": "default",
           "type": "matrix",
           "description": "the real parts of the spherical harmonic values with the m value given"
         },
         "im" : {
           "flag": "default",
           "type": "matrix",
           "description": "the real parts of the spherical harmonic values with the m value given"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalar and matrices that on which the \n                          function is being calculated elementwise \n                      L - the value of the angular momentum \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a matrix that is used to used to determine which elements \n                          of the output matrix to compute \n\n"
  },
  "SPHERICAL_KDE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SPHERICAL_KDE",
    "description" : "Create a histogram from the input scalar/vector/matrix using SPHERICAL_KDE",
    "module" : "gridtools",
    "displayname" : "SPHERICAL_KDE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "ARG" : { "type": "compulsory", "description": "the label for the value that should be used to construct the histogram", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "HEIGHTS" : { "type": "optional", "description": "this keyword takes the label of an action that calculates a vector of values", "multiple": 0, "actionlink": "none"},
       "VOLUMES" : { "type": "optional", "description": "this keyword take the label of an action that calculates a vector of values", "multiple": 0, "actionlink": "none"},
       "GRID_MIN" : { "type": "compulsory", "description": " the lower bounds for the grid", "multiple": 0, "actionlink": "none", "default": "auto"},
       "GRID_MAX" : { "type": "compulsory", "description": " the upper bounds for the grid", "multiple": 0, "actionlink": "none", "default": "auto"},
       "BANDWIDTH" : { "type": "optional", "description": "the bandwidths for kernel density esimtation", "multiple": 0, "actionlink": "none"},
       "METRIC" : { "type": "compulsory", "description": "the inverse covariance to use for the kernels that are added to the grid", "multiple": 0, "actionlink": "none"},
       "CUTOFF" : { "type": "compulsory", "description": " the cutoff at which to stop evaluating the kernel functions is set equal to sqrt(2*x)*bandwidth in each direction where x is this number", "multiple": 0, "actionlink": "none", "default": "6.25"},
       "KERNEL" : { "type": "compulsory", "description": " the kernel function you are using", "multiple": 0, "actionlink": "none", "default": "GAUSSIAN"},
       "GRID_BIN" : { "type": "optional", "description": "the number of bins for the grid", "multiple": 0, "actionlink": "none"},
       "IGNORE_IF_OUT_OF_RANGE" : { "type": "flag", "description": " if a kernel is outside of the range of the grid it is safe to ignore", "multiple": 0, "actionlink": "none", "default": "off"},
       "GRID_SPACING" : { "type": "optional", "description": "the approximate grid spacing (to be used as an alternative or together with GRID_BIN)", "multiple": 0, "actionlink": "none"},
       "CONCENTRATION" : { "type": "compulsory", "description": "the concentration parameter for Von Mises-Fisher distributions (only required for SPHERICAL_KDE)", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs ", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "grid",
           "description": "a function on a grid that was obtained by doing a Kernel Density Estimation using the input arguments"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label for the value that should be used to construct \n                          the histogram \n               GRID_MIN - ( default=auto ) the lower bounds for the grid \n               GRID_MAX - ( default=auto ) the upper bounds for the grid \n                 METRIC - the inverse covariance to use for the kernels that are \n                          added to the grid \n                 CUTOFF - ( default=6.25 ) the cutoff at which to stop evaluating the \n                          kernel functions is set equal to sqrt(2*x)*bandwidth in each \n                          direction where x is this number \n                 KERNEL - ( default=GAUSSIAN ) the kernel function you are using. \n                          More details on the kernels available in plumed plumed can be \n                          found in \ref kernelfunctions. \n          CONCENTRATION - the concentration parameter for Von Mises-Fisher \n                          distributions (only required for SPHERICAL_KDE) \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n IGNORE_IF_OUT_OF_RANGE - ( default=off ) if a kernel is outside of the range of the \n                          grid it is safe to ignore \n                HEIGHTS - this keyword takes the label of an action that calculates a \n                          vector of values. The elements of this vector are used as weights \n                          for the Gaussians. \n                VOLUMES - this keyword take the label of an action that calculates a \n                          vector of values. The elements of this vector divided by the \n                          volume of the Gaussian are used as weights for the Gaussians \n              BANDWIDTH - the bandwidths for kernel density esimtation \n               GRID_BIN - the number of bins for the grid \n           GRID_SPACING - the approximate grid spacing (to be used as an alternative \n                          or together with GRID_BIN) \n\n"
  },
  "SPRINT": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SPRINT",
    "description" : "Calculate SPRINT topological variables from an adjacency matrix.",
    "module" : "sprint",
    "displayname" : "SPRINT",
     "dois" : ["10.1103/PhysRevLett.107.085504"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "MATRIX" : { "type": "optional", "description": "the matrix that you would like to perform SPRINT on", "multiple": 0, "actionlink": "none"},
       "GROUP" : { "type": "optional", "description": "specifies the list of atoms that should be assumed indistinguishable", "multiple": 1, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "specify the switching function to use between two sets of indistinguishable atoms", "multiple": 1, "actionlink": "none"},
       "output" : {
         "coord" : {
           "flag": "default",
           "type": "scalar",
           "description": "the sprint coordinates"
         }
       }
    },
    "needs" : ["CONTACT_MATRIX", "DIAGONALIZE", "CUSTOM", "SELECT_COMPONENTS", "SORT", "COMBINE"],
    "help" : "                 MATRIX - the matrix that you would like to perform SPRINT on \n                  GROUP - specifies the list of atoms that should be assumed \n                          indistinguishable. You can use multiple instances of this keyword i.e. GROUP1, \n                          GROUP2, GROUP3... \n                 SWITCH - specify the switching function to use between two sets of \n                          indistinguishable atoms. You can use multiple instances of this keyword i.e. \n                          SWITCH1, SWITCH2, SWITCH3... \n\n"
  },
  "STATS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/STATS",
    "description" : "Calculates statistical properties of a set of collective variables with respect to a set of reference values.",
    "module" : "function",
    "displayname" : "STATS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the values from which the function is calculated", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "PARARG" : { "type": "optional", "description": "the input for this action is the scalar output from one or more other actions without derivatives", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "PARAMETERS" : { "type": "optional", "description": "the parameters of the arguments in your function", "multiple": 0, "actionlink": "none"},
       "SQDEVSUM" : { "type": "flag", "description": " calculates only SQDEVSUM", "multiple": 0, "actionlink": "none", "default": "off"},
       "SQDEV" : { "type": "flag", "description": " calculates and store the SQDEV as components", "multiple": 0, "actionlink": "none", "default": "off"},
       "UPPERDISTS" : { "type": "flag", "description": " calculates and store the SQDEV as components", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "sqdevsum" : {
           "flag": "default",
           "type": "scalar",
           "description": "the sum of the squared deviations between arguments and parameters"
         },
         "corr" : {
           "flag": "default",
           "type": "scalar",
           "description": "the correlation between arguments and parameters"
         },
         "slope" : {
           "flag": "default",
           "type": "scalar",
           "description": "the slope of a linear fit between arguments and parameters"
         },
         "intercept" : {
           "flag": "default",
           "type": "scalar",
           "description": "the intercept of a linear fit between arguments and parameters"
         },
         "sqd" : {
           "flag": "SQDEV",
           "type": "scalar",
           "description": "the squared deviations between arguments and parameters"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the values from which the function is \n                          calculated \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n               SQDEVSUM - ( default=off ) calculates only SQDEVSUM \n                  SQDEV - ( default=off ) calculates and store the SQDEV as \n                          components \n             UPPERDISTS - ( default=off ) calculates and store the SQDEV as \n                          components \n                 PARARG - the input for this action is the scalar output from one or \n                          more other actions without derivatives. \n             PARAMETERS - the parameters of the arguments in your function \n\n"
  },
  "SUM": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/SUM",
    "description" : "Calculate the sum of the arguments",
    "module" : "function",
    "displayname" : "SUM",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the vector/matrix/grid whose elements shuld be added together", "multiple": 0, "actionlink": "none", "argtype": "vector/matrix/grid"},
       "PERIODIC" : { "type": "compulsory", "description": "if the output of your function is periodic then you should specify the periodicity of the function", "multiple": 0, "actionlink": "none"},
       "MASKED_INPUT_ALLOWED" : { "type": "hidden", "description": "turns on that you are allowed to use masked inputs ", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the SUM of the elements in the input value"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the vector/matrix/grid whose elements shuld be added \n                          together \n               PERIODIC - if the output of your function is periodic then you should \n                          specify the periodicity of the function. If the output is not \n                          periodic you must state this using PERIODIC=NO \n"
  },
  "TD_CHI": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TD_CHI",
    "description" : "Chi distribution (static).",
    "module" : "ves",
    "displayname" : "TD_CHI",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "MINIMUM" : { "type": "compulsory", "description": "The minimum of the chi distribution", "multiple": 0, "actionlink": "none"},
       "SIGMA" : { "type": "compulsory", "description": "The sigma parameter of the chi distribution given as a positive number", "multiple": 0, "actionlink": "none"},
       "KAPPA" : { "type": "compulsory", "description": "The k parameter of the chi distribution given as positive integer larger than 1", "multiple": 0, "actionlink": "none"},
       "WELLTEMPERED_FACTOR" : { "type": "optional", "description": "Broaden the target distribution such that it is taken as [p(s)]^(1/gamma) where gamma is the well tempered factor given here", "multiple": 0, "actionlink": "none"},
       "SHIFT_TO_ZERO" : { "type": "flag", "description": " Shift the minimum value of the target distribution to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "NORMALIZE" : { "type": "flag", "description": " Renormalized the target distribution over the intervals on which it is defined to make sure that it is properly normalized to 1", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                MINIMUM - The minimum of the chi distribution. \n                  SIGMA - The sigma parameter of the chi distribution given as a \n                          positive number. \n                  KAPPA - The k parameter of the chi distribution given as positive \n                          integer larger than 1. \n\nIn addition you may use the following options: \n\n          SHIFT_TO_ZERO - ( default=off ) Shift the minimum value of the target \n                          distribution to zero. This can for example be used to avoid negative \n                          values in the target distribution. If this option is active the \n                          distribution will be automatically normalized. \n              NORMALIZE - ( default=off ) Renormalized the target distribution over \n                          the intervals on which it is defined to make sure that it is \n                          properly normalized to 1. In most cases this should not be needed as \n                          the target distributions should be normalized. The code will \n                          issue a warning (but still run) if this is needed for some \n                          reason. \n    WELLTEMPERED_FACTOR - Broaden the target distribution such that it is taken as \n                          [p(s)]^(1/gamma) where gamma is the well tempered factor given here. If this \n                          option is active the distribution will be automatically \n                          normalized. \n\n"
  },
  "TD_CHISQUARED": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TD_CHISQUARED",
    "description" : "Chi-squared distribution (static).",
    "module" : "ves",
    "displayname" : "TD_CHISQUARED",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "MINIMUM" : { "type": "compulsory", "description": "The minimum of the chi-squared distribution", "multiple": 0, "actionlink": "none"},
       "SIGMA" : { "type": "compulsory", "description": "The sigma parameter of the chi-squared distribution given as a positive number", "multiple": 0, "actionlink": "none"},
       "KAPPA" : { "type": "compulsory", "description": "The k parameter of the chi-squared distribution given as positive integer larger than 2", "multiple": 0, "actionlink": "none"},
       "WELLTEMPERED_FACTOR" : { "type": "optional", "description": "Broaden the target distribution such that it is taken as [p(s)]^(1/gamma) where gamma is the well tempered factor given here", "multiple": 0, "actionlink": "none"},
       "SHIFT_TO_ZERO" : { "type": "flag", "description": " Shift the minimum value of the target distribution to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "NORMALIZE" : { "type": "flag", "description": " Renormalized the target distribution over the intervals on which it is defined to make sure that it is properly normalized to 1", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                MINIMUM - The minimum of the chi-squared distribution. \n                  SIGMA - The sigma parameter of the chi-squared distribution given \n                          as a positive number. \n                  KAPPA - The k parameter of the chi-squared distribution given as \n                          positive integer larger than 2. \n\nIn addition you may use the following options: \n\n          SHIFT_TO_ZERO - ( default=off ) Shift the minimum value of the target \n                          distribution to zero. This can for example be used to avoid negative \n                          values in the target distribution. If this option is active the \n                          distribution will be automatically normalized. \n              NORMALIZE - ( default=off ) Renormalized the target distribution over \n                          the intervals on which it is defined to make sure that it is \n                          properly normalized to 1. In most cases this should not be needed as \n                          the target distributions should be normalized. The code will \n                          issue a warning (but still run) if this is needed for some \n                          reason. \n    WELLTEMPERED_FACTOR - Broaden the target distribution such that it is taken as \n                          [p(s)]^(1/gamma) where gamma is the well tempered factor given here. If this \n                          option is active the distribution will be automatically \n                          normalized. \n\n"
  },
  "TD_CUSTOM": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TD_CUSTOM",
    "description" : "Target distribution given by an arbitrary mathematical expression (static or dynamic).",
    "module" : "ves",
    "displayname" : "TD_CUSTOM",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "FUNCTION" : { "type": "compulsory", "description": "The function you wish to use for the target distribution where you should use the variables _s1_,_s2_,", "multiple": 0, "actionlink": "none"},
       "WELLTEMPERED_FACTOR" : { "type": "optional", "description": "Broaden the target distribution such that it is taken as [p(s)]^(1/gamma) where gamma is the well tempered factor given here", "multiple": 0, "actionlink": "none"},
       "SHIFT_TO_ZERO" : { "type": "flag", "description": " Shift the minimum value of the target distribution to zero", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n               FUNCTION - The function you wish to use for the target distribution \n                          where you should use the variables _s1_,_s2_,... \n\nIn addition you may use the following options: \n\n          SHIFT_TO_ZERO - ( default=off ) Shift the minimum value of the target \n                          distribution to zero. This can for example be used to avoid negative \n                          values in the target distribution. If this option is active the \n                          distribution will be automatically normalized. \n    WELLTEMPERED_FACTOR - Broaden the target distribution such that it is taken as \n                          [p(s)]^(1/gamma) where gamma is the well tempered factor given here. If this \n                          option is active the distribution will be automatically \n                          normalized. \n\n"
  },
  "TD_EXPONENTIAL": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TD_EXPONENTIAL",
    "description" : "Exponential distribution (static).",
    "module" : "ves",
    "displayname" : "TD_EXPONENTIAL",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "MINIMUM" : { "type": "compulsory", "description": "The minimum of the exponential distribution", "multiple": 0, "actionlink": "none"},
       "LAMBDA" : { "type": "compulsory", "description": "The lambda parameter of the exponential distribution given as positive number", "multiple": 0, "actionlink": "none"},
       "WELLTEMPERED_FACTOR" : { "type": "optional", "description": "Broaden the target distribution such that it is taken as [p(s)]^(1/gamma) where gamma is the well tempered factor given here", "multiple": 0, "actionlink": "none"},
       "SHIFT_TO_ZERO" : { "type": "flag", "description": " Shift the minimum value of the target distribution to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "NORMALIZE" : { "type": "flag", "description": " Renormalized the target distribution over the intervals on which it is defined to make sure that it is properly normalized to 1", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                MINIMUM - The minimum of the exponential distribution. \n                 LAMBDA - The lambda parameter of the exponential distribution given \n                          as positive number. \n\nIn addition you may use the following options: \n\n          SHIFT_TO_ZERO - ( default=off ) Shift the minimum value of the target \n                          distribution to zero. This can for example be used to avoid negative \n                          values in the target distribution. If this option is active the \n                          distribution will be automatically normalized. \n              NORMALIZE - ( default=off ) Renormalized the target distribution over \n                          the intervals on which it is defined to make sure that it is \n                          properly normalized to 1. In most cases this should not be needed as \n                          the target distributions should be normalized. The code will \n                          issue a warning (but still run) if this is needed for some \n                          reason. \n    WELLTEMPERED_FACTOR - Broaden the target distribution such that it is taken as \n                          [p(s)]^(1/gamma) where gamma is the well tempered factor given here. If this \n                          option is active the distribution will be automatically \n                          normalized. \n\n"
  },
  "TD_EXPONENTIALLY_MODIFIED_GAUSSIAN": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TD_EXPONENTIALLY_MODIFIED_GAUSSIAN",
    "description" : "Target distribution given by a sum of exponentially modified Gaussian distributions (static).",
    "module" : "ves",
    "displayname" : "TD_EXPONENTIALLY_MODIFIED_GAUSSIAN",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "CENTER" : { "type": "optional", "description": "The center of each exponentially modified Gaussian distributions", "multiple": 1, "actionlink": "none"},
       "SIGMA" : { "type": "optional", "description": "The sigma parameters for each exponentially modified Gaussian distributions", "multiple": 1, "actionlink": "none"},
       "LAMBDA" : { "type": "optional", "description": "The lambda parameters for each exponentially modified Gaussian distributions", "multiple": 1, "actionlink": "none"},
       "WEIGHTS" : { "type": "optional", "description": "The weights of the distributions", "multiple": 0, "actionlink": "none"},
       "WELLTEMPERED_FACTOR" : { "type": "optional", "description": "Broaden the target distribution such that it is taken as [p(s)]^(1/gamma) where gamma is the well tempered factor given here", "multiple": 0, "actionlink": "none"},
       "SHIFT_TO_ZERO" : { "type": "flag", "description": " Shift the minimum value of the target distribution to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "NORMALIZE" : { "type": "flag", "description": " Renormalized the target distribution over the intervals on which it is defined to make sure that it is properly normalized to 1", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following options are available\n\n          SHIFT_TO_ZERO - ( default=off ) Shift the minimum value of the target \n                          distribution to zero. This can for example be used to avoid negative \n                          values in the target distribution. If this option is active the \n                          distribution will be automatically normalized. \n              NORMALIZE - ( default=off ) Renormalized the target distribution over \n                          the intervals on which it is defined to make sure that it is \n                          properly normalized to 1. In most cases this should not be needed as \n                          the target distributions should be normalized. The code will \n                          issue a warning (but still run) if this is needed for some \n                          reason. \n                 CENTER - The center of each exponentially modified Gaussian \n                          distributions.. You can use multiple instances of this keyword i.e. \n                          CENTER1, CENTER2, CENTER3... \n                  SIGMA - The sigma parameters for each exponentially modified \n                          Gaussian distributions.. You can use multiple instances of this \n                          keyword i.e. SIGMA1, SIGMA2, SIGMA3... \n                 LAMBDA - The lambda parameters for each exponentially modified \n                          Gaussian distributions. You can use multiple instances of this \n                          keyword i.e. LAMBDA1, LAMBDA2, LAMBDA3... \n                WEIGHTS - The weights of the distributions. By default all are \n                          weighted equally. \n    WELLTEMPERED_FACTOR - Broaden the target distribution such that it is taken as \n                          [p(s)]^(1/gamma) where gamma is the well tempered factor given here. If this \n                          option is active the distribution will be automatically \n                          normalized. \n\n"
  },
  "TD_GAUSSIAN": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TD_GAUSSIAN",
    "description" : "Target distribution given by a sum of Gaussian kernels (static).",
    "module" : "ves",
    "displayname" : "TD_GAUSSIAN",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "CENTER" : { "type": "optional", "description": "The centers of the Gaussian distributions", "multiple": 1, "actionlink": "none"},
       "SIGMA" : { "type": "optional", "description": "The standard deviations of the Gaussian distributions", "multiple": 1, "actionlink": "none"},
       "CORRELATION" : { "type": "optional", "description": "The correlation for two-dimensional bivariate Gaussian distributions", "multiple": 1, "actionlink": "none"},
       "WEIGHTS" : { "type": "optional", "description": "The weights of the Gaussian distributions", "multiple": 0, "actionlink": "none"},
       "WELLTEMPERED_FACTOR" : { "type": "optional", "description": "Broaden the target distribution such that it is taken as [p(s)]^(1/gamma) where gamma is the well tempered factor given here", "multiple": 0, "actionlink": "none"},
       "SHIFT_TO_ZERO" : { "type": "flag", "description": " Shift the minimum value of the target distribution to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "NORMALIZE" : { "type": "flag", "description": " Renormalized the target distribution over the intervals on which it is defined to make sure that it is properly normalized to 1", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following options are available\n\n          SHIFT_TO_ZERO - ( default=off ) Shift the minimum value of the target \n                          distribution to zero. This can for example be used to avoid negative \n                          values in the target distribution. If this option is active the \n                          distribution will be automatically normalized. \n              NORMALIZE - ( default=off ) Renormalized the target distribution over \n                          the intervals on which it is defined to make sure that it is \n                          properly normalized to 1. In most cases this should not be needed as \n                          the target distributions should be normalized. The code will \n                          issue a warning (but still run) if this is needed for some \n                          reason. \n                 CENTER - The centers of the Gaussian distributions.. You can use \n                          multiple instances of this keyword i.e. CENTER1, CENTER2, CENTER3... \n                  SIGMA - The standard deviations of the Gaussian distributions.. You \n                          can use multiple instances of this keyword i.e. SIGMA1, SIGMA2, \n                          SIGMA3... \n            CORRELATION - The correlation for two-dimensional bivariate Gaussian \n                          distributions. Only works for two arguments. The value should be between \n                          -1 and 1. If no value is given the Gaussian kernels is \n                          considered as un-correlated (i.e. value of 0.0).. You can use multiple \n                          instances of this keyword i.e. CORRELATION1, CORRELATION2, \n                          CORRELATION3... \n                WEIGHTS - The weights of the Gaussian distributions. Have to be as \n                          many as the number of centers given with the numbered CENTER \n                          keywords. If no weights are given the distributions are weighted \n                          equally. The weights are automatically normalized to 1. \n    WELLTEMPERED_FACTOR - Broaden the target distribution such that it is taken as \n                          [p(s)]^(1/gamma) where gamma is the well tempered factor given here. If this \n                          option is active the distribution will be automatically \n                          normalized. \n\n"
  },
  "TD_GENERALIZED_EXTREME_VALUE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TD_GENERALIZED_EXTREME_VALUE",
    "description" : "Generalized extreme value distribution (static).",
    "module" : "ves",
    "displayname" : "TD_GENERALIZED_EXTREME_VALUE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "LOCATION" : { "type": "compulsory", "description": "The mu parameter of the generalized extreme value distribution", "multiple": 0, "actionlink": "none"},
       "SCALE" : { "type": "compulsory", "description": "The sigma parameter for the generalized extreme value distribution given as a positive number", "multiple": 0, "actionlink": "none"},
       "SHAPE" : { "type": "compulsory", "description": "The xi parameter for the generalized extreme value distribution", "multiple": 0, "actionlink": "none"},
       "WELLTEMPERED_FACTOR" : { "type": "optional", "description": "Broaden the target distribution such that it is taken as [p(s)]^(1/gamma) where gamma is the well tempered factor given here", "multiple": 0, "actionlink": "none"},
       "SHIFT_TO_ZERO" : { "type": "flag", "description": " Shift the minimum value of the target distribution to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "NORMALIZE" : { "type": "flag", "description": " Renormalized the target distribution over the intervals on which it is defined to make sure that it is properly normalized to 1", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n               LOCATION - The mu parameter of the generalized extreme value \n                          distribution. \n                  SCALE - The sigma parameter for the generalized extreme value \n                          distribution given as a positive number. \n                  SHAPE - The xi parameter for the generalized extreme value \n                          distribution. \n\nIn addition you may use the following options: \n\n          SHIFT_TO_ZERO - ( default=off ) Shift the minimum value of the target \n                          distribution to zero. This can for example be used to avoid negative \n                          values in the target distribution. If this option is active the \n                          distribution will be automatically normalized. \n              NORMALIZE - ( default=off ) Renormalized the target distribution over \n                          the intervals on which it is defined to make sure that it is \n                          properly normalized to 1. In most cases this should not be needed as \n                          the target distributions should be normalized. The code will \n                          issue a warning (but still run) if this is needed for some \n                          reason. \n    WELLTEMPERED_FACTOR - Broaden the target distribution such that it is taken as \n                          [p(s)]^(1/gamma) where gamma is the well tempered factor given here. If this \n                          option is active the distribution will be automatically \n                          normalized. \n\n"
  },
  "TD_GENERALIZED_NORMAL": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TD_GENERALIZED_NORMAL",
    "description" : "Target distribution given by a sum of generalized normal distributions (static).",
    "module" : "ves",
    "displayname" : "TD_GENERALIZED_NORMAL",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "CENTER" : { "type": "optional", "description": "The center of each generalized normal distribution", "multiple": 1, "actionlink": "none"},
       "ALPHA" : { "type": "optional", "description": "The alpha parameters for each generalized normal distribution", "multiple": 1, "actionlink": "none"},
       "BETA" : { "type": "optional", "description": "The beta parameters for each generalized normal distribution", "multiple": 1, "actionlink": "none"},
       "WEIGHTS" : { "type": "optional", "description": "The weights of the generalized normal distribution", "multiple": 0, "actionlink": "none"},
       "WELLTEMPERED_FACTOR" : { "type": "optional", "description": "Broaden the target distribution such that it is taken as [p(s)]^(1/gamma) where gamma is the well tempered factor given here", "multiple": 0, "actionlink": "none"},
       "SHIFT_TO_ZERO" : { "type": "flag", "description": " Shift the minimum value of the target distribution to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "NORMALIZE" : { "type": "flag", "description": " Renormalized the target distribution over the intervals on which it is defined to make sure that it is properly normalized to 1", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following options are available\n\n          SHIFT_TO_ZERO - ( default=off ) Shift the minimum value of the target \n                          distribution to zero. This can for example be used to avoid negative \n                          values in the target distribution. If this option is active the \n                          distribution will be automatically normalized. \n              NORMALIZE - ( default=off ) Renormalized the target distribution over \n                          the intervals on which it is defined to make sure that it is \n                          properly normalized to 1. In most cases this should not be needed as \n                          the target distributions should be normalized. The code will \n                          issue a warning (but still run) if this is needed for some \n                          reason. \n                 CENTER - The center of each generalized normal distribution.. You \n                          can use multiple instances of this keyword i.e. CENTER1, \n                          CENTER2, CENTER3... \n                  ALPHA - The alpha parameters for each generalized normal \n                          distribution.. You can use multiple instances of this keyword i.e. ALPHA1, \n                          ALPHA2, ALPHA3... \n                   BETA - The beta parameters for each generalized normal \n                          distribution.. You can use multiple instances of this keyword i.e. BETA1, \n                          BETA2, BETA3... \n                WEIGHTS - The weights of the generalized normal distribution. By \n                          default all are weighted equally. \n    WELLTEMPERED_FACTOR - Broaden the target distribution such that it is taken as \n                          [p(s)]^(1/gamma) where gamma is the well tempered factor given here. If this \n                          option is active the distribution will be automatically \n                          normalized. \n\n"
  },
  "TD_GRID": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TD_GRID",
    "description" : "Target distribution from an external grid file (static).",
    "module" : "ves",
    "displayname" : "TD_GRID",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "FILE" : { "type": "compulsory", "description": "The name of the external grid file to be used as a target distribution", "multiple": 0, "actionlink": "none"},
       "SHIFT" : { "type": "optional", "description": "Shift the grid read in by some constant value", "multiple": 0, "actionlink": "none"},
       "ZERO_OUTSIDE" : { "type": "flag", "description": " By default the target distribution is continuous such that values outside the boundary of the external grid file are the same as at the boundary", "multiple": 0, "actionlink": "none", "default": "off"},
       "DO_NOT_NORMALIZE" : { "type": "flag", "description": " By default the target distribution from the external grid is always normalized inside the code", "multiple": 0, "actionlink": "none", "default": "off"},
       "WELLTEMPERED_FACTOR" : { "type": "optional", "description": "Broaden the target distribution such that it is taken as [p(s)]^(1/gamma) where gamma is the well tempered factor given here", "multiple": 0, "actionlink": "none"},
       "SHIFT_TO_ZERO" : { "type": "flag", "description": " Shift the minimum value of the target distribution to zero", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                   FILE - The name of the external grid file to be used as a target \n                          distribution. \n\nIn addition you may use the following options: \n\n           ZERO_OUTSIDE - ( default=off ) By default the target distribution is \n                          continuous such that values outside the boundary of the external grid \n                          file are the same as at the boundary. This can be changed by \n                          using this flag which will make values outside to be taken as \n                          zero. \n       DO_NOT_NORMALIZE - ( default=off ) By default the target distribution from the \n                          external grid is always normalized inside the code. You can use this \n                          flag to disable this normalization. However, be warned that this \n                          will generally lead to the wrong behavior if the distribution \n                          from the external grid is not properly normalized to 1. \n          SHIFT_TO_ZERO - ( default=off ) Shift the minimum value of the target \n                          distribution to zero. This can for example be used to avoid negative \n                          values in the target distribution. If this option is active the \n                          distribution will be automatically normalized. \n                  SHIFT - Shift the grid read in by some constant value. Due to \n                          normalization the final shift in the target distribution will generally \n                          not be the same as the value given here \n    WELLTEMPERED_FACTOR - Broaden the target distribution such that it is taken as \n                          [p(s)]^(1/gamma) where gamma is the well tempered factor given here. If this \n                          option is active the distribution will be automatically \n                          normalized. \n\n"
  },
  "TD_LINEAR_COMBINATION": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TD_LINEAR_COMBINATION",
    "description" : "Target distribution given by linear combination of distributions (static or dynamic).",
    "module" : "ves",
    "displayname" : "TD_LINEAR_COMBINATION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "DISTRIBUTIONS" : { "type": "compulsory", "description": "The labels of the target distribution actions to be used in the linear combination", "multiple": 0, "actionlink": "none"},
       "WEIGHTS" : { "type": "optional", "description": "The weights of target distributions", "multiple": 0, "actionlink": "none"},
       "WELLTEMPERED_FACTOR" : { "type": "optional", "description": "Broaden the target distribution such that it is taken as [p(s)]^(1/gamma) where gamma is the well tempered factor given here", "multiple": 0, "actionlink": "none"},
       "NORMALIZE" : { "type": "flag", "description": " Renormalized the target distribution over the intervals on which it is defined to make sure that it is properly normalized to 1", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n          DISTRIBUTIONS - The labels of the target distribution actions to be used in \n                          the linear combination. \n\nIn addition you may use the following options: \n\n              NORMALIZE - ( default=off ) Renormalized the target distribution over \n                          the intervals on which it is defined to make sure that it is \n                          properly normalized to 1. In most cases this should not be needed as \n                          the target distributions should be normalized. The code will \n                          issue a warning (but still run) if this is needed for some \n                          reason. \n                WEIGHTS - The weights of target distributions. Have to be as many as \n                          the number of target distribution labels given in \n                          DISTRIBUTIONS. If no weights are given the distributions are weighted \n                          equally. The weights are automatically normalized to 1. \n    WELLTEMPERED_FACTOR - Broaden the target distribution such that it is taken as \n                          [p(s)]^(1/gamma) where gamma is the well tempered factor given here. If this \n                          option is active the distribution will be automatically \n                          normalized. \n\n"
  },
  "TD_MULTICANONICAL": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TD_MULTICANONICAL",
    "description" : "Multicanonical target distribution (dynamic).",
    "module" : "ves",
    "displayname" : "TD_MULTICANONICAL",
     "dois" : ["10.1103/PhysRevLett.68.9", "10.1103/PhysRevLett.122.050601", "10.1103/PhysRevLett.86.2050"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "THRESHOLD" : { "type": "compulsory", "description": " Maximum exploration free energy in kT", "multiple": 0, "actionlink": "none", "default": "5"},
       "EPSILON" : { "type": "compulsory", "description": " The zeros of the target distribution are changed to e^-EPSILON", "multiple": 0, "actionlink": "none", "default": "10"},
       "MIN_TEMP" : { "type": "compulsory", "description": "Minimum temperature", "multiple": 0, "actionlink": "none"},
       "MAX_TEMP" : { "type": "compulsory", "description": "Maximum temperature", "multiple": 0, "actionlink": "none"},
       "STEPS_TEMP" : { "type": "optional", "description": "Number of temperature steps", "multiple": 0, "actionlink": "none"},
       "SIGMA" : { "type": "optional", "description": "The standard deviation parameters of the Gaussian kernels used for smoothing the target distribution", "multiple": 0, "actionlink": "none"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n              THRESHOLD - ( default=5 ) Maximum exploration free energy in kT. \n                EPSILON - ( default=10 ) The zeros of the target distribution are \n                          changed to e^-EPSILON. \n               MIN_TEMP - Minimum temperature. \n               MAX_TEMP - Maximum temperature. \n             STEPS_TEMP - Number of temperature steps. Only for the 2D version, i.e. \n                          energy and order parameter. \n                  SIGMA - The standard deviation parameters of the Gaussian kernels \n                          used for smoothing the target distribution. One value must be \n                          specified for each argument, i.e. one value per CV. A value of 0.0 \n                          means that no smoothing is performed, this is the default \n                          behavior. \n\n"
  },
  "TD_MULTITHERMAL_MULTIBARIC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TD_MULTITHERMAL_MULTIBARIC",
    "description" : "Multithermal-multibaric target distribution (dynamic).",
    "module" : "ves",
    "displayname" : "TD_MULTITHERMAL_MULTIBARIC",
     "dois" : ["10.1016/j.cplett.2004.04.073", "10.1103/PhysRevLett.122.050601", "10.1021/acs.jctc.5b00076", "10.1103/PhysRevLett.86.2050", "10.1103/PhysRevLett.68.9"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "THRESHOLD" : { "type": "compulsory", "description": " Maximum exploration free energy in kT", "multiple": 0, "actionlink": "none", "default": "5"},
       "EPSILON" : { "type": "compulsory", "description": " The zeros of the target distribution are changed to e^-EPSILON", "multiple": 0, "actionlink": "none", "default": "10"},
       "MIN_TEMP" : { "type": "compulsory", "description": "Minimum energy", "multiple": 0, "actionlink": "none"},
       "MAX_TEMP" : { "type": "compulsory", "description": "Maximum energy", "multiple": 0, "actionlink": "none"},
       "MIN_PRESSURE" : { "type": "compulsory", "description": "Minimum pressure", "multiple": 0, "actionlink": "none"},
       "MAX_PRESSURE" : { "type": "compulsory", "description": "Maximum pressure", "multiple": 0, "actionlink": "none"},
       "PRESSURE" : { "type": "compulsory", "description": "Target pressure of the barostat used in the MD engine", "multiple": 0, "actionlink": "none"},
       "STEPS_TEMP" : { "type": "compulsory", "description": " Number of temperature steps", "multiple": 0, "actionlink": "none", "default": "20"},
       "STEPS_PRESSURE" : { "type": "compulsory", "description": " Number of pressure steps", "multiple": 0, "actionlink": "none", "default": "20"},
       "SIGMA" : { "type": "optional", "description": "The standard deviation parameters of the Gaussian kernels used for smoothing the target distribution", "multiple": 0, "actionlink": "none"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n              THRESHOLD - ( default=5 ) Maximum exploration free energy in kT. \n                EPSILON - ( default=10 ) The zeros of the target distribution are \n                          changed to e^-EPSILON. \n               MIN_TEMP - Minimum energy. \n               MAX_TEMP - Maximum energy. \n           MIN_PRESSURE - Minimum pressure. \n           MAX_PRESSURE - Maximum pressure. \n               PRESSURE - Target pressure of the barostat used in the MD engine. \n             STEPS_TEMP - ( default=20 ) Number of temperature steps. \n         STEPS_PRESSURE - ( default=20 ) Number of pressure steps. \n                  SIGMA - The standard deviation parameters of the Gaussian kernels \n                          used for smoothing the target distribution. One value must be \n                          specified for each argument, i.e. one value per CV. A value of 0.0 \n                          means that no smoothing is performed, this is the default \n                          behavior. \n\n"
  },
  "TD_PRODUCT_COMBINATION": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TD_PRODUCT_COMBINATION",
    "description" : "Target distribution given by product combination of distributions (static or dynamic).",
    "module" : "ves",
    "displayname" : "TD_PRODUCT_COMBINATION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "DISTRIBUTIONS" : { "type": "compulsory", "description": "The labels of the target distribution actions to be used in the product combination", "multiple": 0, "actionlink": "none"},
       "WELLTEMPERED_FACTOR" : { "type": "optional", "description": "Broaden the target distribution such that it is taken as [p(s)]^(1/gamma) where gamma is the well tempered factor given here", "multiple": 0, "actionlink": "none"},
       "SHIFT_TO_ZERO" : { "type": "flag", "description": " Shift the minimum value of the target distribution to zero", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n          DISTRIBUTIONS - The labels of the target distribution actions to be used in \n                          the product combination. \n\nIn addition you may use the following options: \n\n          SHIFT_TO_ZERO - ( default=off ) Shift the minimum value of the target \n                          distribution to zero. This can for example be used to avoid negative \n                          values in the target distribution. If this option is active the \n                          distribution will be automatically normalized. \n    WELLTEMPERED_FACTOR - Broaden the target distribution such that it is taken as \n                          [p(s)]^(1/gamma) where gamma is the well tempered factor given here. If this \n                          option is active the distribution will be automatically \n                          normalized. \n\n"
  },
  "TD_PRODUCT_DISTRIBUTION": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TD_PRODUCT_DISTRIBUTION",
    "description" : "Target distribution given by a separable product of one-dimensional distributions (static or dynamic).",
    "module" : "ves",
    "displayname" : "TD_PRODUCT_DISTRIBUTION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "DISTRIBUTIONS" : { "type": "compulsory", "description": "Labels of the one-dimensional target distribution actions for each argument to be used in the product distribution", "multiple": 0, "actionlink": "none"},
       "WELLTEMPERED_FACTOR" : { "type": "optional", "description": "Broaden the target distribution such that it is taken as [p(s)]^(1/gamma) where gamma is the well tempered factor given here", "multiple": 0, "actionlink": "none"},
       "SHIFT_TO_ZERO" : { "type": "flag", "description": " Shift the minimum value of the target distribution to zero", "multiple": 0, "actionlink": "none", "default": "off"},
       "NORMALIZE" : { "type": "flag", "description": " Renormalized the target distribution over the intervals on which it is defined to make sure that it is properly normalized to 1", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n          DISTRIBUTIONS - Labels of the one-dimensional target distribution actions \n                          for each argument to be used in the product distribution. Note \n                          that order of the labels is important. \n\nIn addition you may use the following options: \n\n          SHIFT_TO_ZERO - ( default=off ) Shift the minimum value of the target \n                          distribution to zero. This can for example be used to avoid negative \n                          values in the target distribution. If this option is active the \n                          distribution will be automatically normalized. \n              NORMALIZE - ( default=off ) Renormalized the target distribution over \n                          the intervals on which it is defined to make sure that it is \n                          properly normalized to 1. In most cases this should not be needed as \n                          the target distributions should be normalized. The code will \n                          issue a warning (but still run) if this is needed for some \n                          reason. \n    WELLTEMPERED_FACTOR - Broaden the target distribution such that it is taken as \n                          [p(s)]^(1/gamma) where gamma is the well tempered factor given here. If this \n                          option is active the distribution will be automatically \n                          normalized. \n\n"
  },
  "TD_UNIFORM": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TD_UNIFORM",
    "description" : "Uniform target distribution (static).",
    "module" : "ves",
    "displayname" : "TD_UNIFORM",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "MINIMA" : { "type": "optional", "description": "The minimum of the intervals where the target distribution is taken as uniform", "multiple": 0, "actionlink": "none"},
       "MAXIMA" : { "type": "optional", "description": "The maximum of the intervals where the target distribution is taken as uniform", "multiple": 0, "actionlink": "none"},
       "SIGMA_MINIMA" : { "type": "optional", "description": "The standard deviation parameters of the Gaussian switching functions for the minima of the intervals", "multiple": 0, "actionlink": "none"},
       "SIGMA_MAXIMA" : { "type": "optional", "description": "The standard deviation parameters of the Gaussian switching functions for the maximum of the intervals", "multiple": 0, "actionlink": "none"}
    },
    "help" : "                 MINIMA - The minimum of the intervals where the target distribution \n                          is taken as uniform. You should give one value for each \n                          argument. \n                 MAXIMA - The maximum of the intervals where the target distribution \n                          is taken as uniform. You should give one value for each \n                          argument. \n           SIGMA_MINIMA - The standard deviation parameters of the Gaussian switching \n                          functions for the minima of the intervals. You should give one value \n                          for each argument. Value of 0.0 means that switch is done \n                          without a smooth switching function, this is the default behavior. \n           SIGMA_MAXIMA - The standard deviation parameters of the Gaussian switching \n                          functions for the maximum of the intervals. You should give one value \n                          for each argument. Value of 0.0 means that switch is done \n                          without a smooth switching function, this is the default behavior. \n\n"
  },
  "TD_VONMISES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TD_VONMISES",
    "description" : "Target distribution given by a sum of Von Mises distributions (static).",
    "module" : "ves",
    "displayname" : "TD_VONMISES",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "CENTER" : { "type": "optional", "description": "The centers of the Von Mises distributions", "multiple": 1, "actionlink": "none"},
       "SIGMA" : { "type": "optional", "description": "The standard deviations of the Von Mises distributions", "multiple": 1, "actionlink": "none"},
       "WEIGHTS" : { "type": "optional", "description": "The weights of the Von Mises distributions", "multiple": 0, "actionlink": "none"},
       "PERIODS" : { "type": "hidden", "description": "The periods for each of the dimensions", "multiple": 0, "actionlink": "none"},
       "WELLTEMPERED_FACTOR" : { "type": "optional", "description": "Broaden the target distribution such that it is taken as [p(s)]^(1/gamma) where gamma is the well tempered factor given here", "multiple": 0, "actionlink": "none"},
       "SHIFT_TO_ZERO" : { "type": "flag", "description": " Shift the minimum value of the target distribution to zero", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following options are available\n\n          SHIFT_TO_ZERO - ( default=off ) Shift the minimum value of the target \n                          distribution to zero. This can for example be used to avoid negative \n                          values in the target distribution. If this option is active the \n                          distribution will be automatically normalized. \n                 CENTER - The centers of the Von Mises distributions.. You can use \n                          multiple instances of this keyword i.e. CENTER1, CENTER2, CENTER3... \n                  SIGMA - The standard deviations of the Von Mises distributions.. \n                          You can use multiple instances of this keyword i.e. SIGMA1, \n                          SIGMA2, SIGMA3... \n                WEIGHTS - The weights of the Von Mises distributions. Have to be as \n                          many as the number of centers given with the numbered CENTER \n                          keywords. If no weights are given the distributions are weighted \n                          equally. The weights are automatically normalized to 1. \n    WELLTEMPERED_FACTOR - Broaden the target distribution such that it is taken as \n                          [p(s)]^(1/gamma) where gamma is the well tempered factor given here. If this \n                          option is active the distribution will be automatically \n                          normalized. \n\n"
  },
  "TD_WELLTEMPERED": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TD_WELLTEMPERED",
    "description" : "Well-tempered target distribution (dynamic).",
    "module" : "ves",
    "displayname" : "TD_WELLTEMPERED",
     "dois" : ["10.1103/PhysRevLett.100.020603", "10.1021/acs.jctc.5b00076"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "BIASFACTOR" : { "type": "compulsory", "description": "The bias factor used for the well-tempered distribution", "multiple": 0, "actionlink": "none"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n             BIASFACTOR - The bias factor used for the well-tempered distribution. \n"
  },
  "TEMPLATE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TEMPLATE",
    "description" : "This file provides a template for if you want to introduce a new CV.",
    "module" : "colvar",
    "displayname" : "TEMPLATE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "TEMPLATE_DEFAULT_OFF_FLAG" : { "type": "flag", "description": " flags that are by default not performed should be specified like this", "multiple": 0, "actionlink": "none", "default": "off"},
       "TEMPLATE_COMPULSORY" : { "type": "compulsory", "description": "all compulsory keywords should be added like this with a description here", "multiple": 0, "actionlink": "none"},
       "TEMPLATE_OPTIONAL" : { "type": "optional", "description": "all optional keywords that have input should be added like a description here", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the keyword with which you specify what atoms to use should be added like this", "multiple": 1, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "a description of the value that is computed by this colvar should be included here"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the keyword with which you specify what atoms to use should \n                          be added like this. For more information on how to specify \n                          lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n    TEMPLATE_COMPULSORY - all compulsory keywords should be added like this with a \n                          description here \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \nTEMPLATE_DEFAULT_OFF_FLAG - ( default=off ) flags that are by default not performed \n                          should be specified like this \n      TEMPLATE_OPTIONAL - all optional keywords that have input should be added like \n                          a description here \n\n"
  },
  "TETRAHEDRAL": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TETRAHEDRAL",
    "description" : "Calculate the degree to which the environment about ions has a tetrahedral order.",
    "module" : "symfunc",
    "displayname" : "TETRAHEDRAL",
     "dois" : ["10.1021/ct500320c", "10.1103/PhysRevB.81.125416", "10.1103/PhysRevB.92.180102", "10.1063/1.4997180", "10.1063/1.5134461"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated and the atoms that can be in the environments", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "the list of atoms that can be in the environments of each of the atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "NN" : { "type": "compulsory", "description": " The n parameter of the switching function ", "multiple": 0, "actionlink": "none", "default": "6"},
       "MM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "D_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "R_0" : { "type": "compulsory", "description": "The r_0 parameter of the switching function", "multiple": 0, "actionlink": "none"},
       "SWITCH" : { "type": "optional", "description": "the switching function that it used in the construction of the contact matrix", "multiple": 0, "actionlink": "LESS_THAN"},
       "MASK" : { "type": "optional", "description": "the label for a vector that is used to determine which rows of the matrix are computed", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "FUNCTION" : { "type": "compulsory", "description": "the function of the bond vectors that you would like to evaluate", "multiple": 0, "actionlink": "none"},
       "PHI" : { "type": "compulsory", "description": " The Euler rotational angle phi", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "THETA" : { "type": "compulsory", "description": " The Euler rotational angle theta", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "PSI" : { "type": "compulsory", "description": " The Euler rotational angle psi", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "ALPHA" : { "type": "compulsory", "description": " The alpha parameter of the angular function that is used for FCCUBIC", "multiple": 0, "actionlink": "none", "default": "3.0"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the symmetry function for each of the specified atoms"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "GROUP", "FCCUBIC_FUNC", "ONES", "MATRIX_VECTOR_PRODUCT"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - the list of atoms for which the symmetry function is being \n                          calculated and the atoms that can be in the environments \n               SPECIESA - the list of atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESB, \n                          which specifies the atoms that are in the environment. \n               SPECIESB - the list of atoms that can be in the environments of each \n                          of the atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESA, \n                          which specifies the atoms for which the symmetry function is \n                          being calculated. \n\nThe following arguments are compulsory: \n\n                     NN - ( default=6 ) The n parameter of the switching function \n                     MM - ( default=0 ) The m parameter of the switching function; 0 \n                          implies 2*NN \n                    D_0 - ( default=0.0 ) The d_0 parameter of the switching function \n                    R_0 - The r_0 parameter of the switching function \n               FUNCTION - the function of the bond vectors that you would like to \n                          evaluate \n                    PHI - ( default=0.0 ) The Euler rotational angle phi \n                  THETA - ( default=0.0 ) The Euler rotational angle theta \n                    PSI - ( default=0.0 ) The Euler rotational angle psi \n                  ALPHA - ( default=3.0 ) The alpha parameter of the angular function \n                          that is used for FCCUBIC \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                 SWITCH - the switching function that it used in the construction of \n                          the contact matrix \n                   MASK - the label for a vector that is used to determine which rows \n                          of the matrix are computed \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "TETRAHEDRALPORE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TETRAHEDRALPORE",
    "description" : "This quantity can be used to calculate functions of the distribution of collective variables for the atoms lie that lie in a box defined by the positions of four atoms at the corners of a tetrahedron.",
    "module" : "volumes",
    "displayname" : "TETRAHEDRALPORE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the group of atoms that you would like to investigate", "multiple": 1, "actionlink": "none"},
       "OUTSIDE" : { "type": "flag", "description": " calculate quantities for colvars that are on atoms outside the region of interest", "multiple": 0, "actionlink": "none", "default": "off"},
       "SIGMA" : { "type": "compulsory", "description": "the width of the function to be used for kernel density estimation", "multiple": 0, "actionlink": "none"},
       "KERNEL" : { "type": "compulsory", "description": " the type of kernel function to be used", "multiple": 0, "actionlink": "none", "default": "gaussian"},
       "BOX" : { "type": "atoms", "description": "the positions of four atoms that define spatial extent of the cavity", "multiple": 1, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "DATA" : { "type": "optional", "description": "the label of an action that calculates multicolvars", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calcualte the number of colvars that are inside the region of interest and that are less than a certain threshold", "multiple": 0, "actionlink": "none"},
       "MORE_THAN" : { "type": "optional", "description": "calcualte the number of colvars that are inside the region of interest and that are greater that a certain threshold", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of colvars that are inside the region of interest and that have a CV value that is between a particular set of bounds", "multiple": 0, "actionlink": "none"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the average value of the colvar inside the region of interest", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "sum of values of input CVs in regin of interest"
         },
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of cvs in the region of interest that are less than a certain threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of cvs in the region of interest that are more than a certain threshold"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of cvs in the region of interest that are within a certain range"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of all the colvars weighted by the function that determines if we are in the region"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the average values of the colvar in the region of interest"
         }
       }
    },
    "needs" : ["LESS_THAN", "MORE_THAN", "GROUP", "BETWEEN", "SUM", "MEAN", "CUSTOM"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the group of atoms that you would like to investigate. For \n                          more information on how to specify lists of atoms see \ref Group \n                    BOX - the positions of four atoms that define spatial extent of \n                          the cavity. For more information on how to specify lists of \n                          atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                  SIGMA - the width of the function to be used for kernel density \n                          estimation \n                 KERNEL - ( default=gaussian ) the type of kernel function to be used \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                OUTSIDE - ( default=off ) calculate quantities for colvars that are \n                          on atoms outside the region of interest \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the average value of the colvar \n                          inside the region of interest \n                   DATA - the label of an action that calculates multicolvars. \n                          Weighted sums based on the location of the colvars calculated by \n                          this action will be calcualted \n              LESS_THAN - calcualte the number of colvars that are inside the region \n                          of interest and that are less than a certain threshold \n              MORE_THAN - calcualte the number of colvars that are inside the region \n                          of interest and that are greater that a certain threshold \n                BETWEEN - calculate the number of colvars that are inside the region \n                          of interest and that have a CV value that is between a \n                          particular set of bounds \n\n"
  },
  "TETRAHEDRALPORE_CALC": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TETRAHEDRALPORE_CALC",
    "description" : "",
    "module" : "volumes",
    "displayname" : "TETRAHEDRALPORE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the group of atoms that you would like to investigate", "multiple": 1, "actionlink": "none"},
       "OUTSIDE" : { "type": "flag", "description": " calculate quantities for colvars that are on atoms outside the region of interest", "multiple": 0, "actionlink": "none", "default": "off"},
       "SIGMA" : { "type": "compulsory", "description": "the width of the function to be used for kernel density estimation", "multiple": 0, "actionlink": "none"},
       "KERNEL" : { "type": "compulsory", "description": " the type of kernel function to be used", "multiple": 0, "actionlink": "none", "default": "gaussian"},
       "BOX" : { "type": "atoms", "description": "the positions of four atoms that define spatial extent of the cavity", "multiple": 1, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "vector of numbers between 0 and 1 that measure the degree to which each atom is within the volume of interest"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the group of atoms that you would like to investigate. For \n                          more information on how to specify lists of atoms see \ref Group \n                    BOX - the positions of four atoms that define spatial extent of \n                          the cavity. For more information on how to specify lists of \n                          atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                  SIGMA - the width of the function to be used for kernel density \n                          estimation \n                 KERNEL - ( default=gaussian ) the type of kernel function to be used \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                OUTSIDE - ( default=off ) calculate quantities for colvars that are \n                          on atoms outside the region of interest \n"
  },
  "TETRA_ANGULAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TETRA_ANGULAR",
    "description" : "Calculate the angular tetra CV",
    "module" : "symfunc",
    "displayname" : "TETRA_ANGULAR",
     "dois" : ["10.1021/ct500320c"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated and the atoms that can be in the environments", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "the list of atoms that can be in the environments of each of the atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "MASK" : { "type": "optional", "description": "the label for a vector that is used to determine which rows of the matrix are computed", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "CUTOFF" : { "type": "compulsory", "description": " ignore distances that have a value larger than this cutoff", "multiple": 0, "actionlink": "none", "default": "-1"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the value of the angular tetehedrality parameter for each of the input atoms"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "GROUP", "DISTANCE_MATRIX", "NEIGHBORS", "GSYMFUNC_THREEBODY"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - the list of atoms for which the symmetry function is being \n                          calculated and the atoms that can be in the environments \n               SPECIESA - the list of atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESB, \n                          which specifies the atoms that are in the environment. \n               SPECIESB - the list of atoms that can be in the environments of each \n                          of the atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESA, \n                          which specifies the atoms for which the symmetry function is \n                          being calculated. \n\nThe following arguments are compulsory: \n\n                 CUTOFF - ( default=-1 ) ignore distances that have a value larger \n                          than this cutoff \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                   MASK - the label for a vector that is used to determine which rows \n                          of the matrix are computed \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "TETRA_RADIAL": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TETRA_RADIAL",
    "description" : "Calculate the radial tetra CV",
    "module" : "symfunc",
    "displayname" : "TETRA_RADIAL",
     "dois" : ["10.1021/ct500320c"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SPECIES" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated and the atoms that can be in the environments", "multiple": 1, "actionlink": "none"},
       "SPECIESA" : { "type": "atoms", "description": "the list of atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "SPECIESB" : { "type": "atoms", "description": "the list of atoms that can be in the environments of each of the atoms for which the symmetry function is being calculated", "multiple": 1, "actionlink": "none"},
       "MASK" : { "type": "optional", "description": "the label for a vector that is used to determine which rows of the matrix are computed", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "CUTOFF" : { "type": "compulsory", "description": " ignore distances that have a value larger than this cutoff", "multiple": 0, "actionlink": "none", "default": "-1"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the value of the radial tetrahedrality parameter for each of the input atoms"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "CONTACT_MATRIX", "GROUP", "DISTANCE_MATRIX", "NEIGHBORS", "ONES", "MATRIX_VECTOR_PRODUCT"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                SPECIES - the list of atoms for which the symmetry function is being \n                          calculated and the atoms that can be in the environments \n               SPECIESA - the list of atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESB, \n                          which specifies the atoms that are in the environment. \n               SPECIESB - the list of atoms that can be in the environments of each \n                          of the atoms for which the symmetry function is being \n                          calculated. This keyword must be used in conjunction with SPECIESA, \n                          which specifies the atoms for which the symmetry function is \n                          being calculated. \n\nThe following arguments are compulsory: \n\n                 CUTOFF - ( default=-1 ) ignore distances that have a value larger \n                          than this cutoff \n\nIn addition you may use the following options: \n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                   MASK - the label for a vector that is used to determine which rows \n                          of the matrix are computed \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "TIME": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TIME",
    "description" : "retrieve the time of the simulation to be used elsewhere",
    "module" : "generic",
    "displayname" : "TIME",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the time since the start of the trajectory"
         }
       }
    },
    "help" : ""
  },
  "TOPOLOGY_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TOPOLOGY_MATRIX",
    "description" : "Adjacency matrix in which two atoms are adjacent if they are connected topologically",
    "module" : "adjmat",
    "displayname" : "TOPOLOGY_MATRIX",
     "dois" : ["10.1021/acs.jctc.6b01073"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "a vector that is used to used to determine which rows of the adjancency matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "GROUP" : { "type": "atoms", "description": "the atoms for which you would like to calculate the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "GROUPA" : { "type": "atoms", "description": "when you are calculating the adjacency matrix between two sets of atoms this keyword is used to specify the atoms along with the keyword GROUPB", "multiple": 1, "actionlink": "none"},
       "GROUPB" : { "type": "atoms", "description": "when you are calculating the adjacency matrix between two sets of atoms this keyword is used to specify the atoms along with the keyword GROUPA", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the atoms for which you would like to calculate the adjacency matrix", "multiple": 1, "actionlink": "none"},
       "COMPONENTS" : { "type": "flag", "description": " also calculate the components of the vector connecting the atoms in the contact matrix", "multiple": 0, "actionlink": "none", "default": "off"},
       "NOPBC" : { "type": "flag", "description": " don't use pbc", "multiple": 0, "actionlink": "none", "default": "off"},
       "NL_CUTOFF" : { "type": "compulsory", "description": " The cutoff for the neighbor list", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "NL_STRIDE" : { "type": "compulsory", "description": " The frequency with which we are updating the atoms in the neighbor list", "multiple": 0, "actionlink": "none", "default": "1"},
       "BACKGROUND_ATOMS" : { "type": "atoms", "description": "the list of atoms that should be considered as part of the background density", "multiple": 1, "actionlink": "none"},
       "SWITCH" : { "type": "compulsory", "description": "This keyword is used if you want to employ an alternative to the continuous swiching function defined above", "multiple": 0, "actionlink": "LESS_THAN"},
       "RADIUS" : { "type": "compulsory", "description": "swtiching function that acts upon the radial distance of the atom from the center of the cylinder", "multiple": 0, "actionlink": "LESS_THAN"},
       "CYLINDER_SWITCH" : { "type": "compulsory", "description": "a switching function on ( r_ij ", "multiple": 0, "actionlink": "LESS_THAN"},
       "BIN_SIZE" : { "type": "compulsory", "description": "the size to use for the bins", "multiple": 0, "actionlink": "none"},
       "DENSITY_THRESHOLD" : { "type": "compulsory", "description": "a switching function that acts upon the maximum density in the cylinder", "multiple": 0, "actionlink": "LESS_THAN"},
       "SIGMA" : { "type": "compulsory", "description": "the width of the function to be used for kernel density estimation", "multiple": 0, "actionlink": "none"},
       "KERNEL" : { "type": "compulsory", "description": " the type of kernel function to be used", "multiple": 0, "actionlink": "none", "default": "gaussian"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "w" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "a matrix containing the weights for the bonds between each pair of atoms"
         },
         "x" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the x axis"
         },
         "y" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the y axis"
         },
         "z" : {
           "flag": "COMPONENTS",
           "type": "matrix",
           "description": "the projection of the bond on the z axis"
         },
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "a matrix containing the weights for the bonds between each pair of atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - the atoms for which you would like to calculate the \n                          adjacency matrix. For more information on how to specify lists of \n                          atoms see \ref Group \n                 GROUPA - when you are calculating the adjacency matrix between two \n                          sets of atoms this keyword is used to specify the atoms along \n                          with the keyword GROUPB. For more information on how to specify \n                          lists of atoms see \ref Group \n                 GROUPB - when you are calculating the adjacency matrix between two \n                          sets of atoms this keyword is used to specify the atoms along \n                          with the keyword GROUPA. For more information on how to specify \n                          lists of atoms see \ref Group \n                  ATOMS - the atoms for which you would like to calculate the \n                          adjacency matrix. This is a depracated syntax that is equivalent to \n                          GROUP. You are strongly recommened to use GROUP instead of ATOMS. \n       BACKGROUND_ATOMS - the list of atoms that should be considered as part of the \n                          background density. For more information on how to specify lists of \n                          atoms see \ref Group \n\nThe following arguments are compulsory: \n\n              NL_CUTOFF - ( default=0.0 ) The cutoff for the neighbor list. A value \n                          of 0 means we are not using a neighbor list \n              NL_STRIDE - ( default=1 ) The frequency with which we are updating the \n                          atoms in the neighbor list \n                 SWITCH - This keyword is used if you want to employ an alternative \n                          to the continuous swiching function defined above. The \n                          following provides information on the \ref switchingfunction that are \n                          available. When this keyword is present you no longer need the NN, MM, \n                          D_0 and R_0 keywords. \n                 RADIUS - swtiching function that acts upon the radial distance of \n                          the atom from the center of the cylinder \n        CYLINDER_SWITCH - a switching function on ( r_ij . r_ik - 1 )/r_ij \n               BIN_SIZE - the size to use for the bins \n      DENSITY_THRESHOLD - a switching function that acts upon the maximum density in \n                          the cylinder \n                  SIGMA - the width of the function to be used for kernel density \n                          estimation \n                 KERNEL - ( default=gaussian ) the type of kernel function to be used \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n             COMPONENTS - ( default=off ) also calculate the components of the vector \n                          connecting the atoms in the contact matrix \n                  NOPBC - ( default=off ) don't use pbc \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a vector that is used to used to determine which rows of \n                          the adjancency matrix to compute \n\n"
  },
  "TORSION": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TORSION",
    "description" : "Calculate one or multiple torsional angles.",
    "module" : "colvar",
    "displayname" : "TORSION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the four atoms involved in the torsional angle", "multiple": 1, "actionlink": "none"},
       "AXIS" : { "type": "atoms", "description": "two atoms that define an axis", "multiple": 1, "actionlink": "none"},
       "VECTORA" : { "type": "atoms", "description": "two atoms that define a vector", "multiple": 1, "actionlink": "none"},
       "VECTORB" : { "type": "atoms", "description": "two atoms that define a vector", "multiple": 1, "actionlink": "none"},
       "VECTOR1" : { "type": "deprecated", "description": "You should use VECTORA instead of this keyword which was used in older versions of PLUMED and is provided for back compatibility only", "multiple": 0, "actionlink": "none"},
       "VECTOR2" : { "type": "deprecated", "description": "You should use VECTORB instead of this keyword which was used in older versions of PLUMED and is provided for back compatibility only", "multiple": 0, "actionlink": "none"},
       "COSINE" : { "type": "flag", "description": " calculate cosine instead of dihedral", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the TORSION involving these atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the four atoms involved in the torsional angle \n                   AXIS - two atoms that define an axis. You can use this to find the \n                          angle in the plane perpendicular to the axis between the vectors \n                          specified using the VECTORA and VECTORB keywords. \n                VECTORA - two atoms that define a vector. You can use this in \n                          combination with VECTOR2 and AXIS \n                VECTORB - two atoms that define a vector. You can use this in \n                          combination with VECTOR1 and AXIS \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 COSINE - ( default=off ) calculate cosine instead of dihedral \n"
  },
  "TORSIONS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TORSIONS",
    "description" : "Calculate whether or not a set of torsional angles are within a particular range.",
    "module" : "multicolvar",
    "displayname" : "TORSIONS",
    "replacement" : "TORSION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the four atoms involved in the torsional angle", "multiple": 1, "actionlink": "none"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the TORSION for each set of three atoms that were specified"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "TORSION"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the four atoms involved in the torsional angle. For more \n                          information on how to specify lists of atoms see \ref Group \n\nThe following options are available\n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "TORSIONS_MATRIX": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TORSIONS_MATRIX",
    "description" : "Calculate the matrix of torsions between two vectors of molecules",
    "module" : "adjmat",
    "displayname" : "TORSIONS_MATRIX",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " do the calculation in serial", "multiple": 0, "actionlink": "none", "pagelink": "actions.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "a matrix that is used to used to determine which elements of this matrix to compute", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "ARG" : { "type": "compulsory", "description": "an Nx3 and a 3xN matrix that contain the bond vectors that you would like to determine the torsion angles between", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "POSITIONS1" : { "type": "atoms", "description": "the positions to use for the molecules specified using the first argument", "multiple": 1, "actionlink": "none"},
       "POSITIONS2" : { "type": "atoms", "description": "the positions to use for the molecules specified using the second argument", "multiple": 1, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "the matrix of torsions between the two vectors of input directors"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n             POSITIONS1 - the positions to use for the molecules specified using the \n                          first argument. For more information on how to specify lists of \n                          atoms see \ref Group \n             POSITIONS2 - the positions to use for the molecules specified using the \n                          second argument. For more information on how to specify lists of \n                          atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                    ARG - an Nx3 and a 3xN matrix that contain the bond vectors that \n                          you would like to determine the torsion angles between \n\nIn addition you may use the following options: \n\n                 SERIAL - ( default=off ) do the calculation in serial. Do not \n                          parallelize \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - a matrix that is used to used to determine which elements \n                          of this matrix to compute \n\n"
  },
  "TORSION_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TORSION_SCALAR",
    "description" : "",
    "module" : "colvar",
    "displayname" : "TORSION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the four atoms involved in the torsional angle", "multiple": 1, "actionlink": "none"},
       "AXIS" : { "type": "atoms", "description": "two atoms that define an axis", "multiple": 1, "actionlink": "none"},
       "VECTORA" : { "type": "atoms", "description": "two atoms that define a vector", "multiple": 1, "actionlink": "none"},
       "VECTORB" : { "type": "atoms", "description": "two atoms that define a vector", "multiple": 1, "actionlink": "none"},
       "VECTOR1" : { "type": "deprecated", "description": "You should use VECTORA instead of this keyword which was used in older versions of PLUMED and is provided for back compatibility only", "multiple": 0, "actionlink": "none"},
       "VECTOR2" : { "type": "deprecated", "description": "You should use VECTORB instead of this keyword which was used in older versions of PLUMED and is provided for back compatibility only", "multiple": 0, "actionlink": "none"},
       "COSINE" : { "type": "flag", "description": " calculate cosine instead of dihedral", "multiple": 0, "actionlink": "none", "default": "off"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar/vector",
           "description": "the TORSION involving these atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the four atoms involved in the torsional angle \n                   AXIS - two atoms that define an axis. You can use this to find the \n                          angle in the plane perpendicular to the axis between the vectors \n                          specified using the VECTORA and VECTORB keywords. \n                VECTORA - two atoms that define a vector. You can use this in \n                          combination with VECTOR2 and AXIS \n                VECTORB - two atoms that define a vector. You can use this in \n                          combination with VECTOR1 and AXIS \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 COSINE - ( default=off ) calculate cosine instead of dihedral \n"
  },
  "TORSION_VECTOR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TORSION_VECTOR",
    "description" : "",
    "module" : "colvar",
    "displayname" : "TORSION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "ATOMS" : { "type": "atoms", "description": "the four atoms involved in the torsional angle", "multiple": 1, "actionlink": "none"},
       "AXIS" : { "type": "atoms", "description": "two atoms that define an axis", "multiple": 1, "actionlink": "none"},
       "VECTORA" : { "type": "atoms", "description": "two atoms that define a vector", "multiple": 1, "actionlink": "none"},
       "VECTORB" : { "type": "atoms", "description": "two atoms that define a vector", "multiple": 1, "actionlink": "none"},
       "VECTOR1" : { "type": "deprecated", "description": "You should use VECTORA instead of this keyword which was used in older versions of PLUMED and is provided for back compatibility only", "multiple": 0, "actionlink": "none"},
       "VECTOR2" : { "type": "deprecated", "description": "You should use VECTORB instead of this keyword which was used in older versions of PLUMED and is provided for back compatibility only", "multiple": 0, "actionlink": "none"},
       "COSINE" : { "type": "flag", "description": " calculate cosine instead of dihedral", "multiple": 0, "actionlink": "none", "default": "off"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "USEGPU" : { "type": "flag", "description": " run this calculation on the GPU", "multiple": 0, "actionlink": "none", "pagelink": "gpu.md", "default": "off"},
       "MASK" : { "type": "optional", "description": "the label for a sparse vector that should be used to determine which elements of the vector should be computed", "multiple": 0, "actionlink": "none", "argtype": "vector"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the TORSION for each set of specified atoms"
         }
       }
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the four atoms involved in the torsional angle \n                   AXIS - two atoms that define an axis. You can use this to find the \n                          angle in the plane perpendicular to the axis between the vectors \n                          specified using the VECTORA and VECTORB keywords. \n                VECTORA - two atoms that define a vector. You can use this in \n                          combination with VECTOR2 and AXIS \n                VECTORB - two atoms that define a vector. You can use this in \n                          combination with VECTOR1 and AXIS \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n                 COSINE - ( default=off ) calculate cosine instead of dihedral \n                 USEGPU - ( default=off ) run this calculation on the GPU \n                   MASK - the label for a sparse vector that should be used to \n                          determine which elements of the vector should be computed \n\n"
  },
  "TRANSPOSE": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/TRANSPOSE",
    "description" : "Calculate the transpose of a matrix",
    "module" : "matrixtools",
    "displayname" : "TRANSPOSE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "MATRIX" : { "type": "deprecated", "description": "You should use ARG instead of this keyword which was used in older versions of PLUMED and is provided for back compatibility only", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the label of the vector or matrix that should be transposed", "multiple": 0, "actionlink": "none", "argtype": "vector/matrix"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector/matrix",
           "description": "the transpose of the input matrix"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the label of the vector or matrix that should be transposed \n"
  },
  "UNITS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/UNITS",
    "description" : "This command sets the internal units for the code.",
    "module" : "setup",
    "displayname" : "UNITS",
     "dois" : [],
    "syntax" : {
       "LENGTH" : { "type": "optional", "description": "the units of lengths", "multiple": 0, "actionlink": "none"},
       "ENERGY" : { "type": "optional", "description": "the units of energy", "multiple": 0, "actionlink": "none"},
       "TIME" : { "type": "optional", "description": "the units of time", "multiple": 0, "actionlink": "none"},
       "MASS" : { "type": "optional", "description": "the units of masses", "multiple": 0, "actionlink": "none"},
       "CHARGE" : { "type": "optional", "description": "the units of charges", "multiple": 0, "actionlink": "none"},
       "NATURAL" : { "type": "flag", "description": " use natural units", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following options are available\n\n                NATURAL - ( default=off ) use natural units \n                 LENGTH - the units of lengths. Either specify a conversion factor \n                          from the default, nm, or use one of the defined units, A (for \n                          angstroms), um (for micrometer), and Bohr. \n                 ENERGY - the units of energy. Either specify a conversion factor \n                          from the default, kj/mol, or use one of the defined units, \n                          j/mol, kcal/mol and Ha (for Hartree) \n                   TIME - the units of time. Either specify a conversion factor from \n                          the default, ps, or use one of the defined units, ns, fs, and \n                          atomic \n                   MASS - the units of masses. Specify a conversion factor from the \n                          default, amu \n                 CHARGE - the units of charges. Specify a conversion factor from the \n                          default, e \n\n"
  },
  "UPDATE_IF": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/UPDATE_IF",
    "description" : "Conditional update of other actions.",
    "module" : "generic",
    "displayname" : "UPDATE_IF",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of values that should be used to make the decision on whether to update or not", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the quantities of interest should be output", "multiple": 0, "actionlink": "none", "default": "1"},
       "END" : { "type": "flag", "description": " end", "multiple": 0, "actionlink": "none", "default": "off"},
       "LESS_THAN" : { "type": "optional", "description": "upper bound", "multiple": 0, "actionlink": "none"},
       "MORE_THAN" : { "type": "optional", "description": "lower bound", "multiple": 0, "actionlink": "none"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of values that should be used to make the \n                          decision on whether to update or not \n                 STRIDE - ( default=1 ) the frequency with which the quantities of \n                          interest should be output \n\nIn addition you may use the following options: \n\n                    END - ( default=off ) end \n              LESS_THAN - upper bound \n              MORE_THAN - lower bound \n\n"
  },
  "UPPER_WALLS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/UPPER_WALLS",
    "description" : "Defines a wall for the value of one or more collective variables,",
    "module" : "bias",
    "displayname" : "UPPER_WALLS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "optional", "description": "the arguments on which the bias is acting", "multiple": 1, "actionlink": "none", "argtype": "scalar/vector"},
       "AT" : { "type": "compulsory", "description": "the positions of the wall", "multiple": 0, "actionlink": "none"},
       "KAPPA" : { "type": "compulsory", "description": "the force constant for the wall", "multiple": 0, "actionlink": "none"},
       "OFFSET" : { "type": "compulsory", "description": " the offset for the start of the wall", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "EXP" : { "type": "compulsory", "description": " the powers for the walls", "multiple": 0, "actionlink": "none", "default": "2.0"},
       "EPS" : { "type": "compulsory", "description": " the values for s_i in the expression for a wall", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "force2" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the squared force due to this bias potential"
         }
       }
    },
    "needs" : ["COMBINE", "CUSTOM", "SUM", "BIASVALUE"],
    "help" : "\nThe following arguments are compulsory: \n\n                     AT - the positions of the wall. The a_i in the expression for a \n                          wall. \n                  KAPPA - the force constant for the wall. The k_i in the expression \n                          for a wall. \n                 OFFSET - ( default=0.0 ) the offset for the start of the wall. The \n                          o_i in the expression for a wall. \n                    EXP - ( default=2.0 ) the powers for the walls. The e_i in the \n                          expression for a wall. \n                    EPS - ( default=1.0 ) the values for s_i in the expression for a \n                          wall \n                    ARG - the arguments on which the bias is acting. You can use \n                          multiple instances of this keyword i.e. ARG1, ARG2, ARG3... \n\n"
  },
  "UPPER_WALLS_SCALAR": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/UPPER_WALLS_SCALAR",
    "description" : "",
    "module" : "bias",
    "displayname" : "UPPER_WALLS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "NO_ACTION_LOG" : { "type": "hidden", "description": "suppresses printing from action on the log", "multiple": 0, "actionlink": "none"},
       "AT" : { "type": "compulsory", "description": "the positions of the wall", "multiple": 0, "actionlink": "none"},
       "KAPPA" : { "type": "compulsory", "description": "the force constant for the wall", "multiple": 0, "actionlink": "none"},
       "OFFSET" : { "type": "compulsory", "description": " the offset for the start of the wall", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "EXP" : { "type": "compulsory", "description": " the powers for the walls", "multiple": 0, "actionlink": "none", "default": "2.0"},
       "EPS" : { "type": "compulsory", "description": " the values for s_i in the expression for a wall", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "force2" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the squared force due to this bias potential"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n                     AT - the positions of the wall. The a_i in the expression for a \n                          wall. \n                  KAPPA - the force constant for the wall. The k_i in the expression \n                          for a wall. \n                 OFFSET - ( default=0.0 ) the offset for the start of the wall. The \n                          o_i in the expression for a wall. \n                    EXP - ( default=2.0 ) the powers for the walls. The e_i in the \n                          expression for a wall. \n                    EPS - ( default=1.0 ) the values for s_i in the expression for a \n                          wall \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n"
  },
  "UWALLS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/UWALLS",
    "description" : "Add lower walls to a vector of quantities",
    "module" : "multicolvar",
    "displayname" : "UWALLS",
    "replacement" : "UPPER_WALLS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "DATA" : { "type": "compulsory", "description": "the values you want to restrain", "multiple": 0, "actionlink": "none"},
       "AT" : { "type": "compulsory", "description": "the radius of the sphere", "multiple": 0, "actionlink": "none"},
       "KAPPA" : { "type": "compulsory", "description": "the force constant for the wall", "multiple": 0, "actionlink": "none"},
       "OFFSET" : { "type": "compulsory", "description": " the offset for the start of the wall", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "EXP" : { "type": "compulsory", "description": " the powers for the walls", "multiple": 0, "actionlink": "none", "default": "2.0"},
       "EPS" : { "type": "compulsory", "description": " the values for s_i in the expression for a wall", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "CATOMS" : { "type": "atoms", "description": "all the angles between the bonds that radiate out from these central atom are computed", "multiple": 1, "actionlink": "none"},
       "GROUP" : { "type": "atoms", "description": "a list of angls between pairs of bonds connecting one of the atoms specified using the CATOM command and two of the atoms specified here are computed", "multiple": 1, "actionlink": "none"},
       "SWITCH" : { "type": "compulsory", "description": "the switching function specifies that only those bonds that have a length that is less than a certain threshold are considered", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "force2" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the squared force due to this bias potential"
         }
       }
    },
    "needs" : ["UPPER_WALLS"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                 CATOMS - all the angles between the bonds that radiate out from \n                          these central atom are computed. For more information on how to \n                          specify lists of atoms see \ref Group \n                  GROUP - a list of angls between pairs of bonds connecting one of \n                          the atoms specified using the CATOM command and two of the \n                          atoms specified here are computed. For more information on how to \n                          specify lists of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                   DATA - the values you want to restrain \n                     AT - the radius of the sphere \n                  KAPPA - the force constant for the wall. The k_i in the expression \n                          for a wall. \n                 OFFSET - ( default=0.0 ) the offset for the start of the wall. The \n                          o_i in the expression for a wall. \n                    EXP - ( default=2.0 ) the powers for the walls. The e_i in the \n                          expression for a wall. \n                    EPS - ( default=1.0 ) the values for s_i in the expression for a \n                          wall \n                 SWITCH - the switching function specifies that only those bonds that \n                          have a length that is less than a certain threshold are \n                          considered \n"
  },
  "VES_DELTA_F": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/VES_DELTA_F",
    "description" : "Implementation of VES Delta F method",
    "module" : "ves",
    "displayname" : "VES_DELTA_F",
     "dois" : ["10.1021/acs.jctc.9b00032"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "temperature is compulsory, but it can be sometimes fetched from the MD engine", "multiple": 0, "actionlink": "none"},
       "FILE_F" : { "type": "compulsory", "description": "names of files containing local free energies and derivatives", "multiple": 1, "actionlink": "none"},
       "NORMALIZE" : { "type": "flag", "description": " normalize all local free energies so that alpha will be (approx) Delta F", "multiple": 0, "actionlink": "none", "default": "off"},
       "NO_MINTOZERO" : { "type": "flag", "description": " leave local free energies as provided, without shifting them to zero min", "multiple": 0, "actionlink": "none", "default": "off"},
       "BIASFACTOR" : { "type": "compulsory", "description": " the gamma bias factor used for well-tempered target p(s)", "multiple": 0, "actionlink": "none", "default": "0"},
       "TG_STRIDE" : { "type": "optional", "description": " number of AV_STRIDE between updates of target p(s) and reweighing factor c(t)", "multiple": 0, "actionlink": "none", "default": "1"},
       "M_STEP" : { "type": "compulsory", "description": " the mu step used for the Omega functional minimization", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "AV_STRIDE" : { "type": "compulsory", "description": " number of simulation steps between alpha updates", "multiple": 0, "actionlink": "none", "default": "500"},
       "TAU_MEAN" : { "type": "optional", "description": "exponentially decaying average for alpha (rescaled using AV_STRIDE)", "multiple": 0, "actionlink": "none"},
       "INITIAL_ALPHA" : { "type": "optional", "description": " an initial guess for the bias potential parameter alpha", "multiple": 0, "actionlink": "none", "default": "0"},
       "DAMPING_OFF" : { "type": "flag", "description": " do not use an AdaGrad-like term to rescale M_STEP", "multiple": 0, "actionlink": "none", "default": "off"},
       "ALPHA_FILE" : { "type": "compulsory", "description": " file name for output minimization parameters", "multiple": 0, "actionlink": "none", "default": "ALPHA"},
       "PRINT_STRIDE" : { "type": "optional", "description": " stride for printing to ALPHA_FILE", "multiple": 0, "actionlink": "none", "default": "10"},
       "FMT" : { "type": "optional", "description": "specify format for ALPHA_FILE", "multiple": 0, "actionlink": "none"},
       "SERIAL" : { "type": "flag", "description": " perform the calculation in serial even if multiple tasks are available", "multiple": 0, "actionlink": "none", "default": "off"},
       "MULTIPLE_WALKERS" : { "type": "flag", "description": " use multiple walkers connected via MPI for the optimization", "multiple": 0, "actionlink": "none", "default": "off"},
       "RESTART" : { "type": "optional", "description": "allows per-action setting of restart (YES/NO/AUTO)", "multiple": 0, "actionlink": "none"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "rct" : {
           "flag": "default",
           "type": "scalar",
           "description": "the reweighting factor c(t)"
         },
         "work" : {
           "flag": "default",
           "type": "scalar",
           "description": "the work done by the bias in one AV_STRIDE"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n                 FILE_F - names of files containing local free energies and \n                          derivatives. The first one, FILE_F0, is used as reference for all the \n                          free energy differences.. You can use multiple instances of this \n                          keyword i.e. FILE_F1, FILE_F2, FILE_F3... \n             BIASFACTOR - ( default=0 ) the gamma bias factor used for well-tempered \n                          target p(s). Set to 0 for non-tempered flat target \n                 M_STEP - ( default=1.0 ) the mu step used for the Omega functional \n                          minimization \n              AV_STRIDE - ( default=500 ) number of simulation steps between alpha \n                          updates \n             ALPHA_FILE - ( default=ALPHA ) file name for output minimization \n                          parameters \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n              NORMALIZE - ( default=off ) normalize all local free energies so that \n                          alpha will be (approx) Delta F \n           NO_MINTOZERO - ( default=off ) leave local free energies as provided, \n                          without shifting them to zero min \n            DAMPING_OFF - ( default=off ) do not use an AdaGrad-like term to rescale \n                          M_STEP \n                 SERIAL - ( default=off ) perform the calculation in serial even if \n                          multiple tasks are available \n       MULTIPLE_WALKERS - ( default=off ) use multiple walkers connected via MPI for \n                          the optimization \n                   TEMP - temperature is compulsory, but it can be sometimes fetched \n                          from the MD engine \n              TG_STRIDE - ( default=1 ) number of AV_STRIDE between updates of target \n                          p(s) and reweighing factor c(t) \n               TAU_MEAN - exponentially decaying average for alpha (rescaled using \n                          AV_STRIDE). Should be used only in very specific cases \n          INITIAL_ALPHA - ( default=0 ) an initial guess for the bias potential \n                          parameter alpha \n           PRINT_STRIDE - ( default=10 ) stride for printing to ALPHA_FILE \n                    FMT - specify format for ALPHA_FILE \n                RESTART - allows per-action setting of restart (YES/NO/AUTO) \n\n"
  },
  "VES_LINEAR_EXPANSION": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/VES_LINEAR_EXPANSION",
    "description" : "Linear basis set expansion bias.",
    "module" : "ves",
    "displayname" : "VES_LINEAR_EXPANSION",
     "dois" : ["10.1103/PhysRevLett.115.070601"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the labels of the scalars on which the bias will act", "multiple": 0, "actionlink": "none", "argtype": "scalar"},
       "STRIDE" : { "type": "hidden", "description": "the frequency with which the forces due to the bias should be calculated", "multiple": 0, "actionlink": "none"},
       "TEMP" : { "type": "optional", "description": "the system temperature - this is needed if the MD code does not pass the temperature to PLUMED", "multiple": 0, "actionlink": "none"},
       "BIAS_FILE" : { "type": "optional", "description": "filename of the file on which the bias should be written out", "multiple": 0, "actionlink": "none"},
       "FES_FILE" : { "type": "optional", "description": "filename of the file on which the FES should be written out", "multiple": 0, "actionlink": "none"},
       "TARGETDIST_FILE" : { "type": "optional", "description": "filename of the file on which the target distribution should be written out", "multiple": 0, "actionlink": "none"},
       "OPTIMIZATION_THRESHOLD" : { "type": "optional", "description": "Threshold value to turn off optimization of localized basis functions", "multiple": 0, "actionlink": "none"},
       "COEFFS" : { "type": "optional", "description": "read in the coefficients from files", "multiple": 0, "actionlink": "none"},
       "TARGET_DISTRIBUTION" : { "type": "optional", "description": "the label of the target distribution to be used", "multiple": 0, "actionlink": "none"},
       "BIAS_CUTOFF" : { "type": "optional", "description": "cutoff the bias such that it only fills the free energy surface up to certain level F_cutoff, here you should give the value of the F_cutoff", "multiple": 0, "actionlink": "none"},
       "BIAS_CUTOFF_FERMI_LAMBDA" : { "type": "optional", "description": "the lambda value used in the Fermi switching function for the bias cutoff (BIAS_CUTOFF), the default value is 10", "multiple": 0, "actionlink": "none"},
       "GRID_BINS" : { "type": "optional", "description": "the number of bins used for the grid", "multiple": 0, "actionlink": "none"},
       "PROJ_ARG" : { "type": "optional", "description": "arguments for doing projections of the FES or the target distribution", "multiple": 1, "actionlink": "none"},
       "BASIS_FUNCTIONS" : { "type": "compulsory", "description": "the label of the one dimensional basis functions that should be used", "multiple": 0, "actionlink": "none"},
       "GRID_FMT" : { "type": "compulsory", "description": " the format to use when outputting the numbers in the grids", "multiple": 0, "actionlink": "none", "default": "%14.9f"},
       "output" : {
         "bias" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the bias potential"
         },
         "force2" : {
           "flag": "default",
           "type": "scalar",
           "description": "the instantaneous value of the squared force due to this bias potential"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the labels of the scalars on which the bias will act \n        BASIS_FUNCTIONS - the label of the one dimensional basis functions that \n                          should be used. \n               GRID_FMT - ( default=%14.9f ) the format to use when outputting the \n                          numbers in the grids \n\nIn addition you may use the following options: \n\n  NUMERICAL_DERIVATIVES - ( default=off ) calculate the derivatives for these \n                          quantities numerically \n                   TEMP - the system temperature - this is needed if the MD code does \n                          not pass the temperature to PLUMED. \n              BIAS_FILE - filename of the file on which the bias should be written \n                          out. By default it is bias.LABEL.data. Note that suffixes \n                          indicating the iteration number (iter-#) are added to the filename \n                          when optimizing coefficients. \n               FES_FILE - filename of the file on which the FES should be written \n                          out. By default it is fes.LABEL.data. Note that suffixes \n                          indicating the iteration number (iter-#) are added to the filename \n                          when optimizing coefficients. \n        TARGETDIST_FILE - filename of the file on which the target distribution \n                          should be written out. By default it is targetdist.LABEL.data. \n                          Note that suffixes indicating the iteration number (iter-#) are \n                          added to the filename when optimizing coefficients and the target \n                          distribution is dynamic. \n OPTIMIZATION_THRESHOLD - Threshold value to turn off optimization of localized basis \n                          functions. \n                 COEFFS - read in the coefficients from files. \n    TARGET_DISTRIBUTION - the label of the target distribution to be used. \n            BIAS_CUTOFF - cutoff the bias such that it only fills the free energy \n                          surface up to certain level F_cutoff, here you should give the \n                          value of the F_cutoff. \nBIAS_CUTOFF_FERMI_LAMBDA - the lambda value used in the Fermi switching function for \n                          the bias cutoff (BIAS_CUTOFF), the default value is 10.0. \n              GRID_BINS - the number of bins used for the grid. The default value is \n                          100 bins per dimension. \n               PROJ_ARG - arguments for doing projections of the FES or the target \n                          distribution.. You can use multiple instances of this keyword i.e. \n                          PROJ_ARG1, PROJ_ARG2, PROJ_ARG3... \n\n"
  },
  "VES_OUTPUT_BASISFUNCTIONS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/VES_OUTPUT_BASISFUNCTIONS",
    "description" : "Output basis functions to file.",
    "module" : "ves",
    "displayname" : "VES_OUTPUT_BASISFUNCTIONS",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "BASIS_FUNCTIONS" : { "type": "compulsory", "description": "the label of the basis functions that you want to use", "multiple": 0, "actionlink": "none"},
       "GRID_BINS" : { "type": "optional", "description": "the number of bins used for the grid for writing the basis function values and derivatives", "multiple": 0, "actionlink": "none"},
       "GRID_MIN" : { "type": "optional", "description": "the minimum of the grid for writing the basis function values and derivatives", "multiple": 0, "actionlink": "none"},
       "GRID_MAX" : { "type": "optional", "description": "the maximum of the grid for writing the basis function values and derivatives", "multiple": 0, "actionlink": "none"},
       "FILE_VALUES" : { "type": "optional", "description": "filename of the file on which the basis function values are written", "multiple": 0, "actionlink": "none"},
       "FILE_DERIVS" : { "type": "optional", "description": "filename of the file on which the basis function derivatives are written", "multiple": 0, "actionlink": "none"},
       "FORMAT_VALUES_DERIVS" : { "type": "optional", "description": "the numerical format of the basis function values and derivatives written to file", "multiple": 0, "actionlink": "none"},
       "FORMAT_VALUES" : { "type": "optional", "description": "the numerical format of the basis function derivatives written to file", "multiple": 0, "actionlink": "none"},
       "FORMAT_DERIVS" : { "type": "optional", "description": "the numerical format of the basis function values written to file", "multiple": 0, "actionlink": "none"},
       "FILE_TARGETDIST_AVERAGES" : { "type": "optional", "description": "filename of the file on which the averages over the target distributions are written", "multiple": 0, "actionlink": "none"},
       "FORMAT_TARGETDIST_AVERAGES" : { "type": "optional", "description": "the numerical format of the target distribution averages written to file", "multiple": 0, "actionlink": "none"},
       "FILE_TARGETDIST" : { "type": "optional", "description": "filename of the files on which the target distributions are written", "multiple": 0, "actionlink": "none"},
       "TARGET_DISTRIBUTION" : { "type": "optional", "description": "the target distribution to be used", "multiple": 1, "actionlink": "none"},
       "IGNORE_PERIODICITY" : { "type": "flag", "description": " if the periodicity of the basis functions should be ignored", "multiple": 0, "actionlink": "none", "default": "off"},
       "NUMERICAL_DERIVATIVES" : { "type": "flag", "description": " if the derivatives of the basis functions should be calculated numerically", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n        BASIS_FUNCTIONS - the label of the basis functions that you want to use \n\nIn addition you may use the following options: \n\n     IGNORE_PERIODICITY - ( default=off ) if the periodicity of the basis functions \n                          should be ignored. \n  NUMERICAL_DERIVATIVES - ( default=off ) if the derivatives of the basis functions \n                          should be calculated numerically. \n              GRID_BINS - the number of bins used for the grid for writing the basis \n                          function values and derivatives. The default value is 1000. \n               GRID_MIN - the minimum of the grid for writing the basis function \n                          values and derivatives. By default it is the minimum of the \n                          interval on which the basis functions are defined. \n               GRID_MAX - the maximum of the grid for writing the basis function \n                          values and derivatives. By default it is the maximum of the \n                          interval on which the basis functions are defined. \n            FILE_VALUES - filename of the file on which the basis function values are \n                          written. By default it is BF_LABEL.values.data. \n            FILE_DERIVS - filename of the file on which the basis function \n                          derivatives are written. By default it is BF_LABEL.derivs.data. \n   FORMAT_VALUES_DERIVS - the numerical format of the basis function values and \n                          derivatives written to file. By default it is %15.8f. . You can also \n                          use FORMAT_VALUES and FORMAT_DERIVS to give the numerical \n                          formats separately. \n          FORMAT_VALUES - the numerical format of the basis function derivatives \n                          written to file. By default it is %15.8f. \n          FORMAT_DERIVS - the numerical format of the basis function values written \n                          to file. By default it is %15.8f. \nFILE_TARGETDIST_AVERAGES - filename of the file on which the averages over the target \n                          distributions are written. By default it is \n                          BF_LABEL.targetdist-averages.data. \nFORMAT_TARGETDIST_AVERAGES - the numerical format of the target distribution averages \n                          written to file. By default it is %15.8f. \n        FILE_TARGETDIST - filename of the files on which the target distributions are \n                          written. By default it is BF_LABEL.targetdist-#.data. \n    TARGET_DISTRIBUTION - the target distribution to be used.. You can use multiple \n                          instances of this keyword i.e. TARGET_DISTRIBUTION1, \n                          TARGET_DISTRIBUTION2, TARGET_DISTRIBUTION3... \n\n"
  },
  "VES_OUTPUT_FES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/VES_OUTPUT_FES",
    "description" : "Tool to output biases and free energy surfaces for VES biases from previously obtained coefficients.",
    "module" : "ves",
    "displayname" : "VES_OUTPUT_FES",
     "dois" : [],
    "syntax" : {
       "BIAS" : { "type": "compulsory", "description": "the label of the VES bias for to output the free energy surfaces and the bias files", "multiple": 0, "actionlink": "none"},
       "COEFFS_INPUT" : { "type": "compulsory", "description": "the name of input coefficient file", "multiple": 0, "actionlink": "none"},
       "BIAS_OUTPUT" : { "type": "optional", "description": "how often the bias(es) should be written out to file", "multiple": 0, "actionlink": "none"},
       "FES_OUTPUT" : { "type": "optional", "description": "how often the FES(s) should be written out to file", "multiple": 0, "actionlink": "none"},
       "FES_PROJ_OUTPUT" : { "type": "optional", "description": "how often the projections of the FES(s) should be written out to file", "multiple": 0, "actionlink": "none"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n                   BIAS - the label of the VES bias for to output the free energy \n                          surfaces and the bias files \n           COEFFS_INPUT - the name of input coefficient file \n            BIAS_OUTPUT - how often the bias(es) should be written out to file. Note \n                          that the value is given in terms of coefficient iterations. \n             FES_OUTPUT - how often the FES(s) should be written out to file. Note \n                          that the value is given in terms of coefficient iterations. \n        FES_PROJ_OUTPUT - how often the projections of the FES(s) should be written \n                          out to file. Note that the value is given in terms of \n                          coefficient iterations. \n\n"
  },
  "VES_OUTPUT_TARGET_DISTRIBUTION": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/VES_OUTPUT_TARGET_DISTRIBUTION",
    "description" : "Output target distribution to file.",
    "module" : "ves",
    "displayname" : "VES_OUTPUT_TARGET_DISTRIBUTION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "GRID_MIN" : { "type": "compulsory", "description": "the lower bounds for the grid", "multiple": 0, "actionlink": "none"},
       "GRID_MAX" : { "type": "compulsory", "description": "the upper bounds for the grid", "multiple": 0, "actionlink": "none"},
       "GRID_BINS" : { "type": "compulsory", "description": "the number of bins used for the grid", "multiple": 0, "actionlink": "none"},
       "GRID_PERIODICITY" : { "type": "optional", "description": "specify if the individual arguments should be made periodic (YES) or not (NO)", "multiple": 0, "actionlink": "none"},
       "TARGETDIST_FILE" : { "type": "compulsory", "description": "filename of the file for writing the target distribution", "multiple": 0, "actionlink": "none"},
       "LOG_TARGETDIST_FILE" : { "type": "optional", "description": "filename of the file for writing the log of the target distribution", "multiple": 0, "actionlink": "none"},
       "TARGET_DISTRIBUTION" : { "type": "compulsory", "description": "the target distribution to be used", "multiple": 0, "actionlink": "none"},
       "FMT_GRIDS" : { "type": "optional", "description": "the numerical format of the target distribution grids written to file", "multiple": 0, "actionlink": "none"},
       "DO_1D_PROJECTIONS" : { "type": "flag", "description": " Also output the one-dimensional marginal distributions for multi-dimensional target distribution", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "\nThe following arguments are compulsory: \n\n               GRID_MIN - the lower bounds for the grid \n               GRID_MAX - the upper bounds for the grid \n              GRID_BINS - the number of bins used for the grid. \n        TARGETDIST_FILE - filename of the file for writing the target distribution \n    TARGET_DISTRIBUTION - the target distribution to be used. \n\nIn addition you may use the following options: \n\n      DO_1D_PROJECTIONS - ( default=off ) Also output the one-dimensional marginal \n                          distributions for multi-dimensional target distribution. \n       GRID_PERIODICITY - specify if the individual arguments should be made periodic \n                          (YES) or not (NO). By default all arguments are taken as not \n                          periodic. \n    LOG_TARGETDIST_FILE - filename of the file for writing the log of the target \n                          distribution \n              FMT_GRIDS - the numerical format of the target distribution grids \n                          written to file. By default it is %14.9f \n\n"
  },
  "VOLUME": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/VOLUME",
    "description" : "Calculate the volume the simulation box.",
    "module" : "colvar",
    "displayname" : "VOLUME",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "NUMERICAL_DERIVATIVES" : { "type": "hidden", "description": " calculate the derivatives for these quantities numerically", "multiple": 0, "actionlink": "none", "default": "off"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "scalar",
           "description": "the volume of simulation box"
         }
       }
    },
    "help" : ""
  },
  "VORONOI": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/VORONOI",
    "description" : "Do a voronoi analysis",
    "module" : "matrixtools",
    "displayname" : "VORONOI",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the distance/adjacency matrix that should be used to perform the voronoi analysis", "multiple": 0, "actionlink": "none", "argtype": "matrix"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "a matrix in which element ij is equal to one if the ij component of the input matrix is lower than all the ik elements of the matrix where k is not j and zero otherwise"
         }
       }
    },
    "needs" : ["NEIGHBORS"],
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the distance/adjacency matrix that should be used to \n                          perform the voronoi analysis \n"
  },
  "VSTACK": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/VSTACK",
    "description" : "Create a matrix by stacking vectors together",
    "module" : "valtools",
    "displayname" : "VSTACK",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the values that you would like to stack together to construct the output matrix", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "matrix",
           "description": "a matrix that contains the input vectors in its columns"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the values that you would like to stack together to \n                          construct the output matrix \n"
  },
  "WHAM": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/WHAM",
    "description" : "Calculate the weights for configurations using the weighted histogram analysis method.",
    "module" : "wham",
    "displayname" : "WHAM",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the stored values for the bias", "multiple": 0, "actionlink": "none", "argtype": "scalar/vector/matrix"},
       "MAXITER" : { "type": "compulsory", "description": " maximum number of iterations for WHAM algorithm", "multiple": 0, "actionlink": "none", "default": "1000"},
       "WHAMTOL" : { "type": "compulsory", "description": " threshold for convergence of WHAM algorithm", "multiple": 0, "actionlink": "none", "default": "1e-10"},
       "TEMP" : { "type": "optional", "description": "the system temperature", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the vector of WHAM weights to use for reweighting the elements in a time series"
         }
       }
    },
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the stored values for the bias \n                MAXITER - ( default=1000 ) maximum number of iterations for WHAM \n                          algorithm \n                WHAMTOL - ( default=1e-10 ) threshold for convergence of WHAM \n                          algorithm \n                   TEMP - the system temperature. This is not required if your MD \n                          code passes this quantity to PLUMED \n\n"
  },
  "WHAM_HISTOGRAM": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/WHAM_HISTOGRAM",
    "description" : "This can be used to output the a histogram using the weighted histogram technique",
    "module" : "wham",
    "displayname" : "WHAM_HISTOGRAM",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ARG" : { "type": "compulsory", "description": "the arguments that you would like to make the histogram for", "multiple": 0, "actionlink": "none"},
       "BIAS" : { "type": "compulsory", "description": " the value of the biases to use when performing WHAM", "multiple": 0, "actionlink": "none", "default": "*.bias"},
       "TEMP" : { "type": "compulsory", "description": "the temperature at which the simulation was run", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the data should be stored to perform WHAM", "multiple": 0, "actionlink": "none", "default": "1"},
       "GRID_MIN" : { "type": "compulsory", "description": "the minimum to use for the grid", "multiple": 0, "actionlink": "none"},
       "GRID_MAX" : { "type": "compulsory", "description": "the maximum to use for the grid", "multiple": 0, "actionlink": "none"},
       "GRID_BIN" : { "type": "compulsory", "description": "the number of bins to use for the grid", "multiple": 0, "actionlink": "none"},
       "BANDWIDTH" : { "type": "optional", "description": "the bandwidth for kernel density estimation", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "grid",
           "description": "the histogram that was generated using the WHAM weights"
         }
       }
    },
    "needs" : ["GATHER_REPLICAS", "CONCATENATE", "COLLECT", "WHAM", "KDE"],
    "help" : "\nThe following arguments are compulsory: \n\n                    ARG - the arguments that you would like to make the histogram for \n                   BIAS - ( default=*.bias ) the value of the biases to use when \n                          performing WHAM \n                   TEMP - the temperature at which the simulation was run \n                 STRIDE - ( default=1 ) the frequency with which the data should be \n                          stored to perform WHAM \n               GRID_MIN - the minimum to use for the grid \n               GRID_MAX - the maximum to use for the grid \n               GRID_BIN - the number of bins to use for the grid \n              BANDWIDTH - the bandwidth for kernel density estimation \n\n"
  },
  "WHAM_WEIGHTS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/WHAM_WEIGHTS",
    "description" : "Calculate and output weights for configurations using the weighted histogram analysis method.",
    "module" : "wham",
    "displayname" : "WHAM_WEIGHTS",
     "dois" : [],
    "syntax" : {
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "BIAS" : { "type": "compulsory", "description": " the value of the biases to use when performing WHAM", "multiple": 0, "actionlink": "none", "default": "*.bias"},
       "TEMP" : { "type": "optional", "description": "the temperature at which the simulation was run", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which the bias should be stored to perform WHAM", "multiple": 0, "actionlink": "none", "default": "1"},
       "FILE" : { "type": "compulsory", "description": "the file on which to output the WHAM weights", "multiple": 0, "actionlink": "none"},
       "FMT" : { "type": "optional", "description": "the format to use for the real numbers in the output file", "multiple": 0, "actionlink": "none"},
       "output" : {
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the weights that were calculated using WHAM"
         }
       }
    },
    "needs" : ["GATHER_REPLICAS", "CONCATENATE", "COLLECT", "WHAM", "DUMPVECTOR"],
    "help" : "\nThe following arguments are compulsory: \n\n                   BIAS - ( default=*.bias ) the value of the biases to use when \n                          performing WHAM \n                 STRIDE - ( default=1 ) the frequency with which the bias should be \n                          stored to perform WHAM \n                   FILE - the file on which to output the WHAM weights \n                   TEMP - the temperature at which the simulation was run \n                    FMT - the format to use for the real numbers in the output file \n\n"
  },
  "WHOLEMOLECULES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/WHOLEMOLECULES",
    "description" : "This action is used to rebuild molecules that can become split by the periodic boundary conditions.",
    "module" : "generic",
    "displayname" : "WHOLEMOLECULES",
     "dois" : ["10.1007/978-1-4939-9608-7_21"],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which molecules are reassembled", "multiple": 0, "actionlink": "none", "default": "1"},
       "ENTITY" : { "type": "atoms", "description": "the atoms that make up a molecule that you wish to align", "multiple": 1, "actionlink": "none"},
       "RESIDUES" : { "type": "atoms", "description": "this command specifies that the backbone atoms in a set of residues all must be aligned", "multiple": 1, "actionlink": "none"},
       "MOLTYPE" : { "type": "optional", "description": "the type of molecule that is under study", "multiple": 0, "actionlink": "none"},
       "EMST" : { "type": "flag", "description": " only for backward compatibility, as of PLUMED 2", "multiple": 0, "actionlink": "none", "default": "off"},
       "ADDREFERENCE" : { "type": "flag", "description": " Define the reference position of the first atom of each entity using a PDB file", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                 ENTITY - the atoms that make up a molecule that you wish to align. \n                          To specify multiple molecules use a list of ENTITY keywords: \n                          ENTITY0, ENTITY1,.... You can use multiple instances of this keyword \n                          i.e. ENTITY1, ENTITY2, ENTITY3... \n               RESIDUES - this command specifies that the backbone atoms in a set of \n                          residues all must be aligned. It must be used in tandem with the \n                          \ref MOLINFO action and the MOLTYPE keyword. If you wish to use \n                          all the residues from all the chains in your system you can do \n                          so by specifying all. Alternatively, if you wish to use a \n                          subset of the residues you can specify the particular residues you \n                          are interested in as a list of numbers \n\nThe following arguments are compulsory: \n\n                 STRIDE - ( default=1 ) the frequency with which molecules are \n                          reassembled. Unless you are completely certain about what you are doing \n                          leave this set equal to 1! \n\nIn addition you may use the following options: \n\n                   EMST - ( default=off ) only for backward compatibility, as of \n                          PLUMED 2.11 this is the default when using MOLINFO with WHOLE \n           ADDREFERENCE - ( default=off ) Define the reference position of the first \n                          atom of each entity using a PDB file \n                MOLTYPE - the type of molecule that is under study. This is used to \n                          define the backbone atoms \n\n"
  },
  "WRAPAROUND": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/WRAPAROUND",
    "description" : "Rebuild periodic boundary conditions around chosen atoms.",
    "module" : "generic",
    "displayname" : "WRAPAROUND",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "STRIDE" : { "type": "compulsory", "description": " the frequency with which molecules are reassembled", "multiple": 0, "actionlink": "none", "default": "1"},
       "AROUND" : { "type": "atoms", "description": "reference atoms", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "wrapped atoms", "multiple": 1, "actionlink": "none"},
       "GROUPBY" : { "type": "compulsory", "description": " group atoms so as not to break molecules", "multiple": 0, "actionlink": "none", "default": "1"},
       "PAIR" : { "type": "flag", "description": " Pair atoms in AROUND and ATOMS groups", "multiple": 0, "actionlink": "none", "default": "off"}
    },
    "help" : "The input trajectory can be in any of the following formats: \n\n                 AROUND - reference atoms. For more information on how to specify \n                          lists of atoms see \ref Group \n                  ATOMS - wrapped atoms. For more information on how to specify lists \n                          of atoms see \ref Group \n\nThe following arguments are compulsory: \n\n                 STRIDE - ( default=1 ) the frequency with which molecules are \n                          reassembled. Unless you are completely certain about what you are doing \n                          leave this set equal to 1! \n                GROUPBY - ( default=1 ) group atoms so as not to break molecules \n\nIn addition you may use the following options: \n\n                   PAIR - ( default=off ) Pair atoms in AROUND and ATOMS groups \n"
  },
  "XANGLES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/XANGLES",
    "description" : "Calculate the angle between an arbitrary vector and the positive x direction",
    "module" : "multicolvar",
    "displayname" : "XANGLES",
    "replacement" : "DISTANCE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the pairs of atoms that you would like to calculate the angles for", "multiple": 1, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "DISTANCE", "COMBINE"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the pairs of atoms that you would like to calculate the \n                          angles for. You can use multiple instances of this keyword i.e. \n                          ATOMS1, ATOMS2, ATOMS3... \n\nThe following options are available\n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "XDISTANCES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/XDISTANCES",
    "description" : "Calculate the x components of the vectors connecting one or many pairs of atoms.",
    "module" : "multicolvar",
    "displayname" : "XDISTANCES",
    "replacement" : "DISTANCE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "GROUP" : { "type": "atoms", "description": "Calculate the distance between each distinct pair of atoms in the group", "multiple": 1, "actionlink": "none"},
       "GROUPA" : { "type": "atoms", "description": "Calculate the distances between all the atoms in GROUPA and all the atoms in GROUPB", "multiple": 1, "actionlink": "none"},
       "GROUPB" : { "type": "atoms", "description": "Calculate the distances between all the atoms in GROUPA and all the atoms in GROUPB", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the pairs of atoms that you would like to calculate the angles for", "multiple": 1, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "COMPONENTS" : { "type": "flag", "description": " calculate the x, y and z components of the distance separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALED_COMPONENTS" : { "type": "flag", "description": " calculate the a, b and c scaled components of the distance separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "ORIGIN" : { "type": "atoms", "description": "calculate the distance of all the atoms specified using the ATOMS keyword from this point", "multiple": 1, "actionlink": "none"},
       "LOCATION" : { "type": "atoms", "description": "the location at which the CV is assumed to be in space", "multiple": 1, "actionlink": "none"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the DISTANCES between the each pair of atoms that were specified"
         },
         "x" : {
           "flag": "COMPONENTS",
           "type": "vector",
           "description": "the x-components of the distance vectors"
         },
         "y" : {
           "flag": "COMPONENTS",
           "type": "vector",
           "description": "the y-components of the distance vectors"
         },
         "z" : {
           "flag": "COMPONENTS",
           "type": "vector",
           "description": "the z-components of the distance vectors"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "GROUP", "DISTANCE", "CENTER"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - Calculate the distance between each distinct pair of atoms \n                          in the group \n                 GROUPA - Calculate the distances between all the atoms in GROUPA and \n                          all the atoms in GROUPB. This must be used in conjunction with \n                          GROUPB. \n                 GROUPB - Calculate the distances between all the atoms in GROUPA and \n                          all the atoms in GROUPB. This must be used in conjunction with \n                          GROUPA. \n                  ATOMS - the pairs of atoms that you would like to calculate the \n                          angles for. You can use multiple instances of this keyword i.e. \n                          ATOMS1, ATOMS2, ATOMS3... \n                 ORIGIN - calculate the distance of all the atoms specified using the \n                          ATOMS keyword from this point. For more information on how to \n                          specify lists of atoms see \ref Group \n               LOCATION - the location at which the CV is assumed to be in space. You \n                          can use multiple instances of this keyword i.e. LOCATION1, \n                          LOCATION2, LOCATION3... \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n             COMPONENTS - ( default=off ) calculate the x, y and z components of the \n                          distance separately and store them as label.x, label.y and label.z \n      SCALED_COMPONENTS - ( default=off ) calculate the a, b and c scaled components \n                          of the distance separately and store them as label.a, label.b \n                          and label.c \n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "XYTORSIONS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/XYTORSIONS",
    "description" : "Calculate the torsional angle around the x axis between an arbitrary vector and the positive y direction",
    "module" : "multicolvar",
    "displayname" : "XYTORSIONS",
    "replacement" : "TORSION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the pairs of atoms that you would like to calculate the angles for", "multiple": 1, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the angle between the vector connecting each pair of atoms and the the positive X/Y/Z direction around the X/Y/Z axis"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "FIXEDATOM", "TORSION"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the pairs of atoms that you would like to calculate the \n                          angles for. You can use multiple instances of this keyword i.e. \n                          ATOMS1, ATOMS2, ATOMS3... \n\nThe following options are available\n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "XZTORSIONS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/XZTORSIONS",
    "description" : "Calculate the torsional angle around the x axis between an arbitrary vector and the positive z direction",
    "module" : "multicolvar",
    "displayname" : "XZTORSIONS",
    "replacement" : "TORSION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the pairs of atoms that you would like to calculate the angles for", "multiple": 1, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the angle between the vector connecting each pair of atoms and the the positive X/Y/Z direction around the X/Y/Z axis"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "FIXEDATOM", "TORSION"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the pairs of atoms that you would like to calculate the \n                          angles for. You can use multiple instances of this keyword i.e. \n                          ATOMS1, ATOMS2, ATOMS3... \n\nThe following options are available\n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "YANGLES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/YANGLES",
    "description" : "Calculate the angle between an arbitrary vector and the positive y direction",
    "module" : "multicolvar",
    "displayname" : "YANGLES",
    "replacement" : "DISTANCE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the pairs of atoms that you would like to calculate the angles for", "multiple": 1, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "DISTANCE", "COMBINE"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the pairs of atoms that you would like to calculate the \n                          angles for. You can use multiple instances of this keyword i.e. \n                          ATOMS1, ATOMS2, ATOMS3... \n\nThe following options are available\n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "YDISTANCES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/YDISTANCES",
    "description" : "Calculate the y components of the vectors connecting one or many pairs of atoms.",
    "module" : "multicolvar",
    "displayname" : "YDISTANCES",
    "replacement" : "DISTANCE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "GROUP" : { "type": "atoms", "description": "Calculate the distance between each distinct pair of atoms in the group", "multiple": 1, "actionlink": "none"},
       "GROUPA" : { "type": "atoms", "description": "Calculate the distances between all the atoms in GROUPA and all the atoms in GROUPB", "multiple": 1, "actionlink": "none"},
       "GROUPB" : { "type": "atoms", "description": "Calculate the distances between all the atoms in GROUPA and all the atoms in GROUPB", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the pairs of atoms that you would like to calculate the angles for", "multiple": 1, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "COMPONENTS" : { "type": "flag", "description": " calculate the x, y and z components of the distance separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALED_COMPONENTS" : { "type": "flag", "description": " calculate the a, b and c scaled components of the distance separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "ORIGIN" : { "type": "atoms", "description": "calculate the distance of all the atoms specified using the ATOMS keyword from this point", "multiple": 1, "actionlink": "none"},
       "LOCATION" : { "type": "atoms", "description": "the location at which the CV is assumed to be in space", "multiple": 1, "actionlink": "none"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the DISTANCES between the each pair of atoms that were specified"
         },
         "x" : {
           "flag": "COMPONENTS",
           "type": "vector",
           "description": "the x-components of the distance vectors"
         },
         "y" : {
           "flag": "COMPONENTS",
           "type": "vector",
           "description": "the y-components of the distance vectors"
         },
         "z" : {
           "flag": "COMPONENTS",
           "type": "vector",
           "description": "the z-components of the distance vectors"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "GROUP", "DISTANCE", "CENTER"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - Calculate the distance between each distinct pair of atoms \n                          in the group \n                 GROUPA - Calculate the distances between all the atoms in GROUPA and \n                          all the atoms in GROUPB. This must be used in conjunction with \n                          GROUPB. \n                 GROUPB - Calculate the distances between all the atoms in GROUPA and \n                          all the atoms in GROUPB. This must be used in conjunction with \n                          GROUPA. \n                  ATOMS - the pairs of atoms that you would like to calculate the \n                          angles for. You can use multiple instances of this keyword i.e. \n                          ATOMS1, ATOMS2, ATOMS3... \n                 ORIGIN - calculate the distance of all the atoms specified using the \n                          ATOMS keyword from this point. For more information on how to \n                          specify lists of atoms see \ref Group \n               LOCATION - the location at which the CV is assumed to be in space. You \n                          can use multiple instances of this keyword i.e. LOCATION1, \n                          LOCATION2, LOCATION3... \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n             COMPONENTS - ( default=off ) calculate the x, y and z components of the \n                          distance separately and store them as label.x, label.y and label.z \n      SCALED_COMPONENTS - ( default=off ) calculate the a, b and c scaled components \n                          of the distance separately and store them as label.a, label.b \n                          and label.c \n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "YXTORSIONS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/YXTORSIONS",
    "description" : "Calculate the torsional angle around the y axis between an arbitrary vector and the positive x direction",
    "module" : "multicolvar",
    "displayname" : "YXTORSIONS",
    "replacement" : "TORSION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the pairs of atoms that you would like to calculate the angles for", "multiple": 1, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the angle between the vector connecting each pair of atoms and the the positive X/Y/Z direction around the X/Y/Z axis"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "FIXEDATOM", "TORSION"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the pairs of atoms that you would like to calculate the \n                          angles for. You can use multiple instances of this keyword i.e. \n                          ATOMS1, ATOMS2, ATOMS3... \n\nThe following options are available\n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "YZTORSIONS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/YZTORSIONS",
    "description" : "Calculate the torsional angle around the y axis between an arbitrary vector and the positive z direction",
    "module" : "multicolvar",
    "displayname" : "YZTORSIONS",
    "replacement" : "TORSION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the pairs of atoms that you would like to calculate the angles for", "multiple": 1, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the angle between the vector connecting each pair of atoms and the the positive X/Y/Z direction around the X/Y/Z axis"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "FIXEDATOM", "TORSION"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the pairs of atoms that you would like to calculate the \n                          angles for. You can use multiple instances of this keyword i.e. \n                          ATOMS1, ATOMS2, ATOMS3... \n\nThe following options are available\n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "ZANGLES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ZANGLES",
    "description" : "Calculate the angle between an arbitrary vector and the positive z direction",
    "module" : "multicolvar",
    "displayname" : "ZANGLES",
    "replacement" : "DISTANCE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the pairs of atoms that you would like to calculate the angles for", "multiple": 1, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "DISTANCE", "COMBINE"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the pairs of atoms that you would like to calculate the \n                          angles for. You can use multiple instances of this keyword i.e. \n                          ATOMS1, ATOMS2, ATOMS3... \n\nThe following options are available\n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "ZDISTANCES": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ZDISTANCES",
    "description" : "Calculate the z components of the vectors connecting one or many pairs of atoms.",
    "module" : "multicolvar",
    "displayname" : "ZDISTANCES",
    "replacement" : "DISTANCE",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "GROUP" : { "type": "atoms", "description": "Calculate the distance between each distinct pair of atoms in the group", "multiple": 1, "actionlink": "none"},
       "GROUPA" : { "type": "atoms", "description": "Calculate the distances between all the atoms in GROUPA and all the atoms in GROUPB", "multiple": 1, "actionlink": "none"},
       "GROUPB" : { "type": "atoms", "description": "Calculate the distances between all the atoms in GROUPA and all the atoms in GROUPB", "multiple": 1, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the pairs of atoms that you would like to calculate the angles for", "multiple": 1, "actionlink": "none"},
       "NOPBC" : { "type": "flag", "description": " ignore the periodic boundary conditions when calculating distances", "multiple": 0, "actionlink": "none", "default": "off"},
       "COMPONENTS" : { "type": "flag", "description": " calculate the x, y and z components of the distance separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "SCALED_COMPONENTS" : { "type": "flag", "description": " calculate the a, b and c scaled components of the distance separately and store them as label", "multiple": 0, "actionlink": "none", "default": "off"},
       "LOWMEM" : { "type": "deprecated", "description": "Including this keyword in the input to this action makes no difference to the calculation performed it was used in older versions of PLUMED and is provided here for back compatibility only", "multiple": 0, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "ORIGIN" : { "type": "atoms", "description": "calculate the distance of all the atoms specified using the ATOMS keyword from this point", "multiple": 1, "actionlink": "none"},
       "LOCATION" : { "type": "atoms", "description": "the location at which the CV is assumed to be in space", "multiple": 1, "actionlink": "none"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the DISTANCES between the each pair of atoms that were specified"
         },
         "x" : {
           "flag": "COMPONENTS",
           "type": "vector",
           "description": "the x-components of the distance vectors"
         },
         "y" : {
           "flag": "COMPONENTS",
           "type": "vector",
           "description": "the y-components of the distance vectors"
         },
         "z" : {
           "flag": "COMPONENTS",
           "type": "vector",
           "description": "the z-components of the distance vectors"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "GROUP", "DISTANCE", "CENTER"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  GROUP - Calculate the distance between each distinct pair of atoms \n                          in the group \n                 GROUPA - Calculate the distances between all the atoms in GROUPA and \n                          all the atoms in GROUPB. This must be used in conjunction with \n                          GROUPB. \n                 GROUPB - Calculate the distances between all the atoms in GROUPA and \n                          all the atoms in GROUPB. This must be used in conjunction with \n                          GROUPA. \n                  ATOMS - the pairs of atoms that you would like to calculate the \n                          angles for. You can use multiple instances of this keyword i.e. \n                          ATOMS1, ATOMS2, ATOMS3... \n                 ORIGIN - calculate the distance of all the atoms specified using the \n                          ATOMS keyword from this point. For more information on how to \n                          specify lists of atoms see \ref Group \n               LOCATION - the location at which the CV is assumed to be in space. You \n                          can use multiple instances of this keyword i.e. LOCATION1, \n                          LOCATION2, LOCATION3... \n\nThe following options are available\n\n                  NOPBC - ( default=off ) ignore the periodic boundary conditions \n                          when calculating distances \n             COMPONENTS - ( default=off ) calculate the x, y and z components of the \n                          distance separately and store them as label.x, label.y and label.z \n      SCALED_COMPONENTS - ( default=off ) calculate the a, b and c scaled components \n                          of the distance separately and store them as label.a, label.b \n                          and label.c \n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "ZXTORSIONS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ZXTORSIONS",
    "description" : "Calculate the torsional angle around the z axis between an arbitrary vector and the positive x direction",
    "module" : "multicolvar",
    "displayname" : "ZXTORSIONS",
    "replacement" : "TORSION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the pairs of atoms that you would like to calculate the angles for", "multiple": 1, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the angle between the vector connecting each pair of atoms and the the positive X/Y/Z direction around the X/Y/Z axis"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "FIXEDATOM", "TORSION"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the pairs of atoms that you would like to calculate the \n                          angles for. You can use multiple instances of this keyword i.e. \n                          ATOMS1, ATOMS2, ATOMS3... \n\nThe following options are available\n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "ZYTORSIONS": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ZYTORSIONS",
    "description" : "Calculate the torsional angle around the z axis between an arbitrary vector and the positive y direction",
    "module" : "multicolvar",
    "displayname" : "ZYTORSIONS",
    "replacement" : "TORSION",
     "dois" : [],
    "syntax" : {
       "LABEL" : { "type": "hidden", "description": "a label for the action so that its output can be referenced in the input to other actions", "multiple": 0, "actionlink": "none"},
       "IS_SHORTCUT" : { "type": "hidden", "description": "hidden keyword to tell if actions are shortcuts so that example generator can provide expansions of shortcuts", "multiple": 0, "actionlink": "none"},
       "HAS_VALUES" : { "type": "hidden", "description": "this is used in json output to determine those actions that have values", "multiple": 0, "actionlink": "none"},
       "ATOMS" : { "type": "atoms", "description": "the pairs of atoms that you would like to calculate the angles for", "multiple": 1, "actionlink": "none"},
       "LESS_THAN" : { "type": "optional", "description": "calculate the number of variables that are less than a certain target value", "multiple": 1, "actionlink": "LESS_THAN"},
       "MORE_THAN" : { "type": "optional", "description": "calculate the number of variables that are more than a certain target value", "multiple": 1, "actionlink": "MORE_THAN"},
       "ALT_MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MIN" : { "type": "optional", "description": "calculate the minimum value", "multiple": 0, "actionlink": "none"},
       "MAX" : { "type": "optional", "description": "calculate the maximum value", "multiple": 0, "actionlink": "none"},
       "BETWEEN" : { "type": "optional", "description": "calculate the number of values that are within a certain range", "multiple": 1, "actionlink": "BETWEEN"},
       "HIGHEST" : { "type": "flag", "description": " this flag allows you to recover the highest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "HISTOGRAM" : { "type": "optional", "description": "calculate a discretized histogram of the distribution of values", "multiple": 0, "actionlink": "none"},
       "LOWEST" : { "type": "flag", "description": " this flag allows you to recover the lowest of these variables", "multiple": 0, "actionlink": "none", "default": "off"},
       "SUM" : { "type": "flag", "description": " calculate the sum of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "MEAN" : { "type": "flag", "description": " calculate the mean of all the quantities", "multiple": 0, "actionlink": "none", "default": "off"},
       "output" : {
         "lessthan" : {
           "flag": "LESS_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value less than a threshold"
         },
         "morethan" : {
           "flag": "MORE_THAN",
           "type": "scalar",
           "description": "the number of colvars that have a value more than a threshold"
         },
         "altmin" : {
           "flag": "ALT_MIN",
           "type": "scalar",
           "description": "the minimum value of the cv"
         },
         "min" : {
           "flag": "MIN",
           "type": "scalar",
           "description": "the minimum colvar"
         },
         "max" : {
           "flag": "MAX",
           "type": "scalar",
           "description": "the maximum colvar"
         },
         "between" : {
           "flag": "BETWEEN",
           "type": "scalar",
           "description": "the number of colvars that have a value that lies in a particular interval"
         },
         "highest" : {
           "flag": "HIGHEST",
           "type": "scalar",
           "description": "the largest of the colvars"
         },
         "lowest" : {
           "flag": "LOWEST",
           "type": "scalar",
           "description": "the smallest of the colvars"
         },
         "sum" : {
           "flag": "SUM",
           "type": "scalar",
           "description": "the sum of the colvars"
         },
         "mean" : {
           "flag": "MEAN",
           "type": "scalar",
           "description": "the mean of the colvars"
         },
         "value" : {
           "flag": "default",
           "type": "vector",
           "description": "the angle between the vector connecting each pair of atoms and the the positive X/Y/Z direction around the X/Y/Z axis"
         }
       }
    },
    "needs" : ["SUM", "MEAN", "CUSTOM", "HIGHEST", "LOWEST", "LESS_THAN", "MORE_THAN", "BETWEEN", "FIXEDATOM", "TORSION"],
    "help" : "The input trajectory can be in any of the following formats: \n\n                  ATOMS - the pairs of atoms that you would like to calculate the \n                          angles for. You can use multiple instances of this keyword i.e. \n                          ATOMS1, ATOMS2, ATOMS3... \n\nThe following options are available\n\n                HIGHEST - ( default=off ) this flag allows you to recover the highest \n                          of these variables. \n                 LOWEST - ( default=off ) this flag allows you to recover the lowest \n                          of these variables. \n                    SUM - ( default=off ) calculate the sum of all the quantities. \n                   MEAN - ( default=off ) calculate the mean of all the quantities. \n              LESS_THAN - calculate the number of variables that are less than a \n                          certain target value. \n              MORE_THAN - calculate the number of variables that are more than a \n                          certain target value. \n                ALT_MIN - calculate the minimum value. \n                    MIN - calculate the minimum value. \n                    MAX - calculate the maximum value. \n                BETWEEN - calculate the number of values that are within a certain \n                          range. These quantities are calculated using kernel density \n                          estimation as described on \ref histogrambead.. You can use multiple \n                          instances of this keyword i.e. BETWEEN1, BETWEEN2, BETWEEN3... \n              HISTOGRAM - calculate a discretized histogram of the distribution of \n                          values. This shortcut allows you to calculates NBIN quantites like \n                          BETWEEN. \n\n"
  },
  "groups" : {
    "@allatoms" : { 

        "description" : "refers to all the MD codes atoms and PLUMEDs vatoms",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/specifying_atoms"
    },
    "@mdatoms" : { 

        "description" : "refers to all the MD codes atoms but not PLUMEDs vatoms",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/specifying_atoms"
    },
    "@ndx:" : { 

        "description" : "load a group from a GROMACS index file",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/specifying_atoms.html"
    },
    "@alpha-" : { 

        "description" : "the four atoms that are required to calculate the alpha backbone dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@back-" : { 

        "description" : "the protein/dna/rna backbone atoms in",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@base-" : { 

        "description" : "the heavy atoms of the base in",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@beta-" : { 

        "description" : "the four atoms that are required to calculate the beta backbone dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@chi-" : { 

        "description" : "the four atoms that are required to alcullate the chi dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@chi1-" : { 

        "description" : "the four atoms that are required to calculate the chi1 dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@chi2-" : { 

        "description" : "the four atoms that are required to calculate the chi2 dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@chi3-" : { 

        "description" : "the four atoms that are required to calculate the chi3 dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@chi4-" : { 

        "description" : "the four atoms that are required to calculate the chi4 dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@chi5-" : { 

        "description" : "the four atoms that are required to calculate the chi5 dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@delta-" : { 

        "description" : "the four atoms that are required to calculate the delta backbone dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@epsilon-" : { 

        "description" : "the four atoms that are required to calculate the backbone epsilon dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@gamma-" : { 

        "description" : "the four atoms that are required to calculate the gamma backbone dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@hydrogens" : { 

        "description" : "all hydrogen atoms",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@ions" : { 

        "description" : "all the ions",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@lcs-" : { 

        "description" : "an ordered triplet of atoms on the 6-membered ring of the nucleobase in",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@mda:" : { 

        "description" : "atom selection built using syntax for <a href=\"https://docs.mdanalysis.org/stable/documentation_pages/selections.html\">MDAnalysis</a>",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@mdt:" : { 

        "description" : "atom selection built using syntax for <a href=\"https://www.mdtraj.org/1.9.8.dev0/index.html\">mdtraj</a>",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@nonhydrogens" : { 

        "description" : "all non hydrogen atoms",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@nucleic" : { 

        "description" : "all atoms that are part of a DNA or RNA molecule",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@omega-" : { 

        "description" : "the four atoms that are required to calculate the omega dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@phi-" : { 

        "description" : "the four atoms that are required to calculate the phi dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@protein" : { 

        "description" : "all atoms that are part of a protein",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@psi-" : { 

        "description" : "the four atoms that are required to calculate the psi dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@sidechain-" : { 

        "description" : "the protein sidechain atoms in",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@sugar-" : { 

        "description" : "the heavy atoms of the sugar in",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@v0-" : { 

        "description" : "the four atoms that are required to calculate the v0 sugar dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@v1-" : { 

        "description" : "the four atoms that are required to calculate the v1 sugar dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@v2-" : { 

        "description" : "the four atoms that are required to calculate the v2 sugar dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@v3-" : { 

        "description" : "the four atoms that are required to calculate the v3 sugar dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@v4-" : { 

        "description" : "the four atoms that are required to calculate the v4 sugar dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@vmd:" : { 

        "description" : "atom selection built using syntax for <a href=\"https://www.ks.uiuc.edu/Research/vmd/\">VMD</a> python module",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@vmdexec:" : { 

        "description" : "atom selection built using syntax for <a href=\"https://www.ks.uiuc.edu/Research/vmd/\">VMD</a>",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@water" : { 

        "description" : "all water molecules",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
    },
    "@zeta-" : { 

        "description" : "the four atoms that are required to calculate the zeta backbone dihedral for",
        "link" : "https://www.plumed.org/doc-master/user-doc/html/MOLINFO"
        }
  },
  "modules" : {
    "bias" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_bias",
        "description" : "A module that will be used for something"
    },
    "generic" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_generic",
        "description" : "A module that will be used for something"
    },
    "mapping" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_mapping",
        "description" : "A module that will be used for something"
    },
    "multicolvar" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_multicolvar",
        "description" : "A module that will be used for something"
    },
    "secondarystructure" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_secondarystructure",
        "description" : "A module that will be used for something"
    },
    "colvar" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_colvar",
        "description" : "A module that will be used for something"
    },
    "annfunc" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_annfunc",
        "description" : "A module that will be used for something"
    },
    "vatom" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_vatom",
        "description" : "A module that will be used for something"
    },
    "volumes" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_volumes",
        "description" : "A module that will be used for something"
    },
    "dimred" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_dimred",
        "description" : "A module that will be used for something"
    },
    "symfunc" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_symfunc",
        "description" : "A module that will be used for something"
    },
    "isdb" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_isdb",
        "description" : "A module that will be used for something"
    },
    "function" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_function",
        "description" : "A module that will be used for something"
    },
    "ves" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_ves",
        "description" : "A module that will be used for something"
    },
    "crystdistrib" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_crystdistrib",
        "description" : "A module that will be used for something"
    },
    "adjmat" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_adjmat",
        "description" : "A module that will be used for something"
    },
    "clusters" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_clusters",
        "description" : "A module that will be used for something"
    },
    "landmarks" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_landmarks",
        "description" : "A module that will be used for something"
    },
    "valtools" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_valtools",
        "description" : "A module that will be used for something"
    },
    "gridtools" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_gridtools",
        "description" : "A module that will be used for something"
    },
    "matrixtools" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_matrixtools",
        "description" : "A module that will be used for something"
    },
    "refdist" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_refdist",
        "description" : "A module that will be used for something"
    },
    "contour" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_contour",
        "description" : "A module that will be used for something"
    },
    "core" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_core",
        "description" : "A module that will be used for something"
    },
    "drr" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_drr",
        "description" : "A module that will be used for something"
    },
    "opes" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_opes",
        "description" : "A module that will be used for something"
    },
    "eds" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_eds",
        "description" : "A module that will be used for something"
    },
    "envsim" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_envsim",
        "description" : "A module that will be used for something"
    },
    "liquid_crystal" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_liquid_crystal",
        "description" : "A module that will be used for something"
    },
    "fisst" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_fisst",
        "description" : "A module that will be used for something"
    },
    "fourier" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_fourier",
        "description" : "A module that will be used for something"
    },
    "funnel" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_funnel",
        "description" : "A module that will be used for something"
    },
    "membranefusion" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_membranefusion",
        "description" : "A module that will be used for something"
    },
    "pamm" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_pamm",
        "description" : "A module that will be used for something"
    },
    "setup" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_setup",
        "description" : "A module that will be used for something"
    },
    "logmfd" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_logmfd",
        "description" : "A module that will be used for something"
    },
    "maze" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_maze",
        "description" : "A module that will be used for something"
    },
    "metatomic" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_metatomic",
        "description" : "A module that will be used for something"
    },
    "piv" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_piv",
        "description" : "A module that will be used for something"
    },
    "pytorch" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_pytorch",
        "description" : "A module that will be used for something"
    },
    "s2cm" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_s2cm",
        "description" : "A module that will be used for something"
    },
    "sasa" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_sasa",
        "description" : "A module that will be used for something"
    },
    "sizeshape" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_sizeshape",
        "description" : "A module that will be used for something"
    },
    "sprint" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_sprint",
        "description" : "A module that will be used for something"
    },
    "wham" : { 
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/module_wham",
        "description" : "A module that will be used for something"
        }
  },
  "cltools" : {
  "benchmark": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/benchmark",
    "module" : "cltools",
    "description" : "run a calculation with a fixed trajectory to find bottlenecks in PLUMED",
    "inputtype" : "command line args",
    "syntax" : {
       "--help/-h" : { "type": "flag", "description": " print this help", "multiple": 0, "actionlink": "none", "default": "off"},
       "--plumed" : { "type": "compulsory", "description": " colon separated path(s) to the input file(s)", "multiple": 0, "actionlink": "none", "default": "plumed.dat"},
       "--kernel" : { "type": "compulsory", "description": " colon separated path(s) to kernel(s)", "multiple": 0, "actionlink": "none", "default": "this"},
       "--natoms" : { "type": "compulsory", "description": " the number of atoms to use for the simulation", "multiple": 0, "actionlink": "none", "default": "100000"},
       "--nsteps" : { "type": "compulsory", "description": " number of steps of MD to perform (-1 means forever)", "multiple": 0, "actionlink": "none", "default": "2000"},
       "--maxtime" : { "type": "compulsory", "description": " maximum number of seconds (-1 means forever)", "multiple": 0, "actionlink": "none", "default": "-1"},
       "--sleep" : { "type": "compulsory", "description": " number of seconds of sleep, mimicking MD calculation", "multiple": 0, "actionlink": "none", "default": "0"},
       "--atom-distribution" : { "type": "compulsory", "description": " the kind of possible atomic displacement at each step", "multiple": 0, "actionlink": "none", "default": "line"},
       "--dump-trajectory" : { "type": "optional", "description": "dump the trajectory to this file", "multiple": 0, "actionlink": "none"},
       "--domain-decomposition" : { "type": "flag", "description": " simulate domain decomposition, implies --shuffle", "multiple": 0, "actionlink": "none", "default": "off"},
       "--shuffled" : { "type": "flag", "description": " reshuffle atoms", "multiple": 0, "actionlink": "none", "default": "off"},
       "--ixyz" : { "type": "atoms", "description": "the trajectory in xyz format", "multiple": 1, "actionlink": "none"},
       "--igro" : { "type": "atoms", "description": "the trajectory in gro format", "multiple": 1, "actionlink": "none"},
       "--idlp4" : { "type": "atoms", "description": "the trajectory in DL_POLY_4 format", "multiple": 1, "actionlink": "none"},
       "--ixtc" : { "type": "atoms", "description": "the trajectory in xtc format (xdrfile implementation)", "multiple": 1, "actionlink": "none"},
       "--itrr" : { "type": "atoms", "description": "the trajectory in trr format (xdrfile implementation)", "multiple": 1, "actionlink": "none"},
       "--mf_dcd" : { "type": "atoms", "description": " molfile: the trajectory in dcd format ", "multiple": 1, "actionlink": "none"},
       "--mf_crd" : { "type": "atoms", "description": " molfile: the trajectory in crd format ", "multiple": 1, "actionlink": "none"},
       "--mf_crdbox" : { "type": "atoms", "description": " molfile: the trajectory in crdbox format ", "multiple": 1, "actionlink": "none"},
       "--mf_gro" : { "type": "atoms", "description": " molfile: the trajectory in gro format ", "multiple": 1, "actionlink": "none"},
       "--mf_g96" : { "type": "atoms", "description": " molfile: the trajectory in g96 format ", "multiple": 1, "actionlink": "none"},
       "--mf_trr" : { "type": "atoms", "description": " molfile: the trajectory in trr format ", "multiple": 1, "actionlink": "none"},
       "--mf_trj" : { "type": "atoms", "description": " molfile: the trajectory in trj format ", "multiple": 1, "actionlink": "none"},
       "--mf_xtc" : { "type": "atoms", "description": " molfile: the trajectory in xtc format ", "multiple": 1, "actionlink": "none"},
       "--mf_pdb" : { "type": "atoms", "description": " molfile: the trajectory in pdb format ", "multiple": 1, "actionlink": "none"},
       "--repeatX" : { "type": "compulsory", "description": " number of time to align the read trajectory along the fist box component, ingnored with a atomic distribution", "multiple": 0, "actionlink": "none", "default": "1"},
       "--repeatY" : { "type": "compulsory", "description": " number of time to align the read trajectory along the second box component, ingnored with a atomic distribution", "multiple": 0, "actionlink": "none", "default": "1"},
       "--repeatZ" : { "type": "compulsory", "description": " number of time to align the read trajectory along the third box component, ingnored with a atomic distribution", "multiple": 0, "actionlink": "none", "default": "1"}
       }
     },
  "completion": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/completion",
    "module" : "cltools",
    "description" : "dump a function usable for programmable completion",
    "inputtype" : "command line args",
    "syntax" : {
       "--help/-h" : { "type": "flag", "description": " print this help", "multiple": 0, "actionlink": "none", "default": "off"}
       }
     },
  "driver": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/driver",
    "module" : "cltools",
    "description" : "analyze trajectories with plumed",
    "inputtype" : "command line args",
    "syntax" : {
       "--help/-h" : { "type": "flag", "description": " print this help", "multiple": 0, "actionlink": "none", "default": "off"},
       "--help-debug" : { "type": "flag", "description": " print special options that can be used to create regtests", "multiple": 0, "actionlink": "none", "default": "off"},
       "--plumed" : { "type": "compulsory", "description": " specify the name of the plumed input file", "multiple": 0, "actionlink": "none", "default": "plumed.dat"},
       "--timestep" : { "type": "compulsory", "description": " the timestep that was used in the calculation that produced this trajectory in picoseconds", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "--trajectory-stride" : { "type": "compulsory", "description": " the frequency with which frames were output to this trajectory during the simulation (0 means that the number of the step is read from the trajectory file, currently working only for xtc/trr files read with --ixtc/--trr)", "multiple": 0, "actionlink": "none", "default": "1"},
       "--multi" : { "type": "compulsory", "description": " set number of replicas for multi environment (needs MPI)", "multiple": 0, "actionlink": "none", "default": "0"},
       "--noatoms" : { "type": "flag", "description": " don't read in a trajectory", "multiple": 0, "actionlink": "none", "default": "off"},
       "--parse-only" : { "type": "flag", "description": " read the plumed input file and stop", "multiple": 0, "actionlink": "none", "default": "off"},
       "--restart" : { "type": "flag", "description": " makes driver behave as if restarting", "multiple": 0, "actionlink": "none", "default": "off"},
       "--ixyz" : { "type": "atoms", "description": "the trajectory in xyz format", "multiple": 1, "actionlink": "none"},
       "--igro" : { "type": "atoms", "description": "the trajectory in gro format", "multiple": 1, "actionlink": "none"},
       "--idlp4" : { "type": "atoms", "description": "the trajectory in DL_POLY_4 format", "multiple": 1, "actionlink": "none"},
       "--ixtc" : { "type": "atoms", "description": "the trajectory in xtc format (xdrfile implementation)", "multiple": 1, "actionlink": "none"},
       "--itrr" : { "type": "atoms", "description": "the trajectory in trr format (xdrfile implementation)", "multiple": 1, "actionlink": "none"},
       "--mf_dcd" : { "type": "atoms", "description": " molfile: the trajectory in dcd format ", "multiple": 1, "actionlink": "none"},
       "--mf_crd" : { "type": "atoms", "description": " molfile: the trajectory in crd format ", "multiple": 1, "actionlink": "none"},
       "--mf_crdbox" : { "type": "atoms", "description": " molfile: the trajectory in crdbox format ", "multiple": 1, "actionlink": "none"},
       "--mf_gro" : { "type": "atoms", "description": " molfile: the trajectory in gro format ", "multiple": 1, "actionlink": "none"},
       "--mf_g96" : { "type": "atoms", "description": " molfile: the trajectory in g96 format ", "multiple": 1, "actionlink": "none"},
       "--mf_trr" : { "type": "atoms", "description": " molfile: the trajectory in trr format ", "multiple": 1, "actionlink": "none"},
       "--mf_trj" : { "type": "atoms", "description": " molfile: the trajectory in trj format ", "multiple": 1, "actionlink": "none"},
       "--mf_xtc" : { "type": "atoms", "description": " molfile: the trajectory in xtc format ", "multiple": 1, "actionlink": "none"},
       "--mf_pdb" : { "type": "atoms", "description": " molfile: the trajectory in pdb format ", "multiple": 1, "actionlink": "none"},
       "--shortcut-ofile" : { "type": "optional", "description": "the name of the file to output info on the way shortcuts have been expanded", "multiple": 0, "actionlink": "none"},
       "--valuedict-ofile" : { "type": "optional", "description": "output a dictionary giving information about each value in the input file", "multiple": 0, "actionlink": "none"},
       "--length-units" : { "type": "optional", "description": "units for length, either as a string or a number", "multiple": 0, "actionlink": "none"},
       "--mass-units" : { "type": "optional", "description": "units for mass in pdb and mc file, either as a string or a number", "multiple": 0, "actionlink": "none"},
       "--charge-units" : { "type": "optional", "description": "units for charge in pdb and mc file, either as a string or a number", "multiple": 0, "actionlink": "none"},
       "--kt" : { "type": "optional", "description": "set kT it will not be necessary to specify temperature in input file", "multiple": 0, "actionlink": "none"},
       "--dump-forces" : { "type": "optional", "description": "dump the forces on a file", "multiple": 0, "actionlink": "none"},
       "--dump-forces-fmt" : { "type": "optional", "description": " the format to use to dump the forces", "multiple": 0, "actionlink": "none", "default": "%%f"},
       "--dump-full-virial" : { "type": "flag", "description": " with --dump-forces, it dumps the 9 components of the virial", "multiple": 0, "actionlink": "none", "default": "off"},
       "--pdb" : { "type": "optional", "description": "provides a pdb with masses and charges", "multiple": 0, "actionlink": "none"},
       "--mc" : { "type": "optional", "description": "provides a file with masses and charges as produced with DUMPMASSCHARGE", "multiple": 0, "actionlink": "none"},
       "--box" : { "type": "optional", "description": "comma-separated box dimensions (3 for orthorhombic, 9 for generic)", "multiple": 0, "actionlink": "none"},
       "--natoms" : { "type": "optional", "description": "provides number of atoms - only used if file format does not contain number of atoms", "multiple": 0, "actionlink": "none"},
       "--initial-step" : { "type": "optional", "description": "provides a number for the initial step, default is 0", "multiple": 0, "actionlink": "none"},
       "--debug-forces" : { "type": "optional", "description": "output a file containing the forces due to the bias evaluated using numerical derivatives and using the analytical derivatives implemented in plumed", "multiple": 0, "actionlink": "none"},
       "--debug-float" : { "type": "hidden", "description": "[yes/no] turns on the single precision version (to check float interface)", "multiple": 0, "actionlink": "none"},
       "--debug-dd" : { "type": "hidden", "description": "[yes/no] use a fake domain decomposition", "multiple": 0, "actionlink": "none"},
       "--debug-pd" : { "type": "hidden", "description": "[yes/no] use a fake particle decomposition", "multiple": 0, "actionlink": "none"},
       "--debug-grex" : { "type": "hidden", "description": "use a fake gromacs-like replica exchange, specify exchange stride", "multiple": 0, "actionlink": "none"},
       "--debug-grex-log" : { "type": "hidden", "description": "log file for debug=grex", "multiple": 0, "actionlink": "none"}
       }
     },
  "driver-float": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/driver-float",
    "module" : "cltools",
    "description" : "analyze trajectories with plumed (single precision version)",
    "inputtype" : "command line args",
    "syntax" : {
       "--help/-h" : { "type": "flag", "description": " print this help", "multiple": 0, "actionlink": "none", "default": "off"},
       "--help-debug" : { "type": "flag", "description": " print special options that can be used to create regtests", "multiple": 0, "actionlink": "none", "default": "off"},
       "--plumed" : { "type": "compulsory", "description": " specify the name of the plumed input file", "multiple": 0, "actionlink": "none", "default": "plumed.dat"},
       "--timestep" : { "type": "compulsory", "description": " the timestep that was used in the calculation that produced this trajectory in picoseconds", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "--trajectory-stride" : { "type": "compulsory", "description": " the frequency with which frames were output to this trajectory during the simulation (0 means that the number of the step is read from the trajectory file, currently working only for xtc/trr files read with --ixtc/--trr)", "multiple": 0, "actionlink": "none", "default": "1"},
       "--multi" : { "type": "compulsory", "description": " set number of replicas for multi environment (needs MPI)", "multiple": 0, "actionlink": "none", "default": "0"},
       "--noatoms" : { "type": "flag", "description": " don't read in a trajectory", "multiple": 0, "actionlink": "none", "default": "off"},
       "--parse-only" : { "type": "flag", "description": " read the plumed input file and stop", "multiple": 0, "actionlink": "none", "default": "off"},
       "--restart" : { "type": "flag", "description": " makes driver behave as if restarting", "multiple": 0, "actionlink": "none", "default": "off"},
       "--ixyz" : { "type": "atoms", "description": "the trajectory in xyz format", "multiple": 1, "actionlink": "none"},
       "--igro" : { "type": "atoms", "description": "the trajectory in gro format", "multiple": 1, "actionlink": "none"},
       "--idlp4" : { "type": "atoms", "description": "the trajectory in DL_POLY_4 format", "multiple": 1, "actionlink": "none"},
       "--ixtc" : { "type": "atoms", "description": "the trajectory in xtc format (xdrfile implementation)", "multiple": 1, "actionlink": "none"},
       "--itrr" : { "type": "atoms", "description": "the trajectory in trr format (xdrfile implementation)", "multiple": 1, "actionlink": "none"},
       "--mf_dcd" : { "type": "atoms", "description": " molfile: the trajectory in dcd format ", "multiple": 1, "actionlink": "none"},
       "--mf_crd" : { "type": "atoms", "description": " molfile: the trajectory in crd format ", "multiple": 1, "actionlink": "none"},
       "--mf_crdbox" : { "type": "atoms", "description": " molfile: the trajectory in crdbox format ", "multiple": 1, "actionlink": "none"},
       "--mf_gro" : { "type": "atoms", "description": " molfile: the trajectory in gro format ", "multiple": 1, "actionlink": "none"},
       "--mf_g96" : { "type": "atoms", "description": " molfile: the trajectory in g96 format ", "multiple": 1, "actionlink": "none"},
       "--mf_trr" : { "type": "atoms", "description": " molfile: the trajectory in trr format ", "multiple": 1, "actionlink": "none"},
       "--mf_trj" : { "type": "atoms", "description": " molfile: the trajectory in trj format ", "multiple": 1, "actionlink": "none"},
       "--mf_xtc" : { "type": "atoms", "description": " molfile: the trajectory in xtc format ", "multiple": 1, "actionlink": "none"},
       "--mf_pdb" : { "type": "atoms", "description": " molfile: the trajectory in pdb format ", "multiple": 1, "actionlink": "none"},
       "--shortcut-ofile" : { "type": "optional", "description": "the name of the file to output info on the way shortcuts have been expanded", "multiple": 0, "actionlink": "none"},
       "--valuedict-ofile" : { "type": "optional", "description": "output a dictionary giving information about each value in the input file", "multiple": 0, "actionlink": "none"},
       "--length-units" : { "type": "optional", "description": "units for length, either as a string or a number", "multiple": 0, "actionlink": "none"},
       "--mass-units" : { "type": "optional", "description": "units for mass in pdb and mc file, either as a string or a number", "multiple": 0, "actionlink": "none"},
       "--charge-units" : { "type": "optional", "description": "units for charge in pdb and mc file, either as a string or a number", "multiple": 0, "actionlink": "none"},
       "--kt" : { "type": "optional", "description": "set kT it will not be necessary to specify temperature in input file", "multiple": 0, "actionlink": "none"},
       "--dump-forces" : { "type": "optional", "description": "dump the forces on a file", "multiple": 0, "actionlink": "none"},
       "--dump-forces-fmt" : { "type": "optional", "description": " the format to use to dump the forces", "multiple": 0, "actionlink": "none", "default": "%%f"},
       "--dump-full-virial" : { "type": "flag", "description": " with --dump-forces, it dumps the 9 components of the virial", "multiple": 0, "actionlink": "none", "default": "off"},
       "--pdb" : { "type": "optional", "description": "provides a pdb with masses and charges", "multiple": 0, "actionlink": "none"},
       "--mc" : { "type": "optional", "description": "provides a file with masses and charges as produced with DUMPMASSCHARGE", "multiple": 0, "actionlink": "none"},
       "--box" : { "type": "optional", "description": "comma-separated box dimensions (3 for orthorhombic, 9 for generic)", "multiple": 0, "actionlink": "none"},
       "--natoms" : { "type": "optional", "description": "provides number of atoms - only used if file format does not contain number of atoms", "multiple": 0, "actionlink": "none"},
       "--initial-step" : { "type": "optional", "description": "provides a number for the initial step, default is 0", "multiple": 0, "actionlink": "none"},
       "--debug-forces" : { "type": "optional", "description": "output a file containing the forces due to the bias evaluated using numerical derivatives and using the analytical derivatives implemented in plumed", "multiple": 0, "actionlink": "none"},
       "--debug-float" : { "type": "hidden", "description": "[yes/no] turns on the single precision version (to check float interface)", "multiple": 0, "actionlink": "none"},
       "--debug-dd" : { "type": "hidden", "description": "[yes/no] use a fake domain decomposition", "multiple": 0, "actionlink": "none"},
       "--debug-pd" : { "type": "hidden", "description": "[yes/no] use a fake particle decomposition", "multiple": 0, "actionlink": "none"},
       "--debug-grex" : { "type": "hidden", "description": "use a fake gromacs-like replica exchange, specify exchange stride", "multiple": 0, "actionlink": "none"},
       "--debug-grex-log" : { "type": "hidden", "description": "log file for debug=grex", "multiple": 0, "actionlink": "none"}
       }
     },
  "drr_tool": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/drr_tool",
    "module" : "drr",
    "description" : "Extract or merge the drrstate files.",
    "inputtype" : "command line args",
    "syntax" : {
       "--help/-h" : { "type": "flag", "description": " print this help", "multiple": 0, "actionlink": "none", "default": "off"},
       "--extract" : { "type": "optional", "description": "Extract drrstate file(s)", "multiple": 0, "actionlink": "none"},
       "--merge" : { "type": "optional", "description": "Merge eABF windows", "multiple": 0, "actionlink": "none"},
       "--merge_output" : { "type": "optional", "description": "The output filename of the merged result", "multiple": 0, "actionlink": "none"},
       "--divergence" : { "type": "optional", "description": "Calculate divergence of gradient field (experimental)", "multiple": 0, "actionlink": "none"},
       "--dump-fmt" : { "type": "optional", "description": " the format to use to dump the output", "multiple": 0, "actionlink": "none", "default": "%%f"},
       "--units" : { "type": "compulsory", "description": " the units of energy can be kj/mol, kcal/mol, j/mol, eV or the conversion factor from kj/mol", "multiple": 0, "actionlink": "none", "default": "kj/mol"},
       "-v" : { "type": "flag", "description": " Verbose output", "multiple": 0, "actionlink": "none", "default": "off"}
       }
     },
  "gen_example": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/gen_example",
    "module" : "cltools",
    "description" : "construct an example for the manual that users can interact with",
    "inputtype" : "command line args",
    "syntax" : {
       "--help/-h" : { "type": "flag", "description": " print this help", "multiple": 0, "actionlink": "none", "default": "off"},
       "--plumed" : { "type": "compulsory", "description": " convert the input in this file to the html manual", "multiple": 0, "actionlink": "none", "default": "plumed.dat"},
       "--out" : { "type": "compulsory", "description": " the file on which to output the example in html", "multiple": 0, "actionlink": "none", "default": "example.html"},
       "--name" : { "type": "compulsory", "description": " the name to use for this particular input", "multiple": 0, "actionlink": "none", "default": "ppp"},
       "--status" : { "type": "compulsory", "description": " whether or not the input file works", "multiple": 0, "actionlink": "none", "default": "nobadge"},
       "--multi" : { "type": "compulsory", "description": " set number of replicas for multi environment (needs MPI)", "multiple": 0, "actionlink": "none", "default": "0"}
       }
     },
  "gen_json": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/gen_json",
    "module" : "cltools",
    "description" : "print out a json file that contains the pluemd syntax",
    "inputtype" : "command line args",
    "syntax" : {
       "--help/-h" : { "type": "flag", "description": " print this help", "multiple": 0, "actionlink": "none", "default": "off"},
       "--actions" : { "type": "compulsory", "description": "a file containing one line descriptions of the various actions", "multiple": 0, "actionlink": "none"}
       }
     },
  "gentemplate": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/gentemplate",
    "module" : "cltools",
    "description" : "print out a template input for a particular action",
    "inputtype" : "command line args",
    "syntax" : {
       "--help/-h" : { "type": "flag", "description": " print this help", "multiple": 0, "actionlink": "none", "default": "off"},
       "--action" : { "type": "optional", "description": "print the template for this particular action", "multiple": 0, "actionlink": "none"},
       "--list" : { "type": "flag", "description": " print a list of the available actions", "multiple": 0, "actionlink": "none", "default": "off"},
       "--include-optional" : { "type": "flag", "description": " also print optional modifiers", "multiple": 0, "actionlink": "none", "default": "off"}
       }
     },
  "info": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/info",
    "module" : "cltools",
    "description" : "provide informations about plumed",
    "inputtype" : "command line args",
    "syntax" : {
       "--help/-h" : { "type": "flag", "description": " print this help", "multiple": 0, "actionlink": "none", "default": "off"},
       "--configuration" : { "type": "flag", "description": " prints the configuration file", "multiple": 0, "actionlink": "none", "default": "off"},
       "--root" : { "type": "flag", "description": " print the location of the root directory for the plumed source", "multiple": 0, "actionlink": "none", "default": "off"},
       "--user-doc" : { "type": "flag", "description": " print the location of user manual (html)", "multiple": 0, "actionlink": "none", "default": "off"},
       "--developer-doc" : { "type": "flag", "description": " print the location of user manual (html)", "multiple": 0, "actionlink": "none", "default": "off"},
       "--version" : { "type": "flag", "description": " print the version number", "multiple": 0, "actionlink": "none", "default": "off"},
       "--long-version" : { "type": "flag", "description": " print the version number (long version)", "multiple": 0, "actionlink": "none", "default": "off"},
       "--git-version" : { "type": "flag", "description": " print the version number (git version, if available)", "multiple": 0, "actionlink": "none", "default": "off"},
       "--include-dir" : { "type": "flag", "description": " print the location of the include dir", "multiple": 0, "actionlink": "none", "default": "off"},
       "--soext" : { "type": "flag", "description": " print the extension of shared libraries (so or dylib)", "multiple": 0, "actionlink": "none", "default": "off"}
       }
     },
  "kt": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/kt",
    "module" : "cltools",
    "description" : "print out the value of kT at a particular temperature",
    "inputtype" : "command line args",
    "syntax" : {
       "--help/-h" : { "type": "flag", "description": " print this help", "multiple": 0, "actionlink": "none", "default": "off"},
       "--temp" : { "type": "compulsory", "description": "print the manual for this particular action", "multiple": 0, "actionlink": "none"},
       "--units" : { "type": "compulsory", "description": " the units of energy can be kj/mol, kcal/mol, j/mol, eV or the conversion factor from kj/mol", "multiple": 0, "actionlink": "none", "default": "kj/mol"}
       }
     },
  "manual": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/manual",
    "module" : "cltools",
    "description" : "print out a description of the keywords for an action in html",
    "inputtype" : "command line args",
    "syntax" : {
       "--help/-h" : { "type": "flag", "description": " print this help", "multiple": 0, "actionlink": "none", "default": "off"},
       "--action" : { "type": "compulsory", "description": "print the manual for this particular action", "multiple": 0, "actionlink": "none"},
       "--vim" : { "type": "flag", "description": " print the keywords in vim syntax", "multiple": 0, "actionlink": "none", "default": "off"},
       "--spelling" : { "type": "flag", "description": " print a list of the keywords and component names for the spell checker", "multiple": 0, "actionlink": "none", "default": "off"}
       }
     },
  "pathtools": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/pathtools",
    "module" : "mapping",
    "description" : "print out a description of the keywords for an action in html",
    "inputtype" : "command line args",
    "syntax" : {
       "--help/-h" : { "type": "flag", "description": " print this help", "multiple": 0, "actionlink": "none", "default": "off"},
       "--start" : { "type": "atoms", "description": "a pdb file that contains the structure for the initial frame of your path", "multiple": 1, "actionlink": "none"},
       "--end" : { "type": "atoms", "description": "a pdb file that contains the structure for the final frame of your path", "multiple": 1, "actionlink": "none"},
       "--path" : { "type": "atoms", "description": "a pdb file that contains an initial path in which the frames are not equally spaced", "multiple": 1, "actionlink": "none"},
       "--arg" : { "type": "optional", "description": "the arguments that should be read in from the pdb files", "multiple": 0, "actionlink": "none"},
       "--fixed" : { "type": "compulsory", "description": " the frames to fix when constructing the path using --path", "multiple": 0, "actionlink": "none", "default": "0"},
       "--metric" : { "type": "compulsory", "description": "the measure to use to calculate the distance between frames", "multiple": 0, "actionlink": "none"},
       "--out" : { "type": "compulsory", "description": "the name of the file on which to output your path", "multiple": 0, "actionlink": "none"},
       "--arg-fmt" : { "type": "compulsory", "description": " the format to use for argument values in your frames", "multiple": 0, "actionlink": "none", "default": "%f"},
       "--tolerance" : { "type": "compulsory", "description": " the tolerance to use for the algorithm that is used to re-parameterize the path", "multiple": 0, "actionlink": "none", "default": "1E-4"},
       "--nframes-before-start" : { "type": "compulsory", "description": " the number of frames to include in the path before the first frame", "multiple": 0, "actionlink": "none", "default": "1"},
       "--nframes" : { "type": "compulsory", "description": " the number of frames between the start and end frames in your path", "multiple": 0, "actionlink": "none", "default": "1"},
       "--nframes-after-end" : { "type": "compulsory", "description": " the number of frames to put after the last frame of your path", "multiple": 0, "actionlink": "none", "default": "1"}
       }
     },
  "pdbrenumber": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/pdbrenumber",
    "module" : "cltools",
    "description" : "Modify atom numbers in a PDB, possibly using hybrid-36 coding",
    "inputtype" : "command line args",
    "syntax" : {
       "--help/-h" : { "type": "flag", "description": " print this help", "multiple": 0, "actionlink": "none", "default": "off"},
       "--ipdb" : { "type": "compulsory", "description": "specify the name of the input PDB file", "multiple": 0, "actionlink": "none"},
       "--opdb" : { "type": "compulsory", "description": "specify the name of the output PDB file", "multiple": 0, "actionlink": "none"},
       "--firstatomnumber" : { "type": "optional", "description": "specify the desired serial number of the first atom of the output file", "multiple": 0, "actionlink": "none"},
       "--atomnumbers" : { "type": "optional", "description": "specify the desired serial numbers of the atoms of the output file using a separate list", "multiple": 0, "actionlink": "none"}
       }
     },
  "pesmd": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/pesmd",
    "module" : "cltools",
    "description" : "Langevin dynamics on PLUMED energy landscape",
    "inputtype" : "file",
    "syntax" : {
       "--help/-h" : { "type": "flag", "description": " print this help", "multiple": 0, "actionlink": "none", "default": "off"},
       "nstep" : { "type": "compulsory", "description": "The number of steps of dynamics you want to run", "multiple": 0, "actionlink": "none"},
       "temperature" : { "type": "compulsory", "description": " the temperature at which you wish to run the simulation in LJ units", "multiple": 0, "actionlink": "none", "default": "NVE"},
       "friction" : { "type": "compulsory", "description": " The friction (in LJ units) for the Langevin thermostat that is used to keep the temperature constant", "multiple": 0, "actionlink": "none", "default": "off"},
       "tstep" : { "type": "compulsory", "description": " the integration timestep in LJ units", "multiple": 0, "actionlink": "none", "default": "0.005"},
       "dimension" : { "type": "compulsory", "description": "the dimension of your energy landscape", "multiple": 0, "actionlink": "none"},
       "plumed" : { "type": "compulsory", "description": " the name of the plumed input file containing the potential", "multiple": 0, "actionlink": "none", "default": "plumed.dat"},
       "ipos" : { "type": "compulsory", "description": " the initial position of the system", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "idum" : { "type": "compulsory", "description": " The random number seed", "multiple": 0, "actionlink": "none", "default": "0"},
       "periodic" : { "type": "flag", "description": " are your input coordinates periodic", "multiple": 0, "actionlink": "none", "default": "off"},
       "min" : { "type": "optional", "description": "minimum value the coordinates can take for a periodic domain", "multiple": 0, "actionlink": "none"},
       "max" : { "type": "optional", "description": "maximum value the coordinates can take for a periodic domain", "multiple": 0, "actionlink": "none"}
       }
     },
  "plotswitch": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/plotswitch",
    "module" : "cltools",
    "description" : "(no description available)",
    "inputtype" : "command line args",
    "syntax" : {
       "--help/-h" : { "type": "flag", "description": " print this help", "multiple": 0, "actionlink": "none", "default": "off"},
       "--switch" : { "type": "compulsory", "description": " the input to pass to the switching function, please remeber the quotes", "multiple": 0, "actionlink": "none", "default": "RATIONAL NN=6 R_0=1.0"},
       "--steps" : { "type": "compulsory", "description": " the number of steps between 0 and R_O, or in the specified interval", "multiple": 0, "actionlink": "none", "default": "50"},
       "--from" : { "type": "compulsory", "description": " the start of the interval, if negative will be set to 0", "multiple": 0, "actionlink": "none", "default": "-1"},
       "--to" : { "type": "compulsory", "description": " the end of the interval, will be D_MAX or 2*R_0 if D_MAX is not set", "multiple": 0, "actionlink": "none", "default": "-1"},
       "--plotprecision" : { "type": "compulsory", "description": " the precision to use for the tabulated results", "multiple": 0, "actionlink": "none", "default": "8"},
       "--rationalR_0" : { "type": "compulsory", "description": " The r_0 parameter of the switching function, this will activate the --rational options, note that this will ignore the --switch option silently", "multiple": 0, "actionlink": "none", "default": "-1"},
       "--rationalNN" : { "type": "compulsory", "description": " The n parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "6"},
       "--rationalMM" : { "type": "compulsory", "description": " The m parameter of the switching function; 0 implies 2*NN", "multiple": 0, "actionlink": "none", "default": "0"},
       "--rationalD_0" : { "type": "compulsory", "description": " The d_0 parameter of the switching function", "multiple": 0, "actionlink": "none", "default": "0.0"},
       "--nosquare" : { "type": "flag", "description": " use calculate instead of calculateSqr", "multiple": 0, "actionlink": "none", "default": "off"},
       "--centerrange" : { "type": "compulsory", "description": " centers the visualization in R_0 in a range given epsilons times r_0, note that specifying this will overide all the other range options", "multiple": 0, "actionlink": "none", "default": "-1"}
       }
     },
  "show_graph": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/show_graph",
    "module" : "cltools",
    "description" : "generate a graph showing how data flows through a PLUMED action set",
    "inputtype" : "command line args",
    "syntax" : {
       "--help/-h" : { "type": "flag", "description": " print this help", "multiple": 0, "actionlink": "none", "default": "off"},
       "--plumed" : { "type": "compulsory", "description": " the plumed input that we are generating the graph for", "multiple": 0, "actionlink": "none", "default": "plumed.dat"},
       "--out" : { "type": "compulsory", "description": " the dot file containing the graph that has been generated", "multiple": 0, "actionlink": "none", "default": "graph.md"},
       "--force" : { "type": "flag", "description": " print a graph that shows how forces are passed through the actions", "multiple": 0, "actionlink": "none", "default": "off"}
       }
     },
  "simplemd": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/simplemd",
    "module" : "cltools",
    "description" : "run lj code",
    "inputtype" : "file",
    "syntax" : {
       "--help/-h" : { "type": "flag", "description": " print this help", "multiple": 0, "actionlink": "none", "default": "off"},
       "nstep" : { "type": "compulsory", "description": "The number of steps of dynamics you want to run", "multiple": 0, "actionlink": "none"},
       "temperature" : { "type": "compulsory", "description": " the temperature at which you wish to run the simulation in LJ units", "multiple": 0, "actionlink": "none", "default": "NVE"},
       "friction" : { "type": "compulsory", "description": " The friction (in LJ units) for the Langevin thermostat that is used to keep the temperature constant", "multiple": 0, "actionlink": "none", "default": "off"},
       "tstep" : { "type": "compulsory", "description": " the integration timestep in LJ units", "multiple": 0, "actionlink": "none", "default": "0.005"},
       "epsilon" : { "type": "compulsory", "description": " LJ parameter", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "sigma" : { "type": "compulsory", "description": " LJ parameter", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "inputfile" : { "type": "compulsory", "description": "An xyz file containing the initial configuration of the system", "multiple": 0, "actionlink": "none"},
       "forcecutoff" : { "type": "compulsory", "description": " ", "multiple": 0, "actionlink": "none", "default": "2.5"},
       "listcutoff" : { "type": "compulsory", "description": " ", "multiple": 0, "actionlink": "none", "default": "3.0"},
       "outputfile" : { "type": "compulsory", "description": "An output xyz file containing the final configuration of the system", "multiple": 0, "actionlink": "none"},
       "nconfig" : { "type": "compulsory", "description": " The frequency with which to write configurations to the trajectory file followed by the name of the trajectory file", "multiple": 0, "actionlink": "none", "default": "10"},
       "nstat" : { "type": "compulsory", "description": " The frequency with which to write the statistics to the statistics file followed by the name of the statistics file", "multiple": 0, "actionlink": "none", "default": "1"},
       "idum" : { "type": "compulsory", "description": " The random number seed", "multiple": 0, "actionlink": "none", "default": "0"},
       "ndim" : { "type": "compulsory", "description": " The dimensionality of the system (some interesting LJ clusters are two dimensional)", "multiple": 0, "actionlink": "none", "default": "3"},
       "wrapatoms" : { "type": "compulsory", "description": " If true, atomic coordinates are written wrapped in minimal cell", "multiple": 0, "actionlink": "none", "default": "false"}
       }
     },
  "sum_hills": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/sum_hills",
    "module" : "cltools",
    "description" : "sum the hills with  plumed",
    "inputtype" : "command line args",
    "syntax" : {
       "--help/-h" : { "type": "flag", "description": " print this help", "multiple": 0, "actionlink": "none", "default": "off"},
       "--help-debug" : { "type": "flag", "description": " print special options that can be used to create regtests", "multiple": 0, "actionlink": "none", "default": "off"},
       "--hills" : { "type": "optional", "description": "specify the name of the hills file", "multiple": 0, "actionlink": "none"},
       "--histo" : { "type": "optional", "description": "specify the name of the file for histogram a colvar/hills file is good", "multiple": 0, "actionlink": "none"},
       "--stride" : { "type": "optional", "description": "specify the stride for integrating hills file (default 0=never)", "multiple": 0, "actionlink": "none"},
       "--min" : { "type": "optional", "description": "the lower bounds for the grid", "multiple": 0, "actionlink": "none"},
       "--max" : { "type": "optional", "description": "the upper bounds for the grid", "multiple": 0, "actionlink": "none"},
       "--bin" : { "type": "optional", "description": "the number of bins for the grid", "multiple": 0, "actionlink": "none"},
       "--spacing" : { "type": "optional", "description": "grid spacing, alternative to the number of bins", "multiple": 0, "actionlink": "none"},
       "--idw" : { "type": "optional", "description": "specify the variables to be used for the free-energy/histogram (default is all)", "multiple": 0, "actionlink": "none"},
       "--outfile" : { "type": "optional", "description": "specify the output file for sumhills", "multiple": 0, "actionlink": "none"},
       "--outhisto" : { "type": "optional", "description": "specify the output file for the histogram", "multiple": 0, "actionlink": "none"},
       "--kt" : { "type": "optional", "description": "specify temperature in energy units for integrating out variables", "multiple": 0, "actionlink": "none"},
       "--sigma" : { "type": "optional", "description": " a vector that specify the sigma for binning (only needed when doing histogram ", "multiple": 0, "actionlink": "none"},
       "--negbias" : { "type": "flag", "description": "  print the negative bias instead of the free energy (only needed with well tempered runs and flexible hills) ", "multiple": 0, "actionlink": "none", "default": "off"},
       "--nohistory" : { "type": "flag", "description": "  to be used with --stride:  it splits the bias/histogram in pieces without previous history ", "multiple": 0, "actionlink": "none", "default": "off"},
       "--mintozero" : { "type": "flag", "description": "  it translate all the minimum value in bias/histogram to zero (useful to compare results) ", "multiple": 0, "actionlink": "none", "default": "off"},
       "--fmt" : { "type": "optional", "description": "specify the output format", "multiple": 0, "actionlink": "none"}
       }
     },
  "ves_md_linearexpansion": {
    "hyperlink" : "https://www.plumed.org/doc-master/user-doc/html/ves_md_linearexpansion",
    "module" : "ves",
    "description" : "MD of a one particle on a linear expansion PES",
    "inputtype" : "file",
    "syntax" : {
       "--help/-h" : { "type": "flag", "description": " print this help", "multiple": 0, "actionlink": "none", "default": "off"},
       "nstep" : { "type": "compulsory", "description": " The number of steps of dynamics you want to run", "multiple": 0, "actionlink": "none", "default": "10"},
       "tstep" : { "type": "compulsory", "description": " The integration timestep", "multiple": 0, "actionlink": "none", "default": "0.005"},
       "temperature" : { "type": "compulsory", "description": " The temperature to perform the simulation at", "multiple": 0, "actionlink": "none", "default": "1.0"},
       "friction" : { "type": "compulsory", "description": " The friction of the Langevin thermostat", "multiple": 0, "actionlink": "none", "default": "10."},
       "random_seed" : { "type": "compulsory", "description": " Value of random number seed", "multiple": 0, "actionlink": "none", "default": "5293818"},
       "plumed_input" : { "type": "compulsory", "description": " The name of the plumed input file(s)", "multiple": 0, "actionlink": "none", "default": "plumed.dat"},
       "dimension" : { "type": "compulsory", "description": " Number of dimensions, supports 1 to 3", "multiple": 0, "actionlink": "none", "default": "1"},
       "initial_position" : { "type": "compulsory", "description": "Initial position of the particle", "multiple": 0, "actionlink": "none"},
       "replicas" : { "type": "compulsory", "description": " Number of replicas", "multiple": 0, "actionlink": "none", "default": "1"},
       "basis_functions_1" : { "type": "compulsory", "description": "Basis functions for dimension 1", "multiple": 0, "actionlink": "none"},
       "basis_functions_2" : { "type": "optional", "description": "Basis functions for dimension 2 if needed", "multiple": 0, "actionlink": "none"},
       "basis_functions_3" : { "type": "optional", "description": "Basis functions for dimension 3 if needed", "multiple": 0, "actionlink": "none"},
       "input_coeffs" : { "type": "compulsory", "description": " Filename of the input coefficient file for the potential", "multiple": 0, "actionlink": "none", "default": "potential-coeffs.in.data"},
       "output_coeffs" : { "type": "compulsory", "description": " Filename of the output coefficient file for the potential", "multiple": 0, "actionlink": "none", "default": "potential-coeffs.out.data"},
       "output_coeffs_fmt" : { "type": "compulsory", "description": " Format of the output coefficient file for the potential", "multiple": 0, "actionlink": "none", "default": "%30.16e"},
       "coeffs_prefactor" : { "type": "optional", "description": "prefactor for multiplying the coefficients with", "multiple": 0, "actionlink": "none"},
       "template_coeffs_file" : { "type": "optional", "description": "only generate a template coefficient file with the filename given and exit", "multiple": 0, "actionlink": "none"},
       "output_potential_grid" : { "type": "compulsory", "description": " The number of grid points used for the potential and histogram output files", "multiple": 0, "actionlink": "none", "default": "100"},
       "output_potential" : { "type": "compulsory", "description": " Filename of the potential output file", "multiple": 0, "actionlink": "none", "default": "potential.data"},
       "output_histogram" : { "type": "compulsory", "description": " Filename of the histogram output file", "multiple": 0, "actionlink": "none", "default": "histogram.data"}
       }
     }
  }
}
